// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: com/google/protobuf/util/json_test.proto

package com.google.protobuf.util;

public final class JsonTestProto {
  private JsonTestProto() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface TestAllTypesOrBuilder extends
      // @@protoc_insertion_point(interface_extends:json_test.TestAllTypes)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>int32 optional_int32 = 1;</code>
     */
    int getOptionalInt32();

    /**
     * <code>int64 optional_int64 = 2;</code>
     */
    long getOptionalInt64();

    /**
     * <code>uint32 optional_uint32 = 3;</code>
     */
    int getOptionalUint32();

    /**
     * <code>uint64 optional_uint64 = 4;</code>
     */
    long getOptionalUint64();

    /**
     * <code>sint32 optional_sint32 = 5;</code>
     */
    int getOptionalSint32();

    /**
     * <code>sint64 optional_sint64 = 6;</code>
     */
    long getOptionalSint64();

    /**
     * <code>fixed32 optional_fixed32 = 7;</code>
     */
    int getOptionalFixed32();

    /**
     * <code>fixed64 optional_fixed64 = 8;</code>
     */
    long getOptionalFixed64();

    /**
     * <code>sfixed32 optional_sfixed32 = 9;</code>
     */
    int getOptionalSfixed32();

    /**
     * <code>sfixed64 optional_sfixed64 = 10;</code>
     */
    long getOptionalSfixed64();

    /**
     * <code>float optional_float = 11;</code>
     */
    float getOptionalFloat();

    /**
     * <code>double optional_double = 12;</code>
     */
    double getOptionalDouble();

    /**
     * <code>bool optional_bool = 13;</code>
     */
    boolean getOptionalBool();

    /**
     * <code>string optional_string = 14;</code>
     */
    java.lang.String getOptionalString();
    /**
     * <code>string optional_string = 14;</code>
     */
    com.google.protobuf.ByteString
        getOptionalStringBytes();

    /**
     * <code>bytes optional_bytes = 15;</code>
     */
    com.google.protobuf.ByteString getOptionalBytes();

    /**
     * <code>.json_test.TestAllTypes.NestedMessage optional_nested_message = 18;</code>
     */
    boolean hasOptionalNestedMessage();
    /**
     * <code>.json_test.TestAllTypes.NestedMessage optional_nested_message = 18;</code>
     */
    com.google.protobuf.util.JsonTestProto.TestAllTypes.NestedMessage getOptionalNestedMessage();
    /**
     * <code>.json_test.TestAllTypes.NestedMessage optional_nested_message = 18;</code>
     */
    com.google.protobuf.util.JsonTestProto.TestAllTypes.NestedMessageOrBuilder getOptionalNestedMessageOrBuilder();

    /**
     * <code>.json_test.TestAllTypes.NestedEnum optional_nested_enum = 21;</code>
     */
    int getOptionalNestedEnumValue();
    /**
     * <code>.json_test.TestAllTypes.NestedEnum optional_nested_enum = 21;</code>
     */
    com.google.protobuf.util.JsonTestProto.TestAllTypes.NestedEnum getOptionalNestedEnum();

    /**
     * <pre>
     * Repeated
     * </pre>
     *
     * <code>repeated int32 repeated_int32 = 31;</code>
     */
    java.util.List<java.lang.Integer> getRepeatedInt32List();
    /**
     * <pre>
     * Repeated
     * </pre>
     *
     * <code>repeated int32 repeated_int32 = 31;</code>
     */
    int getRepeatedInt32Count();
    /**
     * <pre>
     * Repeated
     * </pre>
     *
     * <code>repeated int32 repeated_int32 = 31;</code>
     */
    int getRepeatedInt32(int index);

    /**
     * <code>repeated int64 repeated_int64 = 32;</code>
     */
    java.util.List<java.lang.Long> getRepeatedInt64List();
    /**
     * <code>repeated int64 repeated_int64 = 32;</code>
     */
    int getRepeatedInt64Count();
    /**
     * <code>repeated int64 repeated_int64 = 32;</code>
     */
    long getRepeatedInt64(int index);

    /**
     * <code>repeated uint32 repeated_uint32 = 33;</code>
     */
    java.util.List<java.lang.Integer> getRepeatedUint32List();
    /**
     * <code>repeated uint32 repeated_uint32 = 33;</code>
     */
    int getRepeatedUint32Count();
    /**
     * <code>repeated uint32 repeated_uint32 = 33;</code>
     */
    int getRepeatedUint32(int index);

    /**
     * <code>repeated uint64 repeated_uint64 = 34;</code>
     */
    java.util.List<java.lang.Long> getRepeatedUint64List();
    /**
     * <code>repeated uint64 repeated_uint64 = 34;</code>
     */
    int getRepeatedUint64Count();
    /**
     * <code>repeated uint64 repeated_uint64 = 34;</code>
     */
    long getRepeatedUint64(int index);

    /**
     * <code>repeated sint32 repeated_sint32 = 35;</code>
     */
    java.util.List<java.lang.Integer> getRepeatedSint32List();
    /**
     * <code>repeated sint32 repeated_sint32 = 35;</code>
     */
    int getRepeatedSint32Count();
    /**
     * <code>repeated sint32 repeated_sint32 = 35;</code>
     */
    int getRepeatedSint32(int index);

    /**
     * <code>repeated sint64 repeated_sint64 = 36;</code>
     */
    java.util.List<java.lang.Long> getRepeatedSint64List();
    /**
     * <code>repeated sint64 repeated_sint64 = 36;</code>
     */
    int getRepeatedSint64Count();
    /**
     * <code>repeated sint64 repeated_sint64 = 36;</code>
     */
    long getRepeatedSint64(int index);

    /**
     * <code>repeated fixed32 repeated_fixed32 = 37;</code>
     */
    java.util.List<java.lang.Integer> getRepeatedFixed32List();
    /**
     * <code>repeated fixed32 repeated_fixed32 = 37;</code>
     */
    int getRepeatedFixed32Count();
    /**
     * <code>repeated fixed32 repeated_fixed32 = 37;</code>
     */
    int getRepeatedFixed32(int index);

    /**
     * <code>repeated fixed64 repeated_fixed64 = 38;</code>
     */
    java.util.List<java.lang.Long> getRepeatedFixed64List();
    /**
     * <code>repeated fixed64 repeated_fixed64 = 38;</code>
     */
    int getRepeatedFixed64Count();
    /**
     * <code>repeated fixed64 repeated_fixed64 = 38;</code>
     */
    long getRepeatedFixed64(int index);

    /**
     * <code>repeated sfixed32 repeated_sfixed32 = 39;</code>
     */
    java.util.List<java.lang.Integer> getRepeatedSfixed32List();
    /**
     * <code>repeated sfixed32 repeated_sfixed32 = 39;</code>
     */
    int getRepeatedSfixed32Count();
    /**
     * <code>repeated sfixed32 repeated_sfixed32 = 39;</code>
     */
    int getRepeatedSfixed32(int index);

    /**
     * <code>repeated sfixed64 repeated_sfixed64 = 40;</code>
     */
    java.util.List<java.lang.Long> getRepeatedSfixed64List();
    /**
     * <code>repeated sfixed64 repeated_sfixed64 = 40;</code>
     */
    int getRepeatedSfixed64Count();
    /**
     * <code>repeated sfixed64 repeated_sfixed64 = 40;</code>
     */
    long getRepeatedSfixed64(int index);

    /**
     * <code>repeated float repeated_float = 41;</code>
     */
    java.util.List<java.lang.Float> getRepeatedFloatList();
    /**
     * <code>repeated float repeated_float = 41;</code>
     */
    int getRepeatedFloatCount();
    /**
     * <code>repeated float repeated_float = 41;</code>
     */
    float getRepeatedFloat(int index);

    /**
     * <code>repeated double repeated_double = 42;</code>
     */
    java.util.List<java.lang.Double> getRepeatedDoubleList();
    /**
     * <code>repeated double repeated_double = 42;</code>
     */
    int getRepeatedDoubleCount();
    /**
     * <code>repeated double repeated_double = 42;</code>
     */
    double getRepeatedDouble(int index);

    /**
     * <code>repeated bool repeated_bool = 43;</code>
     */
    java.util.List<java.lang.Boolean> getRepeatedBoolList();
    /**
     * <code>repeated bool repeated_bool = 43;</code>
     */
    int getRepeatedBoolCount();
    /**
     * <code>repeated bool repeated_bool = 43;</code>
     */
    boolean getRepeatedBool(int index);

    /**
     * <code>repeated string repeated_string = 44;</code>
     */
    java.util.List<java.lang.String>
        getRepeatedStringList();
    /**
     * <code>repeated string repeated_string = 44;</code>
     */
    int getRepeatedStringCount();
    /**
     * <code>repeated string repeated_string = 44;</code>
     */
    java.lang.String getRepeatedString(int index);
    /**
     * <code>repeated string repeated_string = 44;</code>
     */
    com.google.protobuf.ByteString
        getRepeatedStringBytes(int index);

    /**
     * <code>repeated bytes repeated_bytes = 45;</code>
     */
    java.util.List<com.google.protobuf.ByteString> getRepeatedBytesList();
    /**
     * <code>repeated bytes repeated_bytes = 45;</code>
     */
    int getRepeatedBytesCount();
    /**
     * <code>repeated bytes repeated_bytes = 45;</code>
     */
    com.google.protobuf.ByteString getRepeatedBytes(int index);

    /**
     * <code>repeated .json_test.TestAllTypes.NestedMessage repeated_nested_message = 48;</code>
     */
    java.util.List<com.google.protobuf.util.JsonTestProto.TestAllTypes.NestedMessage> 
        getRepeatedNestedMessageList();
    /**
     * <code>repeated .json_test.TestAllTypes.NestedMessage repeated_nested_message = 48;</code>
     */
    com.google.protobuf.util.JsonTestProto.TestAllTypes.NestedMessage getRepeatedNestedMessage(int index);
    /**
     * <code>repeated .json_test.TestAllTypes.NestedMessage repeated_nested_message = 48;</code>
     */
    int getRepeatedNestedMessageCount();
    /**
     * <code>repeated .json_test.TestAllTypes.NestedMessage repeated_nested_message = 48;</code>
     */
    java.util.List<? extends com.google.protobuf.util.JsonTestProto.TestAllTypes.NestedMessageOrBuilder> 
        getRepeatedNestedMessageOrBuilderList();
    /**
     * <code>repeated .json_test.TestAllTypes.NestedMessage repeated_nested_message = 48;</code>
     */
    com.google.protobuf.util.JsonTestProto.TestAllTypes.NestedMessageOrBuilder getRepeatedNestedMessageOrBuilder(
        int index);

    /**
     * <code>repeated .json_test.TestAllTypes.NestedEnum repeated_nested_enum = 51;</code>
     */
    java.util.List<com.google.protobuf.util.JsonTestProto.TestAllTypes.NestedEnum> getRepeatedNestedEnumList();
    /**
     * <code>repeated .json_test.TestAllTypes.NestedEnum repeated_nested_enum = 51;</code>
     */
    int getRepeatedNestedEnumCount();
    /**
     * <code>repeated .json_test.TestAllTypes.NestedEnum repeated_nested_enum = 51;</code>
     */
    com.google.protobuf.util.JsonTestProto.TestAllTypes.NestedEnum getRepeatedNestedEnum(int index);
    /**
     * <code>repeated .json_test.TestAllTypes.NestedEnum repeated_nested_enum = 51;</code>
     */
    java.util.List<java.lang.Integer>
    getRepeatedNestedEnumValueList();
    /**
     * <code>repeated .json_test.TestAllTypes.NestedEnum repeated_nested_enum = 51;</code>
     */
    int getRepeatedNestedEnumValue(int index);
  }
  /**
   * Protobuf type {@code json_test.TestAllTypes}
   */
  public  static final class TestAllTypes extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:json_test.TestAllTypes)
      TestAllTypesOrBuilder {
    // Use TestAllTypes.newBuilder() to construct.
    private TestAllTypes(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private TestAllTypes() {
      optionalInt32_ = 0;
      optionalInt64_ = 0L;
      optionalUint32_ = 0;
      optionalUint64_ = 0L;
      optionalSint32_ = 0;
      optionalSint64_ = 0L;
      optionalFixed32_ = 0;
      optionalFixed64_ = 0L;
      optionalSfixed32_ = 0;
      optionalSfixed64_ = 0L;
      optionalFloat_ = 0F;
      optionalDouble_ = 0D;
      optionalBool_ = false;
      optionalString_ = "";
      optionalBytes_ = com.google.protobuf.ByteString.EMPTY;
      optionalNestedEnum_ = 0;
      repeatedInt32_ = java.util.Collections.emptyList();
      repeatedInt64_ = java.util.Collections.emptyList();
      repeatedUint32_ = java.util.Collections.emptyList();
      repeatedUint64_ = java.util.Collections.emptyList();
      repeatedSint32_ = java.util.Collections.emptyList();
      repeatedSint64_ = java.util.Collections.emptyList();
      repeatedFixed32_ = java.util.Collections.emptyList();
      repeatedFixed64_ = java.util.Collections.emptyList();
      repeatedSfixed32_ = java.util.Collections.emptyList();
      repeatedSfixed64_ = java.util.Collections.emptyList();
      repeatedFloat_ = java.util.Collections.emptyList();
      repeatedDouble_ = java.util.Collections.emptyList();
      repeatedBool_ = java.util.Collections.emptyList();
      repeatedString_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      repeatedBytes_ = java.util.Collections.emptyList();
      repeatedNestedMessage_ = java.util.Collections.emptyList();
      repeatedNestedEnum_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private TestAllTypes(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      int mutable_bitField1_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 8: {

              optionalInt32_ = input.readInt32();
              break;
            }
            case 16: {

              optionalInt64_ = input.readInt64();
              break;
            }
            case 24: {

              optionalUint32_ = input.readUInt32();
              break;
            }
            case 32: {

              optionalUint64_ = input.readUInt64();
              break;
            }
            case 40: {

              optionalSint32_ = input.readSInt32();
              break;
            }
            case 48: {

              optionalSint64_ = input.readSInt64();
              break;
            }
            case 61: {

              optionalFixed32_ = input.readFixed32();
              break;
            }
            case 65: {

              optionalFixed64_ = input.readFixed64();
              break;
            }
            case 77: {

              optionalSfixed32_ = input.readSFixed32();
              break;
            }
            case 81: {

              optionalSfixed64_ = input.readSFixed64();
              break;
            }
            case 93: {

              optionalFloat_ = input.readFloat();
              break;
            }
            case 97: {

              optionalDouble_ = input.readDouble();
              break;
            }
            case 104: {

              optionalBool_ = input.readBool();
              break;
            }
            case 114: {
              java.lang.String s = input.readStringRequireUtf8();

              optionalString_ = s;
              break;
            }
            case 122: {

              optionalBytes_ = input.readBytes();
              break;
            }
            case 146: {
              com.google.protobuf.util.JsonTestProto.TestAllTypes.NestedMessage.Builder subBuilder = null;
              if (optionalNestedMessage_ != null) {
                subBuilder = optionalNestedMessage_.toBuilder();
              }
              optionalNestedMessage_ = input.readMessage(com.google.protobuf.util.JsonTestProto.TestAllTypes.NestedMessage.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(optionalNestedMessage_);
                optionalNestedMessage_ = subBuilder.buildPartial();
              }

              break;
            }
            case 168: {
              int rawValue = input.readEnum();

              optionalNestedEnum_ = rawValue;
              break;
            }
            case 248: {
              if (!((mutable_bitField0_ & 0x00020000) == 0x00020000)) {
                repeatedInt32_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00020000;
              }
              repeatedInt32_.add(input.readInt32());
              break;
            }
            case 250: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00020000) == 0x00020000) && input.getBytesUntilLimit() > 0) {
                repeatedInt32_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00020000;
              }
              while (input.getBytesUntilLimit() > 0) {
                repeatedInt32_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 256: {
              if (!((mutable_bitField0_ & 0x00040000) == 0x00040000)) {
                repeatedInt64_ = new java.util.ArrayList<java.lang.Long>();
                mutable_bitField0_ |= 0x00040000;
              }
              repeatedInt64_.add(input.readInt64());
              break;
            }
            case 258: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00040000) == 0x00040000) && input.getBytesUntilLimit() > 0) {
                repeatedInt64_ = new java.util.ArrayList<java.lang.Long>();
                mutable_bitField0_ |= 0x00040000;
              }
              while (input.getBytesUntilLimit() > 0) {
                repeatedInt64_.add(input.readInt64());
              }
              input.popLimit(limit);
              break;
            }
            case 264: {
              if (!((mutable_bitField0_ & 0x00080000) == 0x00080000)) {
                repeatedUint32_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00080000;
              }
              repeatedUint32_.add(input.readUInt32());
              break;
            }
            case 266: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00080000) == 0x00080000) && input.getBytesUntilLimit() > 0) {
                repeatedUint32_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00080000;
              }
              while (input.getBytesUntilLimit() > 0) {
                repeatedUint32_.add(input.readUInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 272: {
              if (!((mutable_bitField0_ & 0x00100000) == 0x00100000)) {
                repeatedUint64_ = new java.util.ArrayList<java.lang.Long>();
                mutable_bitField0_ |= 0x00100000;
              }
              repeatedUint64_.add(input.readUInt64());
              break;
            }
            case 274: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00100000) == 0x00100000) && input.getBytesUntilLimit() > 0) {
                repeatedUint64_ = new java.util.ArrayList<java.lang.Long>();
                mutable_bitField0_ |= 0x00100000;
              }
              while (input.getBytesUntilLimit() > 0) {
                repeatedUint64_.add(input.readUInt64());
              }
              input.popLimit(limit);
              break;
            }
            case 280: {
              if (!((mutable_bitField0_ & 0x00200000) == 0x00200000)) {
                repeatedSint32_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00200000;
              }
              repeatedSint32_.add(input.readSInt32());
              break;
            }
            case 282: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00200000) == 0x00200000) && input.getBytesUntilLimit() > 0) {
                repeatedSint32_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00200000;
              }
              while (input.getBytesUntilLimit() > 0) {
                repeatedSint32_.add(input.readSInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 288: {
              if (!((mutable_bitField0_ & 0x00400000) == 0x00400000)) {
                repeatedSint64_ = new java.util.ArrayList<java.lang.Long>();
                mutable_bitField0_ |= 0x00400000;
              }
              repeatedSint64_.add(input.readSInt64());
              break;
            }
            case 290: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00400000) == 0x00400000) && input.getBytesUntilLimit() > 0) {
                repeatedSint64_ = new java.util.ArrayList<java.lang.Long>();
                mutable_bitField0_ |= 0x00400000;
              }
              while (input.getBytesUntilLimit() > 0) {
                repeatedSint64_.add(input.readSInt64());
              }
              input.popLimit(limit);
              break;
            }
            case 301: {
              if (!((mutable_bitField0_ & 0x00800000) == 0x00800000)) {
                repeatedFixed32_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00800000;
              }
              repeatedFixed32_.add(input.readFixed32());
              break;
            }
            case 298: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00800000) == 0x00800000) && input.getBytesUntilLimit() > 0) {
                repeatedFixed32_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00800000;
              }
              while (input.getBytesUntilLimit() > 0) {
                repeatedFixed32_.add(input.readFixed32());
              }
              input.popLimit(limit);
              break;
            }
            case 305: {
              if (!((mutable_bitField0_ & 0x01000000) == 0x01000000)) {
                repeatedFixed64_ = new java.util.ArrayList<java.lang.Long>();
                mutable_bitField0_ |= 0x01000000;
              }
              repeatedFixed64_.add(input.readFixed64());
              break;
            }
            case 306: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x01000000) == 0x01000000) && input.getBytesUntilLimit() > 0) {
                repeatedFixed64_ = new java.util.ArrayList<java.lang.Long>();
                mutable_bitField0_ |= 0x01000000;
              }
              while (input.getBytesUntilLimit() > 0) {
                repeatedFixed64_.add(input.readFixed64());
              }
              input.popLimit(limit);
              break;
            }
            case 317: {
              if (!((mutable_bitField0_ & 0x02000000) == 0x02000000)) {
                repeatedSfixed32_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x02000000;
              }
              repeatedSfixed32_.add(input.readSFixed32());
              break;
            }
            case 314: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x02000000) == 0x02000000) && input.getBytesUntilLimit() > 0) {
                repeatedSfixed32_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x02000000;
              }
              while (input.getBytesUntilLimit() > 0) {
                repeatedSfixed32_.add(input.readSFixed32());
              }
              input.popLimit(limit);
              break;
            }
            case 321: {
              if (!((mutable_bitField0_ & 0x04000000) == 0x04000000)) {
                repeatedSfixed64_ = new java.util.ArrayList<java.lang.Long>();
                mutable_bitField0_ |= 0x04000000;
              }
              repeatedSfixed64_.add(input.readSFixed64());
              break;
            }
            case 322: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x04000000) == 0x04000000) && input.getBytesUntilLimit() > 0) {
                repeatedSfixed64_ = new java.util.ArrayList<java.lang.Long>();
                mutable_bitField0_ |= 0x04000000;
              }
              while (input.getBytesUntilLimit() > 0) {
                repeatedSfixed64_.add(input.readSFixed64());
              }
              input.popLimit(limit);
              break;
            }
            case 333: {
              if (!((mutable_bitField0_ & 0x08000000) == 0x08000000)) {
                repeatedFloat_ = new java.util.ArrayList<java.lang.Float>();
                mutable_bitField0_ |= 0x08000000;
              }
              repeatedFloat_.add(input.readFloat());
              break;
            }
            case 330: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x08000000) == 0x08000000) && input.getBytesUntilLimit() > 0) {
                repeatedFloat_ = new java.util.ArrayList<java.lang.Float>();
                mutable_bitField0_ |= 0x08000000;
              }
              while (input.getBytesUntilLimit() > 0) {
                repeatedFloat_.add(input.readFloat());
              }
              input.popLimit(limit);
              break;
            }
            case 337: {
              if (!((mutable_bitField0_ & 0x10000000) == 0x10000000)) {
                repeatedDouble_ = new java.util.ArrayList<java.lang.Double>();
                mutable_bitField0_ |= 0x10000000;
              }
              repeatedDouble_.add(input.readDouble());
              break;
            }
            case 338: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x10000000) == 0x10000000) && input.getBytesUntilLimit() > 0) {
                repeatedDouble_ = new java.util.ArrayList<java.lang.Double>();
                mutable_bitField0_ |= 0x10000000;
              }
              while (input.getBytesUntilLimit() > 0) {
                repeatedDouble_.add(input.readDouble());
              }
              input.popLimit(limit);
              break;
            }
            case 344: {
              if (!((mutable_bitField0_ & 0x20000000) == 0x20000000)) {
                repeatedBool_ = new java.util.ArrayList<java.lang.Boolean>();
                mutable_bitField0_ |= 0x20000000;
              }
              repeatedBool_.add(input.readBool());
              break;
            }
            case 346: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x20000000) == 0x20000000) && input.getBytesUntilLimit() > 0) {
                repeatedBool_ = new java.util.ArrayList<java.lang.Boolean>();
                mutable_bitField0_ |= 0x20000000;
              }
              while (input.getBytesUntilLimit() > 0) {
                repeatedBool_.add(input.readBool());
              }
              input.popLimit(limit);
              break;
            }
            case 354: {
              java.lang.String s = input.readStringRequireUtf8();
              if (!((mutable_bitField0_ & 0x40000000) == 0x40000000)) {
                repeatedString_ = new com.google.protobuf.LazyStringArrayList();
                mutable_bitField0_ |= 0x40000000;
              }
              repeatedString_.add(s);
              break;
            }
            case 362: {
              if (!((mutable_bitField0_ & 0x80000000) == 0x80000000)) {
                repeatedBytes_ = new java.util.ArrayList<com.google.protobuf.ByteString>();
                mutable_bitField0_ |= 0x80000000;
              }
              repeatedBytes_.add(input.readBytes());
              break;
            }
            case 386: {
              if (!((mutable_bitField1_ & 0x00000001) == 0x00000001)) {
                repeatedNestedMessage_ = new java.util.ArrayList<com.google.protobuf.util.JsonTestProto.TestAllTypes.NestedMessage>();
                mutable_bitField1_ |= 0x00000001;
              }
              repeatedNestedMessage_.add(
                  input.readMessage(com.google.protobuf.util.JsonTestProto.TestAllTypes.NestedMessage.parser(), extensionRegistry));
              break;
            }
            case 408: {
              int rawValue = input.readEnum();
              if (!((mutable_bitField1_ & 0x00000002) == 0x00000002)) {
                repeatedNestedEnum_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField1_ |= 0x00000002;
              }
              repeatedNestedEnum_.add(rawValue);
              break;
            }
            case 410: {
              int length = input.readRawVarint32();
              int oldLimit = input.pushLimit(length);
              while(input.getBytesUntilLimit() > 0) {
                int rawValue = input.readEnum();
                if (!((mutable_bitField1_ & 0x00000002) == 0x00000002)) {
                  repeatedNestedEnum_ = new java.util.ArrayList<java.lang.Integer>();
                  mutable_bitField1_ |= 0x00000002;
                }
                repeatedNestedEnum_.add(rawValue);
              }
              input.popLimit(oldLimit);
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00020000) == 0x00020000)) {
          repeatedInt32_ = java.util.Collections.unmodifiableList(repeatedInt32_);
        }
        if (((mutable_bitField0_ & 0x00040000) == 0x00040000)) {
          repeatedInt64_ = java.util.Collections.unmodifiableList(repeatedInt64_);
        }
        if (((mutable_bitField0_ & 0x00080000) == 0x00080000)) {
          repeatedUint32_ = java.util.Collections.unmodifiableList(repeatedUint32_);
        }
        if (((mutable_bitField0_ & 0x00100000) == 0x00100000)) {
          repeatedUint64_ = java.util.Collections.unmodifiableList(repeatedUint64_);
        }
        if (((mutable_bitField0_ & 0x00200000) == 0x00200000)) {
          repeatedSint32_ = java.util.Collections.unmodifiableList(repeatedSint32_);
        }
        if (((mutable_bitField0_ & 0x00400000) == 0x00400000)) {
          repeatedSint64_ = java.util.Collections.unmodifiableList(repeatedSint64_);
        }
        if (((mutable_bitField0_ & 0x00800000) == 0x00800000)) {
          repeatedFixed32_ = java.util.Collections.unmodifiableList(repeatedFixed32_);
        }
        if (((mutable_bitField0_ & 0x01000000) == 0x01000000)) {
          repeatedFixed64_ = java.util.Collections.unmodifiableList(repeatedFixed64_);
        }
        if (((mutable_bitField0_ & 0x02000000) == 0x02000000)) {
          repeatedSfixed32_ = java.util.Collections.unmodifiableList(repeatedSfixed32_);
        }
        if (((mutable_bitField0_ & 0x04000000) == 0x04000000)) {
          repeatedSfixed64_ = java.util.Collections.unmodifiableList(repeatedSfixed64_);
        }
        if (((mutable_bitField0_ & 0x08000000) == 0x08000000)) {
          repeatedFloat_ = java.util.Collections.unmodifiableList(repeatedFloat_);
        }
        if (((mutable_bitField0_ & 0x10000000) == 0x10000000)) {
          repeatedDouble_ = java.util.Collections.unmodifiableList(repeatedDouble_);
        }
        if (((mutable_bitField0_ & 0x20000000) == 0x20000000)) {
          repeatedBool_ = java.util.Collections.unmodifiableList(repeatedBool_);
        }
        if (((mutable_bitField0_ & 0x40000000) == 0x40000000)) {
          repeatedString_ = repeatedString_.getUnmodifiableView();
        }
        if (((mutable_bitField0_ & 0x80000000) == 0x80000000)) {
          repeatedBytes_ = java.util.Collections.unmodifiableList(repeatedBytes_);
        }
        if (((mutable_bitField1_ & 0x00000001) == 0x00000001)) {
          repeatedNestedMessage_ = java.util.Collections.unmodifiableList(repeatedNestedMessage_);
        }
        if (((mutable_bitField1_ & 0x00000002) == 0x00000002)) {
          repeatedNestedEnum_ = java.util.Collections.unmodifiableList(repeatedNestedEnum_);
        }
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.google.protobuf.util.JsonTestProto.internal_static_json_test_TestAllTypes_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.protobuf.util.JsonTestProto.internal_static_json_test_TestAllTypes_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.protobuf.util.JsonTestProto.TestAllTypes.class, com.google.protobuf.util.JsonTestProto.TestAllTypes.Builder.class);
    }

    /**
     * Protobuf enum {@code json_test.TestAllTypes.NestedEnum}
     */
    public enum NestedEnum
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>FOO = 0;</code>
       */
      FOO(0),
      /**
       * <code>BAR = 1;</code>
       */
      BAR(1),
      /**
       * <code>BAZ = 2;</code>
       */
      BAZ(2),
      UNRECOGNIZED(-1),
      ;

      /**
       * <code>FOO = 0;</code>
       */
      public static final int FOO_VALUE = 0;
      /**
       * <code>BAR = 1;</code>
       */
      public static final int BAR_VALUE = 1;
      /**
       * <code>BAZ = 2;</code>
       */
      public static final int BAZ_VALUE = 2;


      public final int getNumber() {
        if (this == UNRECOGNIZED) {
          throw new java.lang.IllegalArgumentException(
              "Can't get the number of an unknown enum value.");
        }
        return value;
      }

      /**
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static NestedEnum valueOf(int value) {
        return forNumber(value);
      }

      public static NestedEnum forNumber(int value) {
        switch (value) {
          case 0: return FOO;
          case 1: return BAR;
          case 2: return BAZ;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<NestedEnum>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          NestedEnum> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<NestedEnum>() {
              public NestedEnum findValueByNumber(int number) {
                return NestedEnum.forNumber(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(ordinal());
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return com.google.protobuf.util.JsonTestProto.TestAllTypes.getDescriptor().getEnumTypes().get(0);
      }

      private static final NestedEnum[] VALUES = values();

      public static NestedEnum valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        if (desc.getIndex() == -1) {
          return UNRECOGNIZED;
        }
        return VALUES[desc.getIndex()];
      }

      private final int value;

      private NestedEnum(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:json_test.TestAllTypes.NestedEnum)
    }

    public interface NestedMessageOrBuilder extends
        // @@protoc_insertion_point(interface_extends:json_test.TestAllTypes.NestedMessage)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>int32 value = 1;</code>
       */
      int getValue();
    }
    /**
     * Protobuf type {@code json_test.TestAllTypes.NestedMessage}
     */
    public  static final class NestedMessage extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:json_test.TestAllTypes.NestedMessage)
        NestedMessageOrBuilder {
      // Use NestedMessage.newBuilder() to construct.
      private NestedMessage(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private NestedMessage() {
        value_ = 0;
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
      }
      private NestedMessage(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        this();
        int mutable_bitField0_ = 0;
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!input.skipField(tag)) {
                  done = true;
                }
                break;
              }
              case 8: {

                value_ = input.readInt32();
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e).setUnfinishedMessage(this);
        } finally {
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.google.protobuf.util.JsonTestProto.internal_static_json_test_TestAllTypes_NestedMessage_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.google.protobuf.util.JsonTestProto.internal_static_json_test_TestAllTypes_NestedMessage_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.google.protobuf.util.JsonTestProto.TestAllTypes.NestedMessage.class, com.google.protobuf.util.JsonTestProto.TestAllTypes.NestedMessage.Builder.class);
      }

      public static final int VALUE_FIELD_NUMBER = 1;
      private int value_;
      /**
       * <code>int32 value = 1;</code>
       */
      public int getValue() {
        return value_;
      }

      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (value_ != 0) {
          output.writeInt32(1, value_);
        }
      }

      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (value_ != 0) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(1, value_);
        }
        memoizedSize = size;
        return size;
      }

      private static final long serialVersionUID = 0L;
      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof com.google.protobuf.util.JsonTestProto.TestAllTypes.NestedMessage)) {
          return super.equals(obj);
        }
        com.google.protobuf.util.JsonTestProto.TestAllTypes.NestedMessage other = (com.google.protobuf.util.JsonTestProto.TestAllTypes.NestedMessage) obj;

        boolean result = true;
        result = result && (getValue()
            == other.getValue());
        return result;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        hash = (37 * hash) + VALUE_FIELD_NUMBER;
        hash = (53 * hash) + getValue();
        hash = (29 * hash) + unknownFields.hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static com.google.protobuf.util.JsonTestProto.TestAllTypes.NestedMessage parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static com.google.protobuf.util.JsonTestProto.TestAllTypes.NestedMessage parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static com.google.protobuf.util.JsonTestProto.TestAllTypes.NestedMessage parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static com.google.protobuf.util.JsonTestProto.TestAllTypes.NestedMessage parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static com.google.protobuf.util.JsonTestProto.TestAllTypes.NestedMessage parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static com.google.protobuf.util.JsonTestProto.TestAllTypes.NestedMessage parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static com.google.protobuf.util.JsonTestProto.TestAllTypes.NestedMessage parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static com.google.protobuf.util.JsonTestProto.TestAllTypes.NestedMessage parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static com.google.protobuf.util.JsonTestProto.TestAllTypes.NestedMessage parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static com.google.protobuf.util.JsonTestProto.TestAllTypes.NestedMessage parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static com.google.protobuf.util.JsonTestProto.TestAllTypes.NestedMessage parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static com.google.protobuf.util.JsonTestProto.TestAllTypes.NestedMessage parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(com.google.protobuf.util.JsonTestProto.TestAllTypes.NestedMessage prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code json_test.TestAllTypes.NestedMessage}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:json_test.TestAllTypes.NestedMessage)
          com.google.protobuf.util.JsonTestProto.TestAllTypes.NestedMessageOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return com.google.protobuf.util.JsonTestProto.internal_static_json_test_TestAllTypes_NestedMessage_descriptor;
        }

        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return com.google.protobuf.util.JsonTestProto.internal_static_json_test_TestAllTypes_NestedMessage_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  com.google.protobuf.util.JsonTestProto.TestAllTypes.NestedMessage.class, com.google.protobuf.util.JsonTestProto.TestAllTypes.NestedMessage.Builder.class);
        }

        // Construct using com.google.protobuf.util.JsonTestProto.TestAllTypes.NestedMessage.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessageV3
                  .alwaysUseFieldBuilders) {
          }
        }
        public Builder clear() {
          super.clear();
          value_ = 0;

          return this;
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return com.google.protobuf.util.JsonTestProto.internal_static_json_test_TestAllTypes_NestedMessage_descriptor;
        }

        public com.google.protobuf.util.JsonTestProto.TestAllTypes.NestedMessage getDefaultInstanceForType() {
          return com.google.protobuf.util.JsonTestProto.TestAllTypes.NestedMessage.getDefaultInstance();
        }

        public com.google.protobuf.util.JsonTestProto.TestAllTypes.NestedMessage build() {
          com.google.protobuf.util.JsonTestProto.TestAllTypes.NestedMessage result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public com.google.protobuf.util.JsonTestProto.TestAllTypes.NestedMessage buildPartial() {
          com.google.protobuf.util.JsonTestProto.TestAllTypes.NestedMessage result = new com.google.protobuf.util.JsonTestProto.TestAllTypes.NestedMessage(this);
          result.value_ = value_;
          onBuilt();
          return result;
        }

        public Builder clone() {
          return (Builder) super.clone();
        }
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            Object value) {
          return (Builder) super.setField(field, value);
        }
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return (Builder) super.clearField(field);
        }
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return (Builder) super.clearOneof(oneof);
        }
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, Object value) {
          return (Builder) super.setRepeatedField(field, index, value);
        }
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            Object value) {
          return (Builder) super.addRepeatedField(field, value);
        }
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof com.google.protobuf.util.JsonTestProto.TestAllTypes.NestedMessage) {
            return mergeFrom((com.google.protobuf.util.JsonTestProto.TestAllTypes.NestedMessage)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(com.google.protobuf.util.JsonTestProto.TestAllTypes.NestedMessage other) {
          if (other == com.google.protobuf.util.JsonTestProto.TestAllTypes.NestedMessage.getDefaultInstance()) return this;
          if (other.getValue() != 0) {
            setValue(other.getValue());
          }
          onChanged();
          return this;
        }

        public final boolean isInitialized() {
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          com.google.protobuf.util.JsonTestProto.TestAllTypes.NestedMessage parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (com.google.protobuf.util.JsonTestProto.TestAllTypes.NestedMessage) e.getUnfinishedMessage();
            throw e.unwrapIOException();
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }

        private int value_ ;
        /**
         * <code>int32 value = 1;</code>
         */
        public int getValue() {
          return value_;
        }
        /**
         * <code>int32 value = 1;</code>
         */
        public Builder setValue(int value) {
          
          value_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>int32 value = 1;</code>
         */
        public Builder clearValue() {
          
          value_ = 0;
          onChanged();
          return this;
        }
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return this;
        }

        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return this;
        }


        // @@protoc_insertion_point(builder_scope:json_test.TestAllTypes.NestedMessage)
      }

      // @@protoc_insertion_point(class_scope:json_test.TestAllTypes.NestedMessage)
      private static final com.google.protobuf.util.JsonTestProto.TestAllTypes.NestedMessage DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new com.google.protobuf.util.JsonTestProto.TestAllTypes.NestedMessage();
      }

      public static com.google.protobuf.util.JsonTestProto.TestAllTypes.NestedMessage getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<NestedMessage>
          PARSER = new com.google.protobuf.AbstractParser<NestedMessage>() {
        public NestedMessage parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
            return new NestedMessage(input, extensionRegistry);
        }
      };

      public static com.google.protobuf.Parser<NestedMessage> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<NestedMessage> getParserForType() {
        return PARSER;
      }

      public com.google.protobuf.util.JsonTestProto.TestAllTypes.NestedMessage getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    private int bitField0_;
    public static final int OPTIONAL_INT32_FIELD_NUMBER = 1;
    private int optionalInt32_;
    /**
     * <code>int32 optional_int32 = 1;</code>
     */
    public int getOptionalInt32() {
      return optionalInt32_;
    }

    public static final int OPTIONAL_INT64_FIELD_NUMBER = 2;
    private long optionalInt64_;
    /**
     * <code>int64 optional_int64 = 2;</code>
     */
    public long getOptionalInt64() {
      return optionalInt64_;
    }

    public static final int OPTIONAL_UINT32_FIELD_NUMBER = 3;
    private int optionalUint32_;
    /**
     * <code>uint32 optional_uint32 = 3;</code>
     */
    public int getOptionalUint32() {
      return optionalUint32_;
    }

    public static final int OPTIONAL_UINT64_FIELD_NUMBER = 4;
    private long optionalUint64_;
    /**
     * <code>uint64 optional_uint64 = 4;</code>
     */
    public long getOptionalUint64() {
      return optionalUint64_;
    }

    public static final int OPTIONAL_SINT32_FIELD_NUMBER = 5;
    private int optionalSint32_;
    /**
     * <code>sint32 optional_sint32 = 5;</code>
     */
    public int getOptionalSint32() {
      return optionalSint32_;
    }

    public static final int OPTIONAL_SINT64_FIELD_NUMBER = 6;
    private long optionalSint64_;
    /**
     * <code>sint64 optional_sint64 = 6;</code>
     */
    public long getOptionalSint64() {
      return optionalSint64_;
    }

    public static final int OPTIONAL_FIXED32_FIELD_NUMBER = 7;
    private int optionalFixed32_;
    /**
     * <code>fixed32 optional_fixed32 = 7;</code>
     */
    public int getOptionalFixed32() {
      return optionalFixed32_;
    }

    public static final int OPTIONAL_FIXED64_FIELD_NUMBER = 8;
    private long optionalFixed64_;
    /**
     * <code>fixed64 optional_fixed64 = 8;</code>
     */
    public long getOptionalFixed64() {
      return optionalFixed64_;
    }

    public static final int OPTIONAL_SFIXED32_FIELD_NUMBER = 9;
    private int optionalSfixed32_;
    /**
     * <code>sfixed32 optional_sfixed32 = 9;</code>
     */
    public int getOptionalSfixed32() {
      return optionalSfixed32_;
    }

    public static final int OPTIONAL_SFIXED64_FIELD_NUMBER = 10;
    private long optionalSfixed64_;
    /**
     * <code>sfixed64 optional_sfixed64 = 10;</code>
     */
    public long getOptionalSfixed64() {
      return optionalSfixed64_;
    }

    public static final int OPTIONAL_FLOAT_FIELD_NUMBER = 11;
    private float optionalFloat_;
    /**
     * <code>float optional_float = 11;</code>
     */
    public float getOptionalFloat() {
      return optionalFloat_;
    }

    public static final int OPTIONAL_DOUBLE_FIELD_NUMBER = 12;
    private double optionalDouble_;
    /**
     * <code>double optional_double = 12;</code>
     */
    public double getOptionalDouble() {
      return optionalDouble_;
    }

    public static final int OPTIONAL_BOOL_FIELD_NUMBER = 13;
    private boolean optionalBool_;
    /**
     * <code>bool optional_bool = 13;</code>
     */
    public boolean getOptionalBool() {
      return optionalBool_;
    }

    public static final int OPTIONAL_STRING_FIELD_NUMBER = 14;
    private volatile java.lang.Object optionalString_;
    /**
     * <code>string optional_string = 14;</code>
     */
    public java.lang.String getOptionalString() {
      java.lang.Object ref = optionalString_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        optionalString_ = s;
        return s;
      }
    }
    /**
     * <code>string optional_string = 14;</code>
     */
    public com.google.protobuf.ByteString
        getOptionalStringBytes() {
      java.lang.Object ref = optionalString_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        optionalString_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int OPTIONAL_BYTES_FIELD_NUMBER = 15;
    private com.google.protobuf.ByteString optionalBytes_;
    /**
     * <code>bytes optional_bytes = 15;</code>
     */
    public com.google.protobuf.ByteString getOptionalBytes() {
      return optionalBytes_;
    }

    public static final int OPTIONAL_NESTED_MESSAGE_FIELD_NUMBER = 18;
    private com.google.protobuf.util.JsonTestProto.TestAllTypes.NestedMessage optionalNestedMessage_;
    /**
     * <code>.json_test.TestAllTypes.NestedMessage optional_nested_message = 18;</code>
     */
    public boolean hasOptionalNestedMessage() {
      return optionalNestedMessage_ != null;
    }
    /**
     * <code>.json_test.TestAllTypes.NestedMessage optional_nested_message = 18;</code>
     */
    public com.google.protobuf.util.JsonTestProto.TestAllTypes.NestedMessage getOptionalNestedMessage() {
      return optionalNestedMessage_ == null ? com.google.protobuf.util.JsonTestProto.TestAllTypes.NestedMessage.getDefaultInstance() : optionalNestedMessage_;
    }
    /**
     * <code>.json_test.TestAllTypes.NestedMessage optional_nested_message = 18;</code>
     */
    public com.google.protobuf.util.JsonTestProto.TestAllTypes.NestedMessageOrBuilder getOptionalNestedMessageOrBuilder() {
      return getOptionalNestedMessage();
    }

    public static final int OPTIONAL_NESTED_ENUM_FIELD_NUMBER = 21;
    private int optionalNestedEnum_;
    /**
     * <code>.json_test.TestAllTypes.NestedEnum optional_nested_enum = 21;</code>
     */
    public int getOptionalNestedEnumValue() {
      return optionalNestedEnum_;
    }
    /**
     * <code>.json_test.TestAllTypes.NestedEnum optional_nested_enum = 21;</code>
     */
    public com.google.protobuf.util.JsonTestProto.TestAllTypes.NestedEnum getOptionalNestedEnum() {
      com.google.protobuf.util.JsonTestProto.TestAllTypes.NestedEnum result = com.google.protobuf.util.JsonTestProto.TestAllTypes.NestedEnum.valueOf(optionalNestedEnum_);
      return result == null ? com.google.protobuf.util.JsonTestProto.TestAllTypes.NestedEnum.UNRECOGNIZED : result;
    }

    public static final int REPEATED_INT32_FIELD_NUMBER = 31;
    private java.util.List<java.lang.Integer> repeatedInt32_;
    /**
     * <pre>
     * Repeated
     * </pre>
     *
     * <code>repeated int32 repeated_int32 = 31;</code>
     */
    public java.util.List<java.lang.Integer>
        getRepeatedInt32List() {
      return repeatedInt32_;
    }
    /**
     * <pre>
     * Repeated
     * </pre>
     *
     * <code>repeated int32 repeated_int32 = 31;</code>
     */
    public int getRepeatedInt32Count() {
      return repeatedInt32_.size();
    }
    /**
     * <pre>
     * Repeated
     * </pre>
     *
     * <code>repeated int32 repeated_int32 = 31;</code>
     */
    public int getRepeatedInt32(int index) {
      return repeatedInt32_.get(index);
    }
    private int repeatedInt32MemoizedSerializedSize = -1;

    public static final int REPEATED_INT64_FIELD_NUMBER = 32;
    private java.util.List<java.lang.Long> repeatedInt64_;
    /**
     * <code>repeated int64 repeated_int64 = 32;</code>
     */
    public java.util.List<java.lang.Long>
        getRepeatedInt64List() {
      return repeatedInt64_;
    }
    /**
     * <code>repeated int64 repeated_int64 = 32;</code>
     */
    public int getRepeatedInt64Count() {
      return repeatedInt64_.size();
    }
    /**
     * <code>repeated int64 repeated_int64 = 32;</code>
     */
    public long getRepeatedInt64(int index) {
      return repeatedInt64_.get(index);
    }
    private int repeatedInt64MemoizedSerializedSize = -1;

    public static final int REPEATED_UINT32_FIELD_NUMBER = 33;
    private java.util.List<java.lang.Integer> repeatedUint32_;
    /**
     * <code>repeated uint32 repeated_uint32 = 33;</code>
     */
    public java.util.List<java.lang.Integer>
        getRepeatedUint32List() {
      return repeatedUint32_;
    }
    /**
     * <code>repeated uint32 repeated_uint32 = 33;</code>
     */
    public int getRepeatedUint32Count() {
      return repeatedUint32_.size();
    }
    /**
     * <code>repeated uint32 repeated_uint32 = 33;</code>
     */
    public int getRepeatedUint32(int index) {
      return repeatedUint32_.get(index);
    }
    private int repeatedUint32MemoizedSerializedSize = -1;

    public static final int REPEATED_UINT64_FIELD_NUMBER = 34;
    private java.util.List<java.lang.Long> repeatedUint64_;
    /**
     * <code>repeated uint64 repeated_uint64 = 34;</code>
     */
    public java.util.List<java.lang.Long>
        getRepeatedUint64List() {
      return repeatedUint64_;
    }
    /**
     * <code>repeated uint64 repeated_uint64 = 34;</code>
     */
    public int getRepeatedUint64Count() {
      return repeatedUint64_.size();
    }
    /**
     * <code>repeated uint64 repeated_uint64 = 34;</code>
     */
    public long getRepeatedUint64(int index) {
      return repeatedUint64_.get(index);
    }
    private int repeatedUint64MemoizedSerializedSize = -1;

    public static final int REPEATED_SINT32_FIELD_NUMBER = 35;
    private java.util.List<java.lang.Integer> repeatedSint32_;
    /**
     * <code>repeated sint32 repeated_sint32 = 35;</code>
     */
    public java.util.List<java.lang.Integer>
        getRepeatedSint32List() {
      return repeatedSint32_;
    }
    /**
     * <code>repeated sint32 repeated_sint32 = 35;</code>
     */
    public int getRepeatedSint32Count() {
      return repeatedSint32_.size();
    }
    /**
     * <code>repeated sint32 repeated_sint32 = 35;</code>
     */
    public int getRepeatedSint32(int index) {
      return repeatedSint32_.get(index);
    }
    private int repeatedSint32MemoizedSerializedSize = -1;

    public static final int REPEATED_SINT64_FIELD_NUMBER = 36;
    private java.util.List<java.lang.Long> repeatedSint64_;
    /**
     * <code>repeated sint64 repeated_sint64 = 36;</code>
     */
    public java.util.List<java.lang.Long>
        getRepeatedSint64List() {
      return repeatedSint64_;
    }
    /**
     * <code>repeated sint64 repeated_sint64 = 36;</code>
     */
    public int getRepeatedSint64Count() {
      return repeatedSint64_.size();
    }
    /**
     * <code>repeated sint64 repeated_sint64 = 36;</code>
     */
    public long getRepeatedSint64(int index) {
      return repeatedSint64_.get(index);
    }
    private int repeatedSint64MemoizedSerializedSize = -1;

    public static final int REPEATED_FIXED32_FIELD_NUMBER = 37;
    private java.util.List<java.lang.Integer> repeatedFixed32_;
    /**
     * <code>repeated fixed32 repeated_fixed32 = 37;</code>
     */
    public java.util.List<java.lang.Integer>
        getRepeatedFixed32List() {
      return repeatedFixed32_;
    }
    /**
     * <code>repeated fixed32 repeated_fixed32 = 37;</code>
     */
    public int getRepeatedFixed32Count() {
      return repeatedFixed32_.size();
    }
    /**
     * <code>repeated fixed32 repeated_fixed32 = 37;</code>
     */
    public int getRepeatedFixed32(int index) {
      return repeatedFixed32_.get(index);
    }
    private int repeatedFixed32MemoizedSerializedSize = -1;

    public static final int REPEATED_FIXED64_FIELD_NUMBER = 38;
    private java.util.List<java.lang.Long> repeatedFixed64_;
    /**
     * <code>repeated fixed64 repeated_fixed64 = 38;</code>
     */
    public java.util.List<java.lang.Long>
        getRepeatedFixed64List() {
      return repeatedFixed64_;
    }
    /**
     * <code>repeated fixed64 repeated_fixed64 = 38;</code>
     */
    public int getRepeatedFixed64Count() {
      return repeatedFixed64_.size();
    }
    /**
     * <code>repeated fixed64 repeated_fixed64 = 38;</code>
     */
    public long getRepeatedFixed64(int index) {
      return repeatedFixed64_.get(index);
    }
    private int repeatedFixed64MemoizedSerializedSize = -1;

    public static final int REPEATED_SFIXED32_FIELD_NUMBER = 39;
    private java.util.List<java.lang.Integer> repeatedSfixed32_;
    /**
     * <code>repeated sfixed32 repeated_sfixed32 = 39;</code>
     */
    public java.util.List<java.lang.Integer>
        getRepeatedSfixed32List() {
      return repeatedSfixed32_;
    }
    /**
     * <code>repeated sfixed32 repeated_sfixed32 = 39;</code>
     */
    public int getRepeatedSfixed32Count() {
      return repeatedSfixed32_.size();
    }
    /**
     * <code>repeated sfixed32 repeated_sfixed32 = 39;</code>
     */
    public int getRepeatedSfixed32(int index) {
      return repeatedSfixed32_.get(index);
    }
    private int repeatedSfixed32MemoizedSerializedSize = -1;

    public static final int REPEATED_SFIXED64_FIELD_NUMBER = 40;
    private java.util.List<java.lang.Long> repeatedSfixed64_;
    /**
     * <code>repeated sfixed64 repeated_sfixed64 = 40;</code>
     */
    public java.util.List<java.lang.Long>
        getRepeatedSfixed64List() {
      return repeatedSfixed64_;
    }
    /**
     * <code>repeated sfixed64 repeated_sfixed64 = 40;</code>
     */
    public int getRepeatedSfixed64Count() {
      return repeatedSfixed64_.size();
    }
    /**
     * <code>repeated sfixed64 repeated_sfixed64 = 40;</code>
     */
    public long getRepeatedSfixed64(int index) {
      return repeatedSfixed64_.get(index);
    }
    private int repeatedSfixed64MemoizedSerializedSize = -1;

    public static final int REPEATED_FLOAT_FIELD_NUMBER = 41;
    private java.util.List<java.lang.Float> repeatedFloat_;
    /**
     * <code>repeated float repeated_float = 41;</code>
     */
    public java.util.List<java.lang.Float>
        getRepeatedFloatList() {
      return repeatedFloat_;
    }
    /**
     * <code>repeated float repeated_float = 41;</code>
     */
    public int getRepeatedFloatCount() {
      return repeatedFloat_.size();
    }
    /**
     * <code>repeated float repeated_float = 41;</code>
     */
    public float getRepeatedFloat(int index) {
      return repeatedFloat_.get(index);
    }
    private int repeatedFloatMemoizedSerializedSize = -1;

    public static final int REPEATED_DOUBLE_FIELD_NUMBER = 42;
    private java.util.List<java.lang.Double> repeatedDouble_;
    /**
     * <code>repeated double repeated_double = 42;</code>
     */
    public java.util.List<java.lang.Double>
        getRepeatedDoubleList() {
      return repeatedDouble_;
    }
    /**
     * <code>repeated double repeated_double = 42;</code>
     */
    public int getRepeatedDoubleCount() {
      return repeatedDouble_.size();
    }
    /**
     * <code>repeated double repeated_double = 42;</code>
     */
    public double getRepeatedDouble(int index) {
      return repeatedDouble_.get(index);
    }
    private int repeatedDoubleMemoizedSerializedSize = -1;

    public static final int REPEATED_BOOL_FIELD_NUMBER = 43;
    private java.util.List<java.lang.Boolean> repeatedBool_;
    /**
     * <code>repeated bool repeated_bool = 43;</code>
     */
    public java.util.List<java.lang.Boolean>
        getRepeatedBoolList() {
      return repeatedBool_;
    }
    /**
     * <code>repeated bool repeated_bool = 43;</code>
     */
    public int getRepeatedBoolCount() {
      return repeatedBool_.size();
    }
    /**
     * <code>repeated bool repeated_bool = 43;</code>
     */
    public boolean getRepeatedBool(int index) {
      return repeatedBool_.get(index);
    }
    private int repeatedBoolMemoizedSerializedSize = -1;

    public static final int REPEATED_STRING_FIELD_NUMBER = 44;
    private com.google.protobuf.LazyStringList repeatedString_;
    /**
     * <code>repeated string repeated_string = 44;</code>
     */
    public com.google.protobuf.ProtocolStringList
        getRepeatedStringList() {
      return repeatedString_;
    }
    /**
     * <code>repeated string repeated_string = 44;</code>
     */
    public int getRepeatedStringCount() {
      return repeatedString_.size();
    }
    /**
     * <code>repeated string repeated_string = 44;</code>
     */
    public java.lang.String getRepeatedString(int index) {
      return repeatedString_.get(index);
    }
    /**
     * <code>repeated string repeated_string = 44;</code>
     */
    public com.google.protobuf.ByteString
        getRepeatedStringBytes(int index) {
      return repeatedString_.getByteString(index);
    }

    public static final int REPEATED_BYTES_FIELD_NUMBER = 45;
    private java.util.List<com.google.protobuf.ByteString> repeatedBytes_;
    /**
     * <code>repeated bytes repeated_bytes = 45;</code>
     */
    public java.util.List<com.google.protobuf.ByteString>
        getRepeatedBytesList() {
      return repeatedBytes_;
    }
    /**
     * <code>repeated bytes repeated_bytes = 45;</code>
     */
    public int getRepeatedBytesCount() {
      return repeatedBytes_.size();
    }
    /**
     * <code>repeated bytes repeated_bytes = 45;</code>
     */
    public com.google.protobuf.ByteString getRepeatedBytes(int index) {
      return repeatedBytes_.get(index);
    }

    public static final int REPEATED_NESTED_MESSAGE_FIELD_NUMBER = 48;
    private java.util.List<com.google.protobuf.util.JsonTestProto.TestAllTypes.NestedMessage> repeatedNestedMessage_;
    /**
     * <code>repeated .json_test.TestAllTypes.NestedMessage repeated_nested_message = 48;</code>
     */
    public java.util.List<com.google.protobuf.util.JsonTestProto.TestAllTypes.NestedMessage> getRepeatedNestedMessageList() {
      return repeatedNestedMessage_;
    }
    /**
     * <code>repeated .json_test.TestAllTypes.NestedMessage repeated_nested_message = 48;</code>
     */
    public java.util.List<? extends com.google.protobuf.util.JsonTestProto.TestAllTypes.NestedMessageOrBuilder> 
        getRepeatedNestedMessageOrBuilderList() {
      return repeatedNestedMessage_;
    }
    /**
     * <code>repeated .json_test.TestAllTypes.NestedMessage repeated_nested_message = 48;</code>
     */
    public int getRepeatedNestedMessageCount() {
      return repeatedNestedMessage_.size();
    }
    /**
     * <code>repeated .json_test.TestAllTypes.NestedMessage repeated_nested_message = 48;</code>
     */
    public com.google.protobuf.util.JsonTestProto.TestAllTypes.NestedMessage getRepeatedNestedMessage(int index) {
      return repeatedNestedMessage_.get(index);
    }
    /**
     * <code>repeated .json_test.TestAllTypes.NestedMessage repeated_nested_message = 48;</code>
     */
    public com.google.protobuf.util.JsonTestProto.TestAllTypes.NestedMessageOrBuilder getRepeatedNestedMessageOrBuilder(
        int index) {
      return repeatedNestedMessage_.get(index);
    }

    public static final int REPEATED_NESTED_ENUM_FIELD_NUMBER = 51;
    private java.util.List<java.lang.Integer> repeatedNestedEnum_;
    private static final com.google.protobuf.Internal.ListAdapter.Converter<
        java.lang.Integer, com.google.protobuf.util.JsonTestProto.TestAllTypes.NestedEnum> repeatedNestedEnum_converter_ =
            new com.google.protobuf.Internal.ListAdapter.Converter<
                java.lang.Integer, com.google.protobuf.util.JsonTestProto.TestAllTypes.NestedEnum>() {
              public com.google.protobuf.util.JsonTestProto.TestAllTypes.NestedEnum convert(java.lang.Integer from) {
                com.google.protobuf.util.JsonTestProto.TestAllTypes.NestedEnum result = com.google.protobuf.util.JsonTestProto.TestAllTypes.NestedEnum.valueOf(from);
                return result == null ? com.google.protobuf.util.JsonTestProto.TestAllTypes.NestedEnum.UNRECOGNIZED : result;
              }
            };
    /**
     * <code>repeated .json_test.TestAllTypes.NestedEnum repeated_nested_enum = 51;</code>
     */
    public java.util.List<com.google.protobuf.util.JsonTestProto.TestAllTypes.NestedEnum> getRepeatedNestedEnumList() {
      return new com.google.protobuf.Internal.ListAdapter<
          java.lang.Integer, com.google.protobuf.util.JsonTestProto.TestAllTypes.NestedEnum>(repeatedNestedEnum_, repeatedNestedEnum_converter_);
    }
    /**
     * <code>repeated .json_test.TestAllTypes.NestedEnum repeated_nested_enum = 51;</code>
     */
    public int getRepeatedNestedEnumCount() {
      return repeatedNestedEnum_.size();
    }
    /**
     * <code>repeated .json_test.TestAllTypes.NestedEnum repeated_nested_enum = 51;</code>
     */
    public com.google.protobuf.util.JsonTestProto.TestAllTypes.NestedEnum getRepeatedNestedEnum(int index) {
      return repeatedNestedEnum_converter_.convert(repeatedNestedEnum_.get(index));
    }
    /**
     * <code>repeated .json_test.TestAllTypes.NestedEnum repeated_nested_enum = 51;</code>
     */
    public java.util.List<java.lang.Integer>
    getRepeatedNestedEnumValueList() {
      return repeatedNestedEnum_;
    }
    /**
     * <code>repeated .json_test.TestAllTypes.NestedEnum repeated_nested_enum = 51;</code>
     */
    public int getRepeatedNestedEnumValue(int index) {
      return repeatedNestedEnum_.get(index);
    }
    private int repeatedNestedEnumMemoizedSerializedSize;

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (optionalInt32_ != 0) {
        output.writeInt32(1, optionalInt32_);
      }
      if (optionalInt64_ != 0L) {
        output.writeInt64(2, optionalInt64_);
      }
      if (optionalUint32_ != 0) {
        output.writeUInt32(3, optionalUint32_);
      }
      if (optionalUint64_ != 0L) {
        output.writeUInt64(4, optionalUint64_);
      }
      if (optionalSint32_ != 0) {
        output.writeSInt32(5, optionalSint32_);
      }
      if (optionalSint64_ != 0L) {
        output.writeSInt64(6, optionalSint64_);
      }
      if (optionalFixed32_ != 0) {
        output.writeFixed32(7, optionalFixed32_);
      }
      if (optionalFixed64_ != 0L) {
        output.writeFixed64(8, optionalFixed64_);
      }
      if (optionalSfixed32_ != 0) {
        output.writeSFixed32(9, optionalSfixed32_);
      }
      if (optionalSfixed64_ != 0L) {
        output.writeSFixed64(10, optionalSfixed64_);
      }
      if (optionalFloat_ != 0F) {
        output.writeFloat(11, optionalFloat_);
      }
      if (optionalDouble_ != 0D) {
        output.writeDouble(12, optionalDouble_);
      }
      if (optionalBool_ != false) {
        output.writeBool(13, optionalBool_);
      }
      if (!getOptionalStringBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 14, optionalString_);
      }
      if (!optionalBytes_.isEmpty()) {
        output.writeBytes(15, optionalBytes_);
      }
      if (optionalNestedMessage_ != null) {
        output.writeMessage(18, getOptionalNestedMessage());
      }
      if (optionalNestedEnum_ != com.google.protobuf.util.JsonTestProto.TestAllTypes.NestedEnum.FOO.getNumber()) {
        output.writeEnum(21, optionalNestedEnum_);
      }
      if (getRepeatedInt32List().size() > 0) {
        output.writeUInt32NoTag(250);
        output.writeUInt32NoTag(repeatedInt32MemoizedSerializedSize);
      }
      for (int i = 0; i < repeatedInt32_.size(); i++) {
        output.writeInt32NoTag(repeatedInt32_.get(i));
      }
      if (getRepeatedInt64List().size() > 0) {
        output.writeUInt32NoTag(258);
        output.writeUInt32NoTag(repeatedInt64MemoizedSerializedSize);
      }
      for (int i = 0; i < repeatedInt64_.size(); i++) {
        output.writeInt64NoTag(repeatedInt64_.get(i));
      }
      if (getRepeatedUint32List().size() > 0) {
        output.writeUInt32NoTag(266);
        output.writeUInt32NoTag(repeatedUint32MemoizedSerializedSize);
      }
      for (int i = 0; i < repeatedUint32_.size(); i++) {
        output.writeUInt32NoTag(repeatedUint32_.get(i));
      }
      if (getRepeatedUint64List().size() > 0) {
        output.writeUInt32NoTag(274);
        output.writeUInt32NoTag(repeatedUint64MemoizedSerializedSize);
      }
      for (int i = 0; i < repeatedUint64_.size(); i++) {
        output.writeUInt64NoTag(repeatedUint64_.get(i));
      }
      if (getRepeatedSint32List().size() > 0) {
        output.writeUInt32NoTag(282);
        output.writeUInt32NoTag(repeatedSint32MemoizedSerializedSize);
      }
      for (int i = 0; i < repeatedSint32_.size(); i++) {
        output.writeSInt32NoTag(repeatedSint32_.get(i));
      }
      if (getRepeatedSint64List().size() > 0) {
        output.writeUInt32NoTag(290);
        output.writeUInt32NoTag(repeatedSint64MemoizedSerializedSize);
      }
      for (int i = 0; i < repeatedSint64_.size(); i++) {
        output.writeSInt64NoTag(repeatedSint64_.get(i));
      }
      if (getRepeatedFixed32List().size() > 0) {
        output.writeUInt32NoTag(298);
        output.writeUInt32NoTag(repeatedFixed32MemoizedSerializedSize);
      }
      for (int i = 0; i < repeatedFixed32_.size(); i++) {
        output.writeFixed32NoTag(repeatedFixed32_.get(i));
      }
      if (getRepeatedFixed64List().size() > 0) {
        output.writeUInt32NoTag(306);
        output.writeUInt32NoTag(repeatedFixed64MemoizedSerializedSize);
      }
      for (int i = 0; i < repeatedFixed64_.size(); i++) {
        output.writeFixed64NoTag(repeatedFixed64_.get(i));
      }
      if (getRepeatedSfixed32List().size() > 0) {
        output.writeUInt32NoTag(314);
        output.writeUInt32NoTag(repeatedSfixed32MemoizedSerializedSize);
      }
      for (int i = 0; i < repeatedSfixed32_.size(); i++) {
        output.writeSFixed32NoTag(repeatedSfixed32_.get(i));
      }
      if (getRepeatedSfixed64List().size() > 0) {
        output.writeUInt32NoTag(322);
        output.writeUInt32NoTag(repeatedSfixed64MemoizedSerializedSize);
      }
      for (int i = 0; i < repeatedSfixed64_.size(); i++) {
        output.writeSFixed64NoTag(repeatedSfixed64_.get(i));
      }
      if (getRepeatedFloatList().size() > 0) {
        output.writeUInt32NoTag(330);
        output.writeUInt32NoTag(repeatedFloatMemoizedSerializedSize);
      }
      for (int i = 0; i < repeatedFloat_.size(); i++) {
        output.writeFloatNoTag(repeatedFloat_.get(i));
      }
      if (getRepeatedDoubleList().size() > 0) {
        output.writeUInt32NoTag(338);
        output.writeUInt32NoTag(repeatedDoubleMemoizedSerializedSize);
      }
      for (int i = 0; i < repeatedDouble_.size(); i++) {
        output.writeDoubleNoTag(repeatedDouble_.get(i));
      }
      if (getRepeatedBoolList().size() > 0) {
        output.writeUInt32NoTag(346);
        output.writeUInt32NoTag(repeatedBoolMemoizedSerializedSize);
      }
      for (int i = 0; i < repeatedBool_.size(); i++) {
        output.writeBoolNoTag(repeatedBool_.get(i));
      }
      for (int i = 0; i < repeatedString_.size(); i++) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 44, repeatedString_.getRaw(i));
      }
      for (int i = 0; i < repeatedBytes_.size(); i++) {
        output.writeBytes(45, repeatedBytes_.get(i));
      }
      for (int i = 0; i < repeatedNestedMessage_.size(); i++) {
        output.writeMessage(48, repeatedNestedMessage_.get(i));
      }
      if (getRepeatedNestedEnumList().size() > 0) {
        output.writeUInt32NoTag(410);
        output.writeUInt32NoTag(repeatedNestedEnumMemoizedSerializedSize);
      }
      for (int i = 0; i < repeatedNestedEnum_.size(); i++) {
        output.writeEnumNoTag(repeatedNestedEnum_.get(i));
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (optionalInt32_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, optionalInt32_);
      }
      if (optionalInt64_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(2, optionalInt64_);
      }
      if (optionalUint32_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(3, optionalUint32_);
      }
      if (optionalUint64_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(4, optionalUint64_);
      }
      if (optionalSint32_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeSInt32Size(5, optionalSint32_);
      }
      if (optionalSint64_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeSInt64Size(6, optionalSint64_);
      }
      if (optionalFixed32_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeFixed32Size(7, optionalFixed32_);
      }
      if (optionalFixed64_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeFixed64Size(8, optionalFixed64_);
      }
      if (optionalSfixed32_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeSFixed32Size(9, optionalSfixed32_);
      }
      if (optionalSfixed64_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeSFixed64Size(10, optionalSfixed64_);
      }
      if (optionalFloat_ != 0F) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(11, optionalFloat_);
      }
      if (optionalDouble_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(12, optionalDouble_);
      }
      if (optionalBool_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(13, optionalBool_);
      }
      if (!getOptionalStringBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(14, optionalString_);
      }
      if (!optionalBytes_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(15, optionalBytes_);
      }
      if (optionalNestedMessage_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(18, getOptionalNestedMessage());
      }
      if (optionalNestedEnum_ != com.google.protobuf.util.JsonTestProto.TestAllTypes.NestedEnum.FOO.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(21, optionalNestedEnum_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < repeatedInt32_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(repeatedInt32_.get(i));
        }
        size += dataSize;
        if (!getRepeatedInt32List().isEmpty()) {
          size += 2;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        repeatedInt32MemoizedSerializedSize = dataSize;
      }
      {
        int dataSize = 0;
        for (int i = 0; i < repeatedInt64_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt64SizeNoTag(repeatedInt64_.get(i));
        }
        size += dataSize;
        if (!getRepeatedInt64List().isEmpty()) {
          size += 2;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        repeatedInt64MemoizedSerializedSize = dataSize;
      }
      {
        int dataSize = 0;
        for (int i = 0; i < repeatedUint32_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeUInt32SizeNoTag(repeatedUint32_.get(i));
        }
        size += dataSize;
        if (!getRepeatedUint32List().isEmpty()) {
          size += 2;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        repeatedUint32MemoizedSerializedSize = dataSize;
      }
      {
        int dataSize = 0;
        for (int i = 0; i < repeatedUint64_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeUInt64SizeNoTag(repeatedUint64_.get(i));
        }
        size += dataSize;
        if (!getRepeatedUint64List().isEmpty()) {
          size += 2;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        repeatedUint64MemoizedSerializedSize = dataSize;
      }
      {
        int dataSize = 0;
        for (int i = 0; i < repeatedSint32_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeSInt32SizeNoTag(repeatedSint32_.get(i));
        }
        size += dataSize;
        if (!getRepeatedSint32List().isEmpty()) {
          size += 2;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        repeatedSint32MemoizedSerializedSize = dataSize;
      }
      {
        int dataSize = 0;
        for (int i = 0; i < repeatedSint64_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeSInt64SizeNoTag(repeatedSint64_.get(i));
        }
        size += dataSize;
        if (!getRepeatedSint64List().isEmpty()) {
          size += 2;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        repeatedSint64MemoizedSerializedSize = dataSize;
      }
      {
        int dataSize = 0;
        dataSize = 4 * getRepeatedFixed32List().size();
        size += dataSize;
        if (!getRepeatedFixed32List().isEmpty()) {
          size += 2;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        repeatedFixed32MemoizedSerializedSize = dataSize;
      }
      {
        int dataSize = 0;
        dataSize = 8 * getRepeatedFixed64List().size();
        size += dataSize;
        if (!getRepeatedFixed64List().isEmpty()) {
          size += 2;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        repeatedFixed64MemoizedSerializedSize = dataSize;
      }
      {
        int dataSize = 0;
        dataSize = 4 * getRepeatedSfixed32List().size();
        size += dataSize;
        if (!getRepeatedSfixed32List().isEmpty()) {
          size += 2;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        repeatedSfixed32MemoizedSerializedSize = dataSize;
      }
      {
        int dataSize = 0;
        dataSize = 8 * getRepeatedSfixed64List().size();
        size += dataSize;
        if (!getRepeatedSfixed64List().isEmpty()) {
          size += 2;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        repeatedSfixed64MemoizedSerializedSize = dataSize;
      }
      {
        int dataSize = 0;
        dataSize = 4 * getRepeatedFloatList().size();
        size += dataSize;
        if (!getRepeatedFloatList().isEmpty()) {
          size += 2;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        repeatedFloatMemoizedSerializedSize = dataSize;
      }
      {
        int dataSize = 0;
        dataSize = 8 * getRepeatedDoubleList().size();
        size += dataSize;
        if (!getRepeatedDoubleList().isEmpty()) {
          size += 2;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        repeatedDoubleMemoizedSerializedSize = dataSize;
      }
      {
        int dataSize = 0;
        dataSize = 1 * getRepeatedBoolList().size();
        size += dataSize;
        if (!getRepeatedBoolList().isEmpty()) {
          size += 2;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        repeatedBoolMemoizedSerializedSize = dataSize;
      }
      {
        int dataSize = 0;
        for (int i = 0; i < repeatedString_.size(); i++) {
          dataSize += computeStringSizeNoTag(repeatedString_.getRaw(i));
        }
        size += dataSize;
        size += 2 * getRepeatedStringList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < repeatedBytes_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeBytesSizeNoTag(repeatedBytes_.get(i));
        }
        size += dataSize;
        size += 2 * getRepeatedBytesList().size();
      }
      for (int i = 0; i < repeatedNestedMessage_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(48, repeatedNestedMessage_.get(i));
      }
      {
        int dataSize = 0;
        for (int i = 0; i < repeatedNestedEnum_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeEnumSizeNoTag(repeatedNestedEnum_.get(i));
        }
        size += dataSize;
        if (!getRepeatedNestedEnumList().isEmpty()) {  size += 2;
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32SizeNoTag(dataSize);
        }repeatedNestedEnumMemoizedSerializedSize = dataSize;
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.google.protobuf.util.JsonTestProto.TestAllTypes)) {
        return super.equals(obj);
      }
      com.google.protobuf.util.JsonTestProto.TestAllTypes other = (com.google.protobuf.util.JsonTestProto.TestAllTypes) obj;

      boolean result = true;
      result = result && (getOptionalInt32()
          == other.getOptionalInt32());
      result = result && (getOptionalInt64()
          == other.getOptionalInt64());
      result = result && (getOptionalUint32()
          == other.getOptionalUint32());
      result = result && (getOptionalUint64()
          == other.getOptionalUint64());
      result = result && (getOptionalSint32()
          == other.getOptionalSint32());
      result = result && (getOptionalSint64()
          == other.getOptionalSint64());
      result = result && (getOptionalFixed32()
          == other.getOptionalFixed32());
      result = result && (getOptionalFixed64()
          == other.getOptionalFixed64());
      result = result && (getOptionalSfixed32()
          == other.getOptionalSfixed32());
      result = result && (getOptionalSfixed64()
          == other.getOptionalSfixed64());
      result = result && (
          java.lang.Float.floatToIntBits(getOptionalFloat())
          == java.lang.Float.floatToIntBits(
              other.getOptionalFloat()));
      result = result && (
          java.lang.Double.doubleToLongBits(getOptionalDouble())
          == java.lang.Double.doubleToLongBits(
              other.getOptionalDouble()));
      result = result && (getOptionalBool()
          == other.getOptionalBool());
      result = result && getOptionalString()
          .equals(other.getOptionalString());
      result = result && getOptionalBytes()
          .equals(other.getOptionalBytes());
      result = result && (hasOptionalNestedMessage() == other.hasOptionalNestedMessage());
      if (hasOptionalNestedMessage()) {
        result = result && getOptionalNestedMessage()
            .equals(other.getOptionalNestedMessage());
      }
      result = result && optionalNestedEnum_ == other.optionalNestedEnum_;
      result = result && getRepeatedInt32List()
          .equals(other.getRepeatedInt32List());
      result = result && getRepeatedInt64List()
          .equals(other.getRepeatedInt64List());
      result = result && getRepeatedUint32List()
          .equals(other.getRepeatedUint32List());
      result = result && getRepeatedUint64List()
          .equals(other.getRepeatedUint64List());
      result = result && getRepeatedSint32List()
          .equals(other.getRepeatedSint32List());
      result = result && getRepeatedSint64List()
          .equals(other.getRepeatedSint64List());
      result = result && getRepeatedFixed32List()
          .equals(other.getRepeatedFixed32List());
      result = result && getRepeatedFixed64List()
          .equals(other.getRepeatedFixed64List());
      result = result && getRepeatedSfixed32List()
          .equals(other.getRepeatedSfixed32List());
      result = result && getRepeatedSfixed64List()
          .equals(other.getRepeatedSfixed64List());
      result = result && getRepeatedFloatList()
          .equals(other.getRepeatedFloatList());
      result = result && getRepeatedDoubleList()
          .equals(other.getRepeatedDoubleList());
      result = result && getRepeatedBoolList()
          .equals(other.getRepeatedBoolList());
      result = result && getRepeatedStringList()
          .equals(other.getRepeatedStringList());
      result = result && getRepeatedBytesList()
          .equals(other.getRepeatedBytesList());
      result = result && getRepeatedNestedMessageList()
          .equals(other.getRepeatedNestedMessageList());
      result = result && repeatedNestedEnum_.equals(other.repeatedNestedEnum_);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + OPTIONAL_INT32_FIELD_NUMBER;
      hash = (53 * hash) + getOptionalInt32();
      hash = (37 * hash) + OPTIONAL_INT64_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getOptionalInt64());
      hash = (37 * hash) + OPTIONAL_UINT32_FIELD_NUMBER;
      hash = (53 * hash) + getOptionalUint32();
      hash = (37 * hash) + OPTIONAL_UINT64_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getOptionalUint64());
      hash = (37 * hash) + OPTIONAL_SINT32_FIELD_NUMBER;
      hash = (53 * hash) + getOptionalSint32();
      hash = (37 * hash) + OPTIONAL_SINT64_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getOptionalSint64());
      hash = (37 * hash) + OPTIONAL_FIXED32_FIELD_NUMBER;
      hash = (53 * hash) + getOptionalFixed32();
      hash = (37 * hash) + OPTIONAL_FIXED64_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getOptionalFixed64());
      hash = (37 * hash) + OPTIONAL_SFIXED32_FIELD_NUMBER;
      hash = (53 * hash) + getOptionalSfixed32();
      hash = (37 * hash) + OPTIONAL_SFIXED64_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getOptionalSfixed64());
      hash = (37 * hash) + OPTIONAL_FLOAT_FIELD_NUMBER;
      hash = (53 * hash) + java.lang.Float.floatToIntBits(
          getOptionalFloat());
      hash = (37 * hash) + OPTIONAL_DOUBLE_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getOptionalDouble()));
      hash = (37 * hash) + OPTIONAL_BOOL_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getOptionalBool());
      hash = (37 * hash) + OPTIONAL_STRING_FIELD_NUMBER;
      hash = (53 * hash) + getOptionalString().hashCode();
      hash = (37 * hash) + OPTIONAL_BYTES_FIELD_NUMBER;
      hash = (53 * hash) + getOptionalBytes().hashCode();
      if (hasOptionalNestedMessage()) {
        hash = (37 * hash) + OPTIONAL_NESTED_MESSAGE_FIELD_NUMBER;
        hash = (53 * hash) + getOptionalNestedMessage().hashCode();
      }
      hash = (37 * hash) + OPTIONAL_NESTED_ENUM_FIELD_NUMBER;
      hash = (53 * hash) + optionalNestedEnum_;
      if (getRepeatedInt32Count() > 0) {
        hash = (37 * hash) + REPEATED_INT32_FIELD_NUMBER;
        hash = (53 * hash) + getRepeatedInt32List().hashCode();
      }
      if (getRepeatedInt64Count() > 0) {
        hash = (37 * hash) + REPEATED_INT64_FIELD_NUMBER;
        hash = (53 * hash) + getRepeatedInt64List().hashCode();
      }
      if (getRepeatedUint32Count() > 0) {
        hash = (37 * hash) + REPEATED_UINT32_FIELD_NUMBER;
        hash = (53 * hash) + getRepeatedUint32List().hashCode();
      }
      if (getRepeatedUint64Count() > 0) {
        hash = (37 * hash) + REPEATED_UINT64_FIELD_NUMBER;
        hash = (53 * hash) + getRepeatedUint64List().hashCode();
      }
      if (getRepeatedSint32Count() > 0) {
        hash = (37 * hash) + REPEATED_SINT32_FIELD_NUMBER;
        hash = (53 * hash) + getRepeatedSint32List().hashCode();
      }
      if (getRepeatedSint64Count() > 0) {
        hash = (37 * hash) + REPEATED_SINT64_FIELD_NUMBER;
        hash = (53 * hash) + getRepeatedSint64List().hashCode();
      }
      if (getRepeatedFixed32Count() > 0) {
        hash = (37 * hash) + REPEATED_FIXED32_FIELD_NUMBER;
        hash = (53 * hash) + getRepeatedFixed32List().hashCode();
      }
      if (getRepeatedFixed64Count() > 0) {
        hash = (37 * hash) + REPEATED_FIXED64_FIELD_NUMBER;
        hash = (53 * hash) + getRepeatedFixed64List().hashCode();
      }
      if (getRepeatedSfixed32Count() > 0) {
        hash = (37 * hash) + REPEATED_SFIXED32_FIELD_NUMBER;
        hash = (53 * hash) + getRepeatedSfixed32List().hashCode();
      }
      if (getRepeatedSfixed64Count() > 0) {
        hash = (37 * hash) + REPEATED_SFIXED64_FIELD_NUMBER;
        hash = (53 * hash) + getRepeatedSfixed64List().hashCode();
      }
      if (getRepeatedFloatCount() > 0) {
        hash = (37 * hash) + REPEATED_FLOAT_FIELD_NUMBER;
        hash = (53 * hash) + getRepeatedFloatList().hashCode();
      }
      if (getRepeatedDoubleCount() > 0) {
        hash = (37 * hash) + REPEATED_DOUBLE_FIELD_NUMBER;
        hash = (53 * hash) + getRepeatedDoubleList().hashCode();
      }
      if (getRepeatedBoolCount() > 0) {
        hash = (37 * hash) + REPEATED_BOOL_FIELD_NUMBER;
        hash = (53 * hash) + getRepeatedBoolList().hashCode();
      }
      if (getRepeatedStringCount() > 0) {
        hash = (37 * hash) + REPEATED_STRING_FIELD_NUMBER;
        hash = (53 * hash) + getRepeatedStringList().hashCode();
      }
      if (getRepeatedBytesCount() > 0) {
        hash = (37 * hash) + REPEATED_BYTES_FIELD_NUMBER;
        hash = (53 * hash) + getRepeatedBytesList().hashCode();
      }
      if (getRepeatedNestedMessageCount() > 0) {
        hash = (37 * hash) + REPEATED_NESTED_MESSAGE_FIELD_NUMBER;
        hash = (53 * hash) + getRepeatedNestedMessageList().hashCode();
      }
      if (getRepeatedNestedEnumCount() > 0) {
        hash = (37 * hash) + REPEATED_NESTED_ENUM_FIELD_NUMBER;
        hash = (53 * hash) + repeatedNestedEnum_.hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.google.protobuf.util.JsonTestProto.TestAllTypes parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.google.protobuf.util.JsonTestProto.TestAllTypes parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.google.protobuf.util.JsonTestProto.TestAllTypes parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.google.protobuf.util.JsonTestProto.TestAllTypes parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.google.protobuf.util.JsonTestProto.TestAllTypes parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.google.protobuf.util.JsonTestProto.TestAllTypes parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.google.protobuf.util.JsonTestProto.TestAllTypes parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.google.protobuf.util.JsonTestProto.TestAllTypes parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.google.protobuf.util.JsonTestProto.TestAllTypes parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.google.protobuf.util.JsonTestProto.TestAllTypes parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.google.protobuf.util.JsonTestProto.TestAllTypes parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.google.protobuf.util.JsonTestProto.TestAllTypes parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.google.protobuf.util.JsonTestProto.TestAllTypes prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code json_test.TestAllTypes}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:json_test.TestAllTypes)
        com.google.protobuf.util.JsonTestProto.TestAllTypesOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.google.protobuf.util.JsonTestProto.internal_static_json_test_TestAllTypes_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.google.protobuf.util.JsonTestProto.internal_static_json_test_TestAllTypes_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.google.protobuf.util.JsonTestProto.TestAllTypes.class, com.google.protobuf.util.JsonTestProto.TestAllTypes.Builder.class);
      }

      // Construct using com.google.protobuf.util.JsonTestProto.TestAllTypes.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getRepeatedNestedMessageFieldBuilder();
        }
      }
      public Builder clear() {
        super.clear();
        optionalInt32_ = 0;

        optionalInt64_ = 0L;

        optionalUint32_ = 0;

        optionalUint64_ = 0L;

        optionalSint32_ = 0;

        optionalSint64_ = 0L;

        optionalFixed32_ = 0;

        optionalFixed64_ = 0L;

        optionalSfixed32_ = 0;

        optionalSfixed64_ = 0L;

        optionalFloat_ = 0F;

        optionalDouble_ = 0D;

        optionalBool_ = false;

        optionalString_ = "";

        optionalBytes_ = com.google.protobuf.ByteString.EMPTY;

        if (optionalNestedMessageBuilder_ == null) {
          optionalNestedMessage_ = null;
        } else {
          optionalNestedMessage_ = null;
          optionalNestedMessageBuilder_ = null;
        }
        optionalNestedEnum_ = 0;

        repeatedInt32_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00020000);
        repeatedInt64_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00040000);
        repeatedUint32_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00080000);
        repeatedUint64_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00100000);
        repeatedSint32_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00200000);
        repeatedSint64_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00400000);
        repeatedFixed32_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00800000);
        repeatedFixed64_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x01000000);
        repeatedSfixed32_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x02000000);
        repeatedSfixed64_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x04000000);
        repeatedFloat_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x08000000);
        repeatedDouble_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x10000000);
        repeatedBool_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x20000000);
        repeatedString_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x40000000);
        repeatedBytes_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x80000000);
        if (repeatedNestedMessageBuilder_ == null) {
          repeatedNestedMessage_ = java.util.Collections.emptyList();
          bitField1_ = (bitField1_ & ~0x00000001);
        } else {
          repeatedNestedMessageBuilder_.clear();
        }
        repeatedNestedEnum_ = java.util.Collections.emptyList();
        bitField1_ = (bitField1_ & ~0x00000002);
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.google.protobuf.util.JsonTestProto.internal_static_json_test_TestAllTypes_descriptor;
      }

      public com.google.protobuf.util.JsonTestProto.TestAllTypes getDefaultInstanceForType() {
        return com.google.protobuf.util.JsonTestProto.TestAllTypes.getDefaultInstance();
      }

      public com.google.protobuf.util.JsonTestProto.TestAllTypes build() {
        com.google.protobuf.util.JsonTestProto.TestAllTypes result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.google.protobuf.util.JsonTestProto.TestAllTypes buildPartial() {
        com.google.protobuf.util.JsonTestProto.TestAllTypes result = new com.google.protobuf.util.JsonTestProto.TestAllTypes(this);
        int from_bitField0_ = bitField0_;
        int from_bitField1_ = bitField1_;
        int to_bitField0_ = 0;
        result.optionalInt32_ = optionalInt32_;
        result.optionalInt64_ = optionalInt64_;
        result.optionalUint32_ = optionalUint32_;
        result.optionalUint64_ = optionalUint64_;
        result.optionalSint32_ = optionalSint32_;
        result.optionalSint64_ = optionalSint64_;
        result.optionalFixed32_ = optionalFixed32_;
        result.optionalFixed64_ = optionalFixed64_;
        result.optionalSfixed32_ = optionalSfixed32_;
        result.optionalSfixed64_ = optionalSfixed64_;
        result.optionalFloat_ = optionalFloat_;
        result.optionalDouble_ = optionalDouble_;
        result.optionalBool_ = optionalBool_;
        result.optionalString_ = optionalString_;
        result.optionalBytes_ = optionalBytes_;
        if (optionalNestedMessageBuilder_ == null) {
          result.optionalNestedMessage_ = optionalNestedMessage_;
        } else {
          result.optionalNestedMessage_ = optionalNestedMessageBuilder_.build();
        }
        result.optionalNestedEnum_ = optionalNestedEnum_;
        if (((bitField0_ & 0x00020000) == 0x00020000)) {
          repeatedInt32_ = java.util.Collections.unmodifiableList(repeatedInt32_);
          bitField0_ = (bitField0_ & ~0x00020000);
        }
        result.repeatedInt32_ = repeatedInt32_;
        if (((bitField0_ & 0x00040000) == 0x00040000)) {
          repeatedInt64_ = java.util.Collections.unmodifiableList(repeatedInt64_);
          bitField0_ = (bitField0_ & ~0x00040000);
        }
        result.repeatedInt64_ = repeatedInt64_;
        if (((bitField0_ & 0x00080000) == 0x00080000)) {
          repeatedUint32_ = java.util.Collections.unmodifiableList(repeatedUint32_);
          bitField0_ = (bitField0_ & ~0x00080000);
        }
        result.repeatedUint32_ = repeatedUint32_;
        if (((bitField0_ & 0x00100000) == 0x00100000)) {
          repeatedUint64_ = java.util.Collections.unmodifiableList(repeatedUint64_);
          bitField0_ = (bitField0_ & ~0x00100000);
        }
        result.repeatedUint64_ = repeatedUint64_;
        if (((bitField0_ & 0x00200000) == 0x00200000)) {
          repeatedSint32_ = java.util.Collections.unmodifiableList(repeatedSint32_);
          bitField0_ = (bitField0_ & ~0x00200000);
        }
        result.repeatedSint32_ = repeatedSint32_;
        if (((bitField0_ & 0x00400000) == 0x00400000)) {
          repeatedSint64_ = java.util.Collections.unmodifiableList(repeatedSint64_);
          bitField0_ = (bitField0_ & ~0x00400000);
        }
        result.repeatedSint64_ = repeatedSint64_;
        if (((bitField0_ & 0x00800000) == 0x00800000)) {
          repeatedFixed32_ = java.util.Collections.unmodifiableList(repeatedFixed32_);
          bitField0_ = (bitField0_ & ~0x00800000);
        }
        result.repeatedFixed32_ = repeatedFixed32_;
        if (((bitField0_ & 0x01000000) == 0x01000000)) {
          repeatedFixed64_ = java.util.Collections.unmodifiableList(repeatedFixed64_);
          bitField0_ = (bitField0_ & ~0x01000000);
        }
        result.repeatedFixed64_ = repeatedFixed64_;
        if (((bitField0_ & 0x02000000) == 0x02000000)) {
          repeatedSfixed32_ = java.util.Collections.unmodifiableList(repeatedSfixed32_);
          bitField0_ = (bitField0_ & ~0x02000000);
        }
        result.repeatedSfixed32_ = repeatedSfixed32_;
        if (((bitField0_ & 0x04000000) == 0x04000000)) {
          repeatedSfixed64_ = java.util.Collections.unmodifiableList(repeatedSfixed64_);
          bitField0_ = (bitField0_ & ~0x04000000);
        }
        result.repeatedSfixed64_ = repeatedSfixed64_;
        if (((bitField0_ & 0x08000000) == 0x08000000)) {
          repeatedFloat_ = java.util.Collections.unmodifiableList(repeatedFloat_);
          bitField0_ = (bitField0_ & ~0x08000000);
        }
        result.repeatedFloat_ = repeatedFloat_;
        if (((bitField0_ & 0x10000000) == 0x10000000)) {
          repeatedDouble_ = java.util.Collections.unmodifiableList(repeatedDouble_);
          bitField0_ = (bitField0_ & ~0x10000000);
        }
        result.repeatedDouble_ = repeatedDouble_;
        if (((bitField0_ & 0x20000000) == 0x20000000)) {
          repeatedBool_ = java.util.Collections.unmodifiableList(repeatedBool_);
          bitField0_ = (bitField0_ & ~0x20000000);
        }
        result.repeatedBool_ = repeatedBool_;
        if (((bitField0_ & 0x40000000) == 0x40000000)) {
          repeatedString_ = repeatedString_.getUnmodifiableView();
          bitField0_ = (bitField0_ & ~0x40000000);
        }
        result.repeatedString_ = repeatedString_;
        if (((bitField0_ & 0x80000000) == 0x80000000)) {
          repeatedBytes_ = java.util.Collections.unmodifiableList(repeatedBytes_);
          bitField0_ = (bitField0_ & ~0x80000000);
        }
        result.repeatedBytes_ = repeatedBytes_;
        if (repeatedNestedMessageBuilder_ == null) {
          if (((bitField1_ & 0x00000001) == 0x00000001)) {
            repeatedNestedMessage_ = java.util.Collections.unmodifiableList(repeatedNestedMessage_);
            bitField1_ = (bitField1_ & ~0x00000001);
          }
          result.repeatedNestedMessage_ = repeatedNestedMessage_;
        } else {
          result.repeatedNestedMessage_ = repeatedNestedMessageBuilder_.build();
        }
        if (((bitField1_ & 0x00000002) == 0x00000002)) {
          repeatedNestedEnum_ = java.util.Collections.unmodifiableList(repeatedNestedEnum_);
          bitField1_ = (bitField1_ & ~0x00000002);
        }
        result.repeatedNestedEnum_ = repeatedNestedEnum_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.google.protobuf.util.JsonTestProto.TestAllTypes) {
          return mergeFrom((com.google.protobuf.util.JsonTestProto.TestAllTypes)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.google.protobuf.util.JsonTestProto.TestAllTypes other) {
        if (other == com.google.protobuf.util.JsonTestProto.TestAllTypes.getDefaultInstance()) return this;
        if (other.getOptionalInt32() != 0) {
          setOptionalInt32(other.getOptionalInt32());
        }
        if (other.getOptionalInt64() != 0L) {
          setOptionalInt64(other.getOptionalInt64());
        }
        if (other.getOptionalUint32() != 0) {
          setOptionalUint32(other.getOptionalUint32());
        }
        if (other.getOptionalUint64() != 0L) {
          setOptionalUint64(other.getOptionalUint64());
        }
        if (other.getOptionalSint32() != 0) {
          setOptionalSint32(other.getOptionalSint32());
        }
        if (other.getOptionalSint64() != 0L) {
          setOptionalSint64(other.getOptionalSint64());
        }
        if (other.getOptionalFixed32() != 0) {
          setOptionalFixed32(other.getOptionalFixed32());
        }
        if (other.getOptionalFixed64() != 0L) {
          setOptionalFixed64(other.getOptionalFixed64());
        }
        if (other.getOptionalSfixed32() != 0) {
          setOptionalSfixed32(other.getOptionalSfixed32());
        }
        if (other.getOptionalSfixed64() != 0L) {
          setOptionalSfixed64(other.getOptionalSfixed64());
        }
        if (other.getOptionalFloat() != 0F) {
          setOptionalFloat(other.getOptionalFloat());
        }
        if (other.getOptionalDouble() != 0D) {
          setOptionalDouble(other.getOptionalDouble());
        }
        if (other.getOptionalBool() != false) {
          setOptionalBool(other.getOptionalBool());
        }
        if (!other.getOptionalString().isEmpty()) {
          optionalString_ = other.optionalString_;
          onChanged();
        }
        if (other.getOptionalBytes() != com.google.protobuf.ByteString.EMPTY) {
          setOptionalBytes(other.getOptionalBytes());
        }
        if (other.hasOptionalNestedMessage()) {
          mergeOptionalNestedMessage(other.getOptionalNestedMessage());
        }
        if (other.optionalNestedEnum_ != 0) {
          setOptionalNestedEnumValue(other.getOptionalNestedEnumValue());
        }
        if (!other.repeatedInt32_.isEmpty()) {
          if (repeatedInt32_.isEmpty()) {
            repeatedInt32_ = other.repeatedInt32_;
            bitField0_ = (bitField0_ & ~0x00020000);
          } else {
            ensureRepeatedInt32IsMutable();
            repeatedInt32_.addAll(other.repeatedInt32_);
          }
          onChanged();
        }
        if (!other.repeatedInt64_.isEmpty()) {
          if (repeatedInt64_.isEmpty()) {
            repeatedInt64_ = other.repeatedInt64_;
            bitField0_ = (bitField0_ & ~0x00040000);
          } else {
            ensureRepeatedInt64IsMutable();
            repeatedInt64_.addAll(other.repeatedInt64_);
          }
          onChanged();
        }
        if (!other.repeatedUint32_.isEmpty()) {
          if (repeatedUint32_.isEmpty()) {
            repeatedUint32_ = other.repeatedUint32_;
            bitField0_ = (bitField0_ & ~0x00080000);
          } else {
            ensureRepeatedUint32IsMutable();
            repeatedUint32_.addAll(other.repeatedUint32_);
          }
          onChanged();
        }
        if (!other.repeatedUint64_.isEmpty()) {
          if (repeatedUint64_.isEmpty()) {
            repeatedUint64_ = other.repeatedUint64_;
            bitField0_ = (bitField0_ & ~0x00100000);
          } else {
            ensureRepeatedUint64IsMutable();
            repeatedUint64_.addAll(other.repeatedUint64_);
          }
          onChanged();
        }
        if (!other.repeatedSint32_.isEmpty()) {
          if (repeatedSint32_.isEmpty()) {
            repeatedSint32_ = other.repeatedSint32_;
            bitField0_ = (bitField0_ & ~0x00200000);
          } else {
            ensureRepeatedSint32IsMutable();
            repeatedSint32_.addAll(other.repeatedSint32_);
          }
          onChanged();
        }
        if (!other.repeatedSint64_.isEmpty()) {
          if (repeatedSint64_.isEmpty()) {
            repeatedSint64_ = other.repeatedSint64_;
            bitField0_ = (bitField0_ & ~0x00400000);
          } else {
            ensureRepeatedSint64IsMutable();
            repeatedSint64_.addAll(other.repeatedSint64_);
          }
          onChanged();
        }
        if (!other.repeatedFixed32_.isEmpty()) {
          if (repeatedFixed32_.isEmpty()) {
            repeatedFixed32_ = other.repeatedFixed32_;
            bitField0_ = (bitField0_ & ~0x00800000);
          } else {
            ensureRepeatedFixed32IsMutable();
            repeatedFixed32_.addAll(other.repeatedFixed32_);
          }
          onChanged();
        }
        if (!other.repeatedFixed64_.isEmpty()) {
          if (repeatedFixed64_.isEmpty()) {
            repeatedFixed64_ = other.repeatedFixed64_;
            bitField0_ = (bitField0_ & ~0x01000000);
          } else {
            ensureRepeatedFixed64IsMutable();
            repeatedFixed64_.addAll(other.repeatedFixed64_);
          }
          onChanged();
        }
        if (!other.repeatedSfixed32_.isEmpty()) {
          if (repeatedSfixed32_.isEmpty()) {
            repeatedSfixed32_ = other.repeatedSfixed32_;
            bitField0_ = (bitField0_ & ~0x02000000);
          } else {
            ensureRepeatedSfixed32IsMutable();
            repeatedSfixed32_.addAll(other.repeatedSfixed32_);
          }
          onChanged();
        }
        if (!other.repeatedSfixed64_.isEmpty()) {
          if (repeatedSfixed64_.isEmpty()) {
            repeatedSfixed64_ = other.repeatedSfixed64_;
            bitField0_ = (bitField0_ & ~0x04000000);
          } else {
            ensureRepeatedSfixed64IsMutable();
            repeatedSfixed64_.addAll(other.repeatedSfixed64_);
          }
          onChanged();
        }
        if (!other.repeatedFloat_.isEmpty()) {
          if (repeatedFloat_.isEmpty()) {
            repeatedFloat_ = other.repeatedFloat_;
            bitField0_ = (bitField0_ & ~0x08000000);
          } else {
            ensureRepeatedFloatIsMutable();
            repeatedFloat_.addAll(other.repeatedFloat_);
          }
          onChanged();
        }
        if (!other.repeatedDouble_.isEmpty()) {
          if (repeatedDouble_.isEmpty()) {
            repeatedDouble_ = other.repeatedDouble_;
            bitField0_ = (bitField0_ & ~0x10000000);
          } else {
            ensureRepeatedDoubleIsMutable();
            repeatedDouble_.addAll(other.repeatedDouble_);
          }
          onChanged();
        }
        if (!other.repeatedBool_.isEmpty()) {
          if (repeatedBool_.isEmpty()) {
            repeatedBool_ = other.repeatedBool_;
            bitField0_ = (bitField0_ & ~0x20000000);
          } else {
            ensureRepeatedBoolIsMutable();
            repeatedBool_.addAll(other.repeatedBool_);
          }
          onChanged();
        }
        if (!other.repeatedString_.isEmpty()) {
          if (repeatedString_.isEmpty()) {
            repeatedString_ = other.repeatedString_;
            bitField0_ = (bitField0_ & ~0x40000000);
          } else {
            ensureRepeatedStringIsMutable();
            repeatedString_.addAll(other.repeatedString_);
          }
          onChanged();
        }
        if (!other.repeatedBytes_.isEmpty()) {
          if (repeatedBytes_.isEmpty()) {
            repeatedBytes_ = other.repeatedBytes_;
            bitField0_ = (bitField0_ & ~0x80000000);
          } else {
            ensureRepeatedBytesIsMutable();
            repeatedBytes_.addAll(other.repeatedBytes_);
          }
          onChanged();
        }
        if (repeatedNestedMessageBuilder_ == null) {
          if (!other.repeatedNestedMessage_.isEmpty()) {
            if (repeatedNestedMessage_.isEmpty()) {
              repeatedNestedMessage_ = other.repeatedNestedMessage_;
              bitField1_ = (bitField1_ & ~0x00000001);
            } else {
              ensureRepeatedNestedMessageIsMutable();
              repeatedNestedMessage_.addAll(other.repeatedNestedMessage_);
            }
            onChanged();
          }
        } else {
          if (!other.repeatedNestedMessage_.isEmpty()) {
            if (repeatedNestedMessageBuilder_.isEmpty()) {
              repeatedNestedMessageBuilder_.dispose();
              repeatedNestedMessageBuilder_ = null;
              repeatedNestedMessage_ = other.repeatedNestedMessage_;
              bitField1_ = (bitField1_ & ~0x00000001);
              repeatedNestedMessageBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getRepeatedNestedMessageFieldBuilder() : null;
            } else {
              repeatedNestedMessageBuilder_.addAllMessages(other.repeatedNestedMessage_);
            }
          }
        }
        if (!other.repeatedNestedEnum_.isEmpty()) {
          if (repeatedNestedEnum_.isEmpty()) {
            repeatedNestedEnum_ = other.repeatedNestedEnum_;
            bitField1_ = (bitField1_ & ~0x00000002);
          } else {
            ensureRepeatedNestedEnumIsMutable();
            repeatedNestedEnum_.addAll(other.repeatedNestedEnum_);
          }
          onChanged();
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.util.JsonTestProto.TestAllTypes parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.google.protobuf.util.JsonTestProto.TestAllTypes) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;
      private int bitField1_;

      private int optionalInt32_ ;
      /**
       * <code>int32 optional_int32 = 1;</code>
       */
      public int getOptionalInt32() {
        return optionalInt32_;
      }
      /**
       * <code>int32 optional_int32 = 1;</code>
       */
      public Builder setOptionalInt32(int value) {
        
        optionalInt32_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 optional_int32 = 1;</code>
       */
      public Builder clearOptionalInt32() {
        
        optionalInt32_ = 0;
        onChanged();
        return this;
      }

      private long optionalInt64_ ;
      /**
       * <code>int64 optional_int64 = 2;</code>
       */
      public long getOptionalInt64() {
        return optionalInt64_;
      }
      /**
       * <code>int64 optional_int64 = 2;</code>
       */
      public Builder setOptionalInt64(long value) {
        
        optionalInt64_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int64 optional_int64 = 2;</code>
       */
      public Builder clearOptionalInt64() {
        
        optionalInt64_ = 0L;
        onChanged();
        return this;
      }

      private int optionalUint32_ ;
      /**
       * <code>uint32 optional_uint32 = 3;</code>
       */
      public int getOptionalUint32() {
        return optionalUint32_;
      }
      /**
       * <code>uint32 optional_uint32 = 3;</code>
       */
      public Builder setOptionalUint32(int value) {
        
        optionalUint32_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>uint32 optional_uint32 = 3;</code>
       */
      public Builder clearOptionalUint32() {
        
        optionalUint32_ = 0;
        onChanged();
        return this;
      }

      private long optionalUint64_ ;
      /**
       * <code>uint64 optional_uint64 = 4;</code>
       */
      public long getOptionalUint64() {
        return optionalUint64_;
      }
      /**
       * <code>uint64 optional_uint64 = 4;</code>
       */
      public Builder setOptionalUint64(long value) {
        
        optionalUint64_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>uint64 optional_uint64 = 4;</code>
       */
      public Builder clearOptionalUint64() {
        
        optionalUint64_ = 0L;
        onChanged();
        return this;
      }

      private int optionalSint32_ ;
      /**
       * <code>sint32 optional_sint32 = 5;</code>
       */
      public int getOptionalSint32() {
        return optionalSint32_;
      }
      /**
       * <code>sint32 optional_sint32 = 5;</code>
       */
      public Builder setOptionalSint32(int value) {
        
        optionalSint32_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>sint32 optional_sint32 = 5;</code>
       */
      public Builder clearOptionalSint32() {
        
        optionalSint32_ = 0;
        onChanged();
        return this;
      }

      private long optionalSint64_ ;
      /**
       * <code>sint64 optional_sint64 = 6;</code>
       */
      public long getOptionalSint64() {
        return optionalSint64_;
      }
      /**
       * <code>sint64 optional_sint64 = 6;</code>
       */
      public Builder setOptionalSint64(long value) {
        
        optionalSint64_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>sint64 optional_sint64 = 6;</code>
       */
      public Builder clearOptionalSint64() {
        
        optionalSint64_ = 0L;
        onChanged();
        return this;
      }

      private int optionalFixed32_ ;
      /**
       * <code>fixed32 optional_fixed32 = 7;</code>
       */
      public int getOptionalFixed32() {
        return optionalFixed32_;
      }
      /**
       * <code>fixed32 optional_fixed32 = 7;</code>
       */
      public Builder setOptionalFixed32(int value) {
        
        optionalFixed32_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>fixed32 optional_fixed32 = 7;</code>
       */
      public Builder clearOptionalFixed32() {
        
        optionalFixed32_ = 0;
        onChanged();
        return this;
      }

      private long optionalFixed64_ ;
      /**
       * <code>fixed64 optional_fixed64 = 8;</code>
       */
      public long getOptionalFixed64() {
        return optionalFixed64_;
      }
      /**
       * <code>fixed64 optional_fixed64 = 8;</code>
       */
      public Builder setOptionalFixed64(long value) {
        
        optionalFixed64_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>fixed64 optional_fixed64 = 8;</code>
       */
      public Builder clearOptionalFixed64() {
        
        optionalFixed64_ = 0L;
        onChanged();
        return this;
      }

      private int optionalSfixed32_ ;
      /**
       * <code>sfixed32 optional_sfixed32 = 9;</code>
       */
      public int getOptionalSfixed32() {
        return optionalSfixed32_;
      }
      /**
       * <code>sfixed32 optional_sfixed32 = 9;</code>
       */
      public Builder setOptionalSfixed32(int value) {
        
        optionalSfixed32_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>sfixed32 optional_sfixed32 = 9;</code>
       */
      public Builder clearOptionalSfixed32() {
        
        optionalSfixed32_ = 0;
        onChanged();
        return this;
      }

      private long optionalSfixed64_ ;
      /**
       * <code>sfixed64 optional_sfixed64 = 10;</code>
       */
      public long getOptionalSfixed64() {
        return optionalSfixed64_;
      }
      /**
       * <code>sfixed64 optional_sfixed64 = 10;</code>
       */
      public Builder setOptionalSfixed64(long value) {
        
        optionalSfixed64_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>sfixed64 optional_sfixed64 = 10;</code>
       */
      public Builder clearOptionalSfixed64() {
        
        optionalSfixed64_ = 0L;
        onChanged();
        return this;
      }

      private float optionalFloat_ ;
      /**
       * <code>float optional_float = 11;</code>
       */
      public float getOptionalFloat() {
        return optionalFloat_;
      }
      /**
       * <code>float optional_float = 11;</code>
       */
      public Builder setOptionalFloat(float value) {
        
        optionalFloat_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>float optional_float = 11;</code>
       */
      public Builder clearOptionalFloat() {
        
        optionalFloat_ = 0F;
        onChanged();
        return this;
      }

      private double optionalDouble_ ;
      /**
       * <code>double optional_double = 12;</code>
       */
      public double getOptionalDouble() {
        return optionalDouble_;
      }
      /**
       * <code>double optional_double = 12;</code>
       */
      public Builder setOptionalDouble(double value) {
        
        optionalDouble_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>double optional_double = 12;</code>
       */
      public Builder clearOptionalDouble() {
        
        optionalDouble_ = 0D;
        onChanged();
        return this;
      }

      private boolean optionalBool_ ;
      /**
       * <code>bool optional_bool = 13;</code>
       */
      public boolean getOptionalBool() {
        return optionalBool_;
      }
      /**
       * <code>bool optional_bool = 13;</code>
       */
      public Builder setOptionalBool(boolean value) {
        
        optionalBool_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>bool optional_bool = 13;</code>
       */
      public Builder clearOptionalBool() {
        
        optionalBool_ = false;
        onChanged();
        return this;
      }

      private java.lang.Object optionalString_ = "";
      /**
       * <code>string optional_string = 14;</code>
       */
      public java.lang.String getOptionalString() {
        java.lang.Object ref = optionalString_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          optionalString_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string optional_string = 14;</code>
       */
      public com.google.protobuf.ByteString
          getOptionalStringBytes() {
        java.lang.Object ref = optionalString_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          optionalString_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string optional_string = 14;</code>
       */
      public Builder setOptionalString(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        optionalString_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string optional_string = 14;</code>
       */
      public Builder clearOptionalString() {
        
        optionalString_ = getDefaultInstance().getOptionalString();
        onChanged();
        return this;
      }
      /**
       * <code>string optional_string = 14;</code>
       */
      public Builder setOptionalStringBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        optionalString_ = value;
        onChanged();
        return this;
      }

      private com.google.protobuf.ByteString optionalBytes_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <code>bytes optional_bytes = 15;</code>
       */
      public com.google.protobuf.ByteString getOptionalBytes() {
        return optionalBytes_;
      }
      /**
       * <code>bytes optional_bytes = 15;</code>
       */
      public Builder setOptionalBytes(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        optionalBytes_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>bytes optional_bytes = 15;</code>
       */
      public Builder clearOptionalBytes() {
        
        optionalBytes_ = getDefaultInstance().getOptionalBytes();
        onChanged();
        return this;
      }

      private com.google.protobuf.util.JsonTestProto.TestAllTypes.NestedMessage optionalNestedMessage_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.util.JsonTestProto.TestAllTypes.NestedMessage, com.google.protobuf.util.JsonTestProto.TestAllTypes.NestedMessage.Builder, com.google.protobuf.util.JsonTestProto.TestAllTypes.NestedMessageOrBuilder> optionalNestedMessageBuilder_;
      /**
       * <code>.json_test.TestAllTypes.NestedMessage optional_nested_message = 18;</code>
       */
      public boolean hasOptionalNestedMessage() {
        return optionalNestedMessageBuilder_ != null || optionalNestedMessage_ != null;
      }
      /**
       * <code>.json_test.TestAllTypes.NestedMessage optional_nested_message = 18;</code>
       */
      public com.google.protobuf.util.JsonTestProto.TestAllTypes.NestedMessage getOptionalNestedMessage() {
        if (optionalNestedMessageBuilder_ == null) {
          return optionalNestedMessage_ == null ? com.google.protobuf.util.JsonTestProto.TestAllTypes.NestedMessage.getDefaultInstance() : optionalNestedMessage_;
        } else {
          return optionalNestedMessageBuilder_.getMessage();
        }
      }
      /**
       * <code>.json_test.TestAllTypes.NestedMessage optional_nested_message = 18;</code>
       */
      public Builder setOptionalNestedMessage(com.google.protobuf.util.JsonTestProto.TestAllTypes.NestedMessage value) {
        if (optionalNestedMessageBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          optionalNestedMessage_ = value;
          onChanged();
        } else {
          optionalNestedMessageBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.json_test.TestAllTypes.NestedMessage optional_nested_message = 18;</code>
       */
      public Builder setOptionalNestedMessage(
          com.google.protobuf.util.JsonTestProto.TestAllTypes.NestedMessage.Builder builderForValue) {
        if (optionalNestedMessageBuilder_ == null) {
          optionalNestedMessage_ = builderForValue.build();
          onChanged();
        } else {
          optionalNestedMessageBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.json_test.TestAllTypes.NestedMessage optional_nested_message = 18;</code>
       */
      public Builder mergeOptionalNestedMessage(com.google.protobuf.util.JsonTestProto.TestAllTypes.NestedMessage value) {
        if (optionalNestedMessageBuilder_ == null) {
          if (optionalNestedMessage_ != null) {
            optionalNestedMessage_ =
              com.google.protobuf.util.JsonTestProto.TestAllTypes.NestedMessage.newBuilder(optionalNestedMessage_).mergeFrom(value).buildPartial();
          } else {
            optionalNestedMessage_ = value;
          }
          onChanged();
        } else {
          optionalNestedMessageBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.json_test.TestAllTypes.NestedMessage optional_nested_message = 18;</code>
       */
      public Builder clearOptionalNestedMessage() {
        if (optionalNestedMessageBuilder_ == null) {
          optionalNestedMessage_ = null;
          onChanged();
        } else {
          optionalNestedMessage_ = null;
          optionalNestedMessageBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.json_test.TestAllTypes.NestedMessage optional_nested_message = 18;</code>
       */
      public com.google.protobuf.util.JsonTestProto.TestAllTypes.NestedMessage.Builder getOptionalNestedMessageBuilder() {
        
        onChanged();
        return getOptionalNestedMessageFieldBuilder().getBuilder();
      }
      /**
       * <code>.json_test.TestAllTypes.NestedMessage optional_nested_message = 18;</code>
       */
      public com.google.protobuf.util.JsonTestProto.TestAllTypes.NestedMessageOrBuilder getOptionalNestedMessageOrBuilder() {
        if (optionalNestedMessageBuilder_ != null) {
          return optionalNestedMessageBuilder_.getMessageOrBuilder();
        } else {
          return optionalNestedMessage_ == null ?
              com.google.protobuf.util.JsonTestProto.TestAllTypes.NestedMessage.getDefaultInstance() : optionalNestedMessage_;
        }
      }
      /**
       * <code>.json_test.TestAllTypes.NestedMessage optional_nested_message = 18;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.util.JsonTestProto.TestAllTypes.NestedMessage, com.google.protobuf.util.JsonTestProto.TestAllTypes.NestedMessage.Builder, com.google.protobuf.util.JsonTestProto.TestAllTypes.NestedMessageOrBuilder> 
          getOptionalNestedMessageFieldBuilder() {
        if (optionalNestedMessageBuilder_ == null) {
          optionalNestedMessageBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.util.JsonTestProto.TestAllTypes.NestedMessage, com.google.protobuf.util.JsonTestProto.TestAllTypes.NestedMessage.Builder, com.google.protobuf.util.JsonTestProto.TestAllTypes.NestedMessageOrBuilder>(
                  getOptionalNestedMessage(),
                  getParentForChildren(),
                  isClean());
          optionalNestedMessage_ = null;
        }
        return optionalNestedMessageBuilder_;
      }

      private int optionalNestedEnum_ = 0;
      /**
       * <code>.json_test.TestAllTypes.NestedEnum optional_nested_enum = 21;</code>
       */
      public int getOptionalNestedEnumValue() {
        return optionalNestedEnum_;
      }
      /**
       * <code>.json_test.TestAllTypes.NestedEnum optional_nested_enum = 21;</code>
       */
      public Builder setOptionalNestedEnumValue(int value) {
        optionalNestedEnum_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>.json_test.TestAllTypes.NestedEnum optional_nested_enum = 21;</code>
       */
      public com.google.protobuf.util.JsonTestProto.TestAllTypes.NestedEnum getOptionalNestedEnum() {
        com.google.protobuf.util.JsonTestProto.TestAllTypes.NestedEnum result = com.google.protobuf.util.JsonTestProto.TestAllTypes.NestedEnum.valueOf(optionalNestedEnum_);
        return result == null ? com.google.protobuf.util.JsonTestProto.TestAllTypes.NestedEnum.UNRECOGNIZED : result;
      }
      /**
       * <code>.json_test.TestAllTypes.NestedEnum optional_nested_enum = 21;</code>
       */
      public Builder setOptionalNestedEnum(com.google.protobuf.util.JsonTestProto.TestAllTypes.NestedEnum value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        optionalNestedEnum_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>.json_test.TestAllTypes.NestedEnum optional_nested_enum = 21;</code>
       */
      public Builder clearOptionalNestedEnum() {
        
        optionalNestedEnum_ = 0;
        onChanged();
        return this;
      }

      private java.util.List<java.lang.Integer> repeatedInt32_ = java.util.Collections.emptyList();
      private void ensureRepeatedInt32IsMutable() {
        if (!((bitField0_ & 0x00020000) == 0x00020000)) {
          repeatedInt32_ = new java.util.ArrayList<java.lang.Integer>(repeatedInt32_);
          bitField0_ |= 0x00020000;
         }
      }
      /**
       * <pre>
       * Repeated
       * </pre>
       *
       * <code>repeated int32 repeated_int32 = 31;</code>
       */
      public java.util.List<java.lang.Integer>
          getRepeatedInt32List() {
        return java.util.Collections.unmodifiableList(repeatedInt32_);
      }
      /**
       * <pre>
       * Repeated
       * </pre>
       *
       * <code>repeated int32 repeated_int32 = 31;</code>
       */
      public int getRepeatedInt32Count() {
        return repeatedInt32_.size();
      }
      /**
       * <pre>
       * Repeated
       * </pre>
       *
       * <code>repeated int32 repeated_int32 = 31;</code>
       */
      public int getRepeatedInt32(int index) {
        return repeatedInt32_.get(index);
      }
      /**
       * <pre>
       * Repeated
       * </pre>
       *
       * <code>repeated int32 repeated_int32 = 31;</code>
       */
      public Builder setRepeatedInt32(
          int index, int value) {
        ensureRepeatedInt32IsMutable();
        repeatedInt32_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Repeated
       * </pre>
       *
       * <code>repeated int32 repeated_int32 = 31;</code>
       */
      public Builder addRepeatedInt32(int value) {
        ensureRepeatedInt32IsMutable();
        repeatedInt32_.add(value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Repeated
       * </pre>
       *
       * <code>repeated int32 repeated_int32 = 31;</code>
       */
      public Builder addAllRepeatedInt32(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureRepeatedInt32IsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, repeatedInt32_);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Repeated
       * </pre>
       *
       * <code>repeated int32 repeated_int32 = 31;</code>
       */
      public Builder clearRepeatedInt32() {
        repeatedInt32_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00020000);
        onChanged();
        return this;
      }

      private java.util.List<java.lang.Long> repeatedInt64_ = java.util.Collections.emptyList();
      private void ensureRepeatedInt64IsMutable() {
        if (!((bitField0_ & 0x00040000) == 0x00040000)) {
          repeatedInt64_ = new java.util.ArrayList<java.lang.Long>(repeatedInt64_);
          bitField0_ |= 0x00040000;
         }
      }
      /**
       * <code>repeated int64 repeated_int64 = 32;</code>
       */
      public java.util.List<java.lang.Long>
          getRepeatedInt64List() {
        return java.util.Collections.unmodifiableList(repeatedInt64_);
      }
      /**
       * <code>repeated int64 repeated_int64 = 32;</code>
       */
      public int getRepeatedInt64Count() {
        return repeatedInt64_.size();
      }
      /**
       * <code>repeated int64 repeated_int64 = 32;</code>
       */
      public long getRepeatedInt64(int index) {
        return repeatedInt64_.get(index);
      }
      /**
       * <code>repeated int64 repeated_int64 = 32;</code>
       */
      public Builder setRepeatedInt64(
          int index, long value) {
        ensureRepeatedInt64IsMutable();
        repeatedInt64_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int64 repeated_int64 = 32;</code>
       */
      public Builder addRepeatedInt64(long value) {
        ensureRepeatedInt64IsMutable();
        repeatedInt64_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int64 repeated_int64 = 32;</code>
       */
      public Builder addAllRepeatedInt64(
          java.lang.Iterable<? extends java.lang.Long> values) {
        ensureRepeatedInt64IsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, repeatedInt64_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int64 repeated_int64 = 32;</code>
       */
      public Builder clearRepeatedInt64() {
        repeatedInt64_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00040000);
        onChanged();
        return this;
      }

      private java.util.List<java.lang.Integer> repeatedUint32_ = java.util.Collections.emptyList();
      private void ensureRepeatedUint32IsMutable() {
        if (!((bitField0_ & 0x00080000) == 0x00080000)) {
          repeatedUint32_ = new java.util.ArrayList<java.lang.Integer>(repeatedUint32_);
          bitField0_ |= 0x00080000;
         }
      }
      /**
       * <code>repeated uint32 repeated_uint32 = 33;</code>
       */
      public java.util.List<java.lang.Integer>
          getRepeatedUint32List() {
        return java.util.Collections.unmodifiableList(repeatedUint32_);
      }
      /**
       * <code>repeated uint32 repeated_uint32 = 33;</code>
       */
      public int getRepeatedUint32Count() {
        return repeatedUint32_.size();
      }
      /**
       * <code>repeated uint32 repeated_uint32 = 33;</code>
       */
      public int getRepeatedUint32(int index) {
        return repeatedUint32_.get(index);
      }
      /**
       * <code>repeated uint32 repeated_uint32 = 33;</code>
       */
      public Builder setRepeatedUint32(
          int index, int value) {
        ensureRepeatedUint32IsMutable();
        repeatedUint32_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 repeated_uint32 = 33;</code>
       */
      public Builder addRepeatedUint32(int value) {
        ensureRepeatedUint32IsMutable();
        repeatedUint32_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 repeated_uint32 = 33;</code>
       */
      public Builder addAllRepeatedUint32(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureRepeatedUint32IsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, repeatedUint32_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 repeated_uint32 = 33;</code>
       */
      public Builder clearRepeatedUint32() {
        repeatedUint32_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00080000);
        onChanged();
        return this;
      }

      private java.util.List<java.lang.Long> repeatedUint64_ = java.util.Collections.emptyList();
      private void ensureRepeatedUint64IsMutable() {
        if (!((bitField0_ & 0x00100000) == 0x00100000)) {
          repeatedUint64_ = new java.util.ArrayList<java.lang.Long>(repeatedUint64_);
          bitField0_ |= 0x00100000;
         }
      }
      /**
       * <code>repeated uint64 repeated_uint64 = 34;</code>
       */
      public java.util.List<java.lang.Long>
          getRepeatedUint64List() {
        return java.util.Collections.unmodifiableList(repeatedUint64_);
      }
      /**
       * <code>repeated uint64 repeated_uint64 = 34;</code>
       */
      public int getRepeatedUint64Count() {
        return repeatedUint64_.size();
      }
      /**
       * <code>repeated uint64 repeated_uint64 = 34;</code>
       */
      public long getRepeatedUint64(int index) {
        return repeatedUint64_.get(index);
      }
      /**
       * <code>repeated uint64 repeated_uint64 = 34;</code>
       */
      public Builder setRepeatedUint64(
          int index, long value) {
        ensureRepeatedUint64IsMutable();
        repeatedUint64_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint64 repeated_uint64 = 34;</code>
       */
      public Builder addRepeatedUint64(long value) {
        ensureRepeatedUint64IsMutable();
        repeatedUint64_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint64 repeated_uint64 = 34;</code>
       */
      public Builder addAllRepeatedUint64(
          java.lang.Iterable<? extends java.lang.Long> values) {
        ensureRepeatedUint64IsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, repeatedUint64_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint64 repeated_uint64 = 34;</code>
       */
      public Builder clearRepeatedUint64() {
        repeatedUint64_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00100000);
        onChanged();
        return this;
      }

      private java.util.List<java.lang.Integer> repeatedSint32_ = java.util.Collections.emptyList();
      private void ensureRepeatedSint32IsMutable() {
        if (!((bitField0_ & 0x00200000) == 0x00200000)) {
          repeatedSint32_ = new java.util.ArrayList<java.lang.Integer>(repeatedSint32_);
          bitField0_ |= 0x00200000;
         }
      }
      /**
       * <code>repeated sint32 repeated_sint32 = 35;</code>
       */
      public java.util.List<java.lang.Integer>
          getRepeatedSint32List() {
        return java.util.Collections.unmodifiableList(repeatedSint32_);
      }
      /**
       * <code>repeated sint32 repeated_sint32 = 35;</code>
       */
      public int getRepeatedSint32Count() {
        return repeatedSint32_.size();
      }
      /**
       * <code>repeated sint32 repeated_sint32 = 35;</code>
       */
      public int getRepeatedSint32(int index) {
        return repeatedSint32_.get(index);
      }
      /**
       * <code>repeated sint32 repeated_sint32 = 35;</code>
       */
      public Builder setRepeatedSint32(
          int index, int value) {
        ensureRepeatedSint32IsMutable();
        repeatedSint32_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated sint32 repeated_sint32 = 35;</code>
       */
      public Builder addRepeatedSint32(int value) {
        ensureRepeatedSint32IsMutable();
        repeatedSint32_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated sint32 repeated_sint32 = 35;</code>
       */
      public Builder addAllRepeatedSint32(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureRepeatedSint32IsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, repeatedSint32_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated sint32 repeated_sint32 = 35;</code>
       */
      public Builder clearRepeatedSint32() {
        repeatedSint32_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00200000);
        onChanged();
        return this;
      }

      private java.util.List<java.lang.Long> repeatedSint64_ = java.util.Collections.emptyList();
      private void ensureRepeatedSint64IsMutable() {
        if (!((bitField0_ & 0x00400000) == 0x00400000)) {
          repeatedSint64_ = new java.util.ArrayList<java.lang.Long>(repeatedSint64_);
          bitField0_ |= 0x00400000;
         }
      }
      /**
       * <code>repeated sint64 repeated_sint64 = 36;</code>
       */
      public java.util.List<java.lang.Long>
          getRepeatedSint64List() {
        return java.util.Collections.unmodifiableList(repeatedSint64_);
      }
      /**
       * <code>repeated sint64 repeated_sint64 = 36;</code>
       */
      public int getRepeatedSint64Count() {
        return repeatedSint64_.size();
      }
      /**
       * <code>repeated sint64 repeated_sint64 = 36;</code>
       */
      public long getRepeatedSint64(int index) {
        return repeatedSint64_.get(index);
      }
      /**
       * <code>repeated sint64 repeated_sint64 = 36;</code>
       */
      public Builder setRepeatedSint64(
          int index, long value) {
        ensureRepeatedSint64IsMutable();
        repeatedSint64_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated sint64 repeated_sint64 = 36;</code>
       */
      public Builder addRepeatedSint64(long value) {
        ensureRepeatedSint64IsMutable();
        repeatedSint64_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated sint64 repeated_sint64 = 36;</code>
       */
      public Builder addAllRepeatedSint64(
          java.lang.Iterable<? extends java.lang.Long> values) {
        ensureRepeatedSint64IsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, repeatedSint64_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated sint64 repeated_sint64 = 36;</code>
       */
      public Builder clearRepeatedSint64() {
        repeatedSint64_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00400000);
        onChanged();
        return this;
      }

      private java.util.List<java.lang.Integer> repeatedFixed32_ = java.util.Collections.emptyList();
      private void ensureRepeatedFixed32IsMutable() {
        if (!((bitField0_ & 0x00800000) == 0x00800000)) {
          repeatedFixed32_ = new java.util.ArrayList<java.lang.Integer>(repeatedFixed32_);
          bitField0_ |= 0x00800000;
         }
      }
      /**
       * <code>repeated fixed32 repeated_fixed32 = 37;</code>
       */
      public java.util.List<java.lang.Integer>
          getRepeatedFixed32List() {
        return java.util.Collections.unmodifiableList(repeatedFixed32_);
      }
      /**
       * <code>repeated fixed32 repeated_fixed32 = 37;</code>
       */
      public int getRepeatedFixed32Count() {
        return repeatedFixed32_.size();
      }
      /**
       * <code>repeated fixed32 repeated_fixed32 = 37;</code>
       */
      public int getRepeatedFixed32(int index) {
        return repeatedFixed32_.get(index);
      }
      /**
       * <code>repeated fixed32 repeated_fixed32 = 37;</code>
       */
      public Builder setRepeatedFixed32(
          int index, int value) {
        ensureRepeatedFixed32IsMutable();
        repeatedFixed32_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated fixed32 repeated_fixed32 = 37;</code>
       */
      public Builder addRepeatedFixed32(int value) {
        ensureRepeatedFixed32IsMutable();
        repeatedFixed32_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated fixed32 repeated_fixed32 = 37;</code>
       */
      public Builder addAllRepeatedFixed32(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureRepeatedFixed32IsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, repeatedFixed32_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated fixed32 repeated_fixed32 = 37;</code>
       */
      public Builder clearRepeatedFixed32() {
        repeatedFixed32_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00800000);
        onChanged();
        return this;
      }

      private java.util.List<java.lang.Long> repeatedFixed64_ = java.util.Collections.emptyList();
      private void ensureRepeatedFixed64IsMutable() {
        if (!((bitField0_ & 0x01000000) == 0x01000000)) {
          repeatedFixed64_ = new java.util.ArrayList<java.lang.Long>(repeatedFixed64_);
          bitField0_ |= 0x01000000;
         }
      }
      /**
       * <code>repeated fixed64 repeated_fixed64 = 38;</code>
       */
      public java.util.List<java.lang.Long>
          getRepeatedFixed64List() {
        return java.util.Collections.unmodifiableList(repeatedFixed64_);
      }
      /**
       * <code>repeated fixed64 repeated_fixed64 = 38;</code>
       */
      public int getRepeatedFixed64Count() {
        return repeatedFixed64_.size();
      }
      /**
       * <code>repeated fixed64 repeated_fixed64 = 38;</code>
       */
      public long getRepeatedFixed64(int index) {
        return repeatedFixed64_.get(index);
      }
      /**
       * <code>repeated fixed64 repeated_fixed64 = 38;</code>
       */
      public Builder setRepeatedFixed64(
          int index, long value) {
        ensureRepeatedFixed64IsMutable();
        repeatedFixed64_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated fixed64 repeated_fixed64 = 38;</code>
       */
      public Builder addRepeatedFixed64(long value) {
        ensureRepeatedFixed64IsMutable();
        repeatedFixed64_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated fixed64 repeated_fixed64 = 38;</code>
       */
      public Builder addAllRepeatedFixed64(
          java.lang.Iterable<? extends java.lang.Long> values) {
        ensureRepeatedFixed64IsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, repeatedFixed64_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated fixed64 repeated_fixed64 = 38;</code>
       */
      public Builder clearRepeatedFixed64() {
        repeatedFixed64_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x01000000);
        onChanged();
        return this;
      }

      private java.util.List<java.lang.Integer> repeatedSfixed32_ = java.util.Collections.emptyList();
      private void ensureRepeatedSfixed32IsMutable() {
        if (!((bitField0_ & 0x02000000) == 0x02000000)) {
          repeatedSfixed32_ = new java.util.ArrayList<java.lang.Integer>(repeatedSfixed32_);
          bitField0_ |= 0x02000000;
         }
      }
      /**
       * <code>repeated sfixed32 repeated_sfixed32 = 39;</code>
       */
      public java.util.List<java.lang.Integer>
          getRepeatedSfixed32List() {
        return java.util.Collections.unmodifiableList(repeatedSfixed32_);
      }
      /**
       * <code>repeated sfixed32 repeated_sfixed32 = 39;</code>
       */
      public int getRepeatedSfixed32Count() {
        return repeatedSfixed32_.size();
      }
      /**
       * <code>repeated sfixed32 repeated_sfixed32 = 39;</code>
       */
      public int getRepeatedSfixed32(int index) {
        return repeatedSfixed32_.get(index);
      }
      /**
       * <code>repeated sfixed32 repeated_sfixed32 = 39;</code>
       */
      public Builder setRepeatedSfixed32(
          int index, int value) {
        ensureRepeatedSfixed32IsMutable();
        repeatedSfixed32_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated sfixed32 repeated_sfixed32 = 39;</code>
       */
      public Builder addRepeatedSfixed32(int value) {
        ensureRepeatedSfixed32IsMutable();
        repeatedSfixed32_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated sfixed32 repeated_sfixed32 = 39;</code>
       */
      public Builder addAllRepeatedSfixed32(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureRepeatedSfixed32IsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, repeatedSfixed32_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated sfixed32 repeated_sfixed32 = 39;</code>
       */
      public Builder clearRepeatedSfixed32() {
        repeatedSfixed32_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x02000000);
        onChanged();
        return this;
      }

      private java.util.List<java.lang.Long> repeatedSfixed64_ = java.util.Collections.emptyList();
      private void ensureRepeatedSfixed64IsMutable() {
        if (!((bitField0_ & 0x04000000) == 0x04000000)) {
          repeatedSfixed64_ = new java.util.ArrayList<java.lang.Long>(repeatedSfixed64_);
          bitField0_ |= 0x04000000;
         }
      }
      /**
       * <code>repeated sfixed64 repeated_sfixed64 = 40;</code>
       */
      public java.util.List<java.lang.Long>
          getRepeatedSfixed64List() {
        return java.util.Collections.unmodifiableList(repeatedSfixed64_);
      }
      /**
       * <code>repeated sfixed64 repeated_sfixed64 = 40;</code>
       */
      public int getRepeatedSfixed64Count() {
        return repeatedSfixed64_.size();
      }
      /**
       * <code>repeated sfixed64 repeated_sfixed64 = 40;</code>
       */
      public long getRepeatedSfixed64(int index) {
        return repeatedSfixed64_.get(index);
      }
      /**
       * <code>repeated sfixed64 repeated_sfixed64 = 40;</code>
       */
      public Builder setRepeatedSfixed64(
          int index, long value) {
        ensureRepeatedSfixed64IsMutable();
        repeatedSfixed64_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated sfixed64 repeated_sfixed64 = 40;</code>
       */
      public Builder addRepeatedSfixed64(long value) {
        ensureRepeatedSfixed64IsMutable();
        repeatedSfixed64_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated sfixed64 repeated_sfixed64 = 40;</code>
       */
      public Builder addAllRepeatedSfixed64(
          java.lang.Iterable<? extends java.lang.Long> values) {
        ensureRepeatedSfixed64IsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, repeatedSfixed64_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated sfixed64 repeated_sfixed64 = 40;</code>
       */
      public Builder clearRepeatedSfixed64() {
        repeatedSfixed64_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x04000000);
        onChanged();
        return this;
      }

      private java.util.List<java.lang.Float> repeatedFloat_ = java.util.Collections.emptyList();
      private void ensureRepeatedFloatIsMutable() {
        if (!((bitField0_ & 0x08000000) == 0x08000000)) {
          repeatedFloat_ = new java.util.ArrayList<java.lang.Float>(repeatedFloat_);
          bitField0_ |= 0x08000000;
         }
      }
      /**
       * <code>repeated float repeated_float = 41;</code>
       */
      public java.util.List<java.lang.Float>
          getRepeatedFloatList() {
        return java.util.Collections.unmodifiableList(repeatedFloat_);
      }
      /**
       * <code>repeated float repeated_float = 41;</code>
       */
      public int getRepeatedFloatCount() {
        return repeatedFloat_.size();
      }
      /**
       * <code>repeated float repeated_float = 41;</code>
       */
      public float getRepeatedFloat(int index) {
        return repeatedFloat_.get(index);
      }
      /**
       * <code>repeated float repeated_float = 41;</code>
       */
      public Builder setRepeatedFloat(
          int index, float value) {
        ensureRepeatedFloatIsMutable();
        repeatedFloat_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated float repeated_float = 41;</code>
       */
      public Builder addRepeatedFloat(float value) {
        ensureRepeatedFloatIsMutable();
        repeatedFloat_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated float repeated_float = 41;</code>
       */
      public Builder addAllRepeatedFloat(
          java.lang.Iterable<? extends java.lang.Float> values) {
        ensureRepeatedFloatIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, repeatedFloat_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated float repeated_float = 41;</code>
       */
      public Builder clearRepeatedFloat() {
        repeatedFloat_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x08000000);
        onChanged();
        return this;
      }

      private java.util.List<java.lang.Double> repeatedDouble_ = java.util.Collections.emptyList();
      private void ensureRepeatedDoubleIsMutable() {
        if (!((bitField0_ & 0x10000000) == 0x10000000)) {
          repeatedDouble_ = new java.util.ArrayList<java.lang.Double>(repeatedDouble_);
          bitField0_ |= 0x10000000;
         }
      }
      /**
       * <code>repeated double repeated_double = 42;</code>
       */
      public java.util.List<java.lang.Double>
          getRepeatedDoubleList() {
        return java.util.Collections.unmodifiableList(repeatedDouble_);
      }
      /**
       * <code>repeated double repeated_double = 42;</code>
       */
      public int getRepeatedDoubleCount() {
        return repeatedDouble_.size();
      }
      /**
       * <code>repeated double repeated_double = 42;</code>
       */
      public double getRepeatedDouble(int index) {
        return repeatedDouble_.get(index);
      }
      /**
       * <code>repeated double repeated_double = 42;</code>
       */
      public Builder setRepeatedDouble(
          int index, double value) {
        ensureRepeatedDoubleIsMutable();
        repeatedDouble_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated double repeated_double = 42;</code>
       */
      public Builder addRepeatedDouble(double value) {
        ensureRepeatedDoubleIsMutable();
        repeatedDouble_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated double repeated_double = 42;</code>
       */
      public Builder addAllRepeatedDouble(
          java.lang.Iterable<? extends java.lang.Double> values) {
        ensureRepeatedDoubleIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, repeatedDouble_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated double repeated_double = 42;</code>
       */
      public Builder clearRepeatedDouble() {
        repeatedDouble_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x10000000);
        onChanged();
        return this;
      }

      private java.util.List<java.lang.Boolean> repeatedBool_ = java.util.Collections.emptyList();
      private void ensureRepeatedBoolIsMutable() {
        if (!((bitField0_ & 0x20000000) == 0x20000000)) {
          repeatedBool_ = new java.util.ArrayList<java.lang.Boolean>(repeatedBool_);
          bitField0_ |= 0x20000000;
         }
      }
      /**
       * <code>repeated bool repeated_bool = 43;</code>
       */
      public java.util.List<java.lang.Boolean>
          getRepeatedBoolList() {
        return java.util.Collections.unmodifiableList(repeatedBool_);
      }
      /**
       * <code>repeated bool repeated_bool = 43;</code>
       */
      public int getRepeatedBoolCount() {
        return repeatedBool_.size();
      }
      /**
       * <code>repeated bool repeated_bool = 43;</code>
       */
      public boolean getRepeatedBool(int index) {
        return repeatedBool_.get(index);
      }
      /**
       * <code>repeated bool repeated_bool = 43;</code>
       */
      public Builder setRepeatedBool(
          int index, boolean value) {
        ensureRepeatedBoolIsMutable();
        repeatedBool_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated bool repeated_bool = 43;</code>
       */
      public Builder addRepeatedBool(boolean value) {
        ensureRepeatedBoolIsMutable();
        repeatedBool_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated bool repeated_bool = 43;</code>
       */
      public Builder addAllRepeatedBool(
          java.lang.Iterable<? extends java.lang.Boolean> values) {
        ensureRepeatedBoolIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, repeatedBool_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated bool repeated_bool = 43;</code>
       */
      public Builder clearRepeatedBool() {
        repeatedBool_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x20000000);
        onChanged();
        return this;
      }

      private com.google.protobuf.LazyStringList repeatedString_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      private void ensureRepeatedStringIsMutable() {
        if (!((bitField0_ & 0x40000000) == 0x40000000)) {
          repeatedString_ = new com.google.protobuf.LazyStringArrayList(repeatedString_);
          bitField0_ |= 0x40000000;
         }
      }
      /**
       * <code>repeated string repeated_string = 44;</code>
       */
      public com.google.protobuf.ProtocolStringList
          getRepeatedStringList() {
        return repeatedString_.getUnmodifiableView();
      }
      /**
       * <code>repeated string repeated_string = 44;</code>
       */
      public int getRepeatedStringCount() {
        return repeatedString_.size();
      }
      /**
       * <code>repeated string repeated_string = 44;</code>
       */
      public java.lang.String getRepeatedString(int index) {
        return repeatedString_.get(index);
      }
      /**
       * <code>repeated string repeated_string = 44;</code>
       */
      public com.google.protobuf.ByteString
          getRepeatedStringBytes(int index) {
        return repeatedString_.getByteString(index);
      }
      /**
       * <code>repeated string repeated_string = 44;</code>
       */
      public Builder setRepeatedString(
          int index, java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureRepeatedStringIsMutable();
        repeatedString_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string repeated_string = 44;</code>
       */
      public Builder addRepeatedString(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureRepeatedStringIsMutable();
        repeatedString_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string repeated_string = 44;</code>
       */
      public Builder addAllRepeatedString(
          java.lang.Iterable<java.lang.String> values) {
        ensureRepeatedStringIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, repeatedString_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string repeated_string = 44;</code>
       */
      public Builder clearRepeatedString() {
        repeatedString_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x40000000);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string repeated_string = 44;</code>
       */
      public Builder addRepeatedStringBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        ensureRepeatedStringIsMutable();
        repeatedString_.add(value);
        onChanged();
        return this;
      }

      private java.util.List<com.google.protobuf.ByteString> repeatedBytes_ = java.util.Collections.emptyList();
      private void ensureRepeatedBytesIsMutable() {
        if (!((bitField0_ & 0x80000000) == 0x80000000)) {
          repeatedBytes_ = new java.util.ArrayList<com.google.protobuf.ByteString>(repeatedBytes_);
          bitField0_ |= 0x80000000;
         }
      }
      /**
       * <code>repeated bytes repeated_bytes = 45;</code>
       */
      public java.util.List<com.google.protobuf.ByteString>
          getRepeatedBytesList() {
        return java.util.Collections.unmodifiableList(repeatedBytes_);
      }
      /**
       * <code>repeated bytes repeated_bytes = 45;</code>
       */
      public int getRepeatedBytesCount() {
        return repeatedBytes_.size();
      }
      /**
       * <code>repeated bytes repeated_bytes = 45;</code>
       */
      public com.google.protobuf.ByteString getRepeatedBytes(int index) {
        return repeatedBytes_.get(index);
      }
      /**
       * <code>repeated bytes repeated_bytes = 45;</code>
       */
      public Builder setRepeatedBytes(
          int index, com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureRepeatedBytesIsMutable();
        repeatedBytes_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated bytes repeated_bytes = 45;</code>
       */
      public Builder addRepeatedBytes(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureRepeatedBytesIsMutable();
        repeatedBytes_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated bytes repeated_bytes = 45;</code>
       */
      public Builder addAllRepeatedBytes(
          java.lang.Iterable<? extends com.google.protobuf.ByteString> values) {
        ensureRepeatedBytesIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, repeatedBytes_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated bytes repeated_bytes = 45;</code>
       */
      public Builder clearRepeatedBytes() {
        repeatedBytes_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x80000000);
        onChanged();
        return this;
      }

      private java.util.List<com.google.protobuf.util.JsonTestProto.TestAllTypes.NestedMessage> repeatedNestedMessage_ =
        java.util.Collections.emptyList();
      private void ensureRepeatedNestedMessageIsMutable() {
        if (!((bitField1_ & 0x00000001) == 0x00000001)) {
          repeatedNestedMessage_ = new java.util.ArrayList<com.google.protobuf.util.JsonTestProto.TestAllTypes.NestedMessage>(repeatedNestedMessage_);
          bitField1_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.google.protobuf.util.JsonTestProto.TestAllTypes.NestedMessage, com.google.protobuf.util.JsonTestProto.TestAllTypes.NestedMessage.Builder, com.google.protobuf.util.JsonTestProto.TestAllTypes.NestedMessageOrBuilder> repeatedNestedMessageBuilder_;

      /**
       * <code>repeated .json_test.TestAllTypes.NestedMessage repeated_nested_message = 48;</code>
       */
      public java.util.List<com.google.protobuf.util.JsonTestProto.TestAllTypes.NestedMessage> getRepeatedNestedMessageList() {
        if (repeatedNestedMessageBuilder_ == null) {
          return java.util.Collections.unmodifiableList(repeatedNestedMessage_);
        } else {
          return repeatedNestedMessageBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .json_test.TestAllTypes.NestedMessage repeated_nested_message = 48;</code>
       */
      public int getRepeatedNestedMessageCount() {
        if (repeatedNestedMessageBuilder_ == null) {
          return repeatedNestedMessage_.size();
        } else {
          return repeatedNestedMessageBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .json_test.TestAllTypes.NestedMessage repeated_nested_message = 48;</code>
       */
      public com.google.protobuf.util.JsonTestProto.TestAllTypes.NestedMessage getRepeatedNestedMessage(int index) {
        if (repeatedNestedMessageBuilder_ == null) {
          return repeatedNestedMessage_.get(index);
        } else {
          return repeatedNestedMessageBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .json_test.TestAllTypes.NestedMessage repeated_nested_message = 48;</code>
       */
      public Builder setRepeatedNestedMessage(
          int index, com.google.protobuf.util.JsonTestProto.TestAllTypes.NestedMessage value) {
        if (repeatedNestedMessageBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRepeatedNestedMessageIsMutable();
          repeatedNestedMessage_.set(index, value);
          onChanged();
        } else {
          repeatedNestedMessageBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .json_test.TestAllTypes.NestedMessage repeated_nested_message = 48;</code>
       */
      public Builder setRepeatedNestedMessage(
          int index, com.google.protobuf.util.JsonTestProto.TestAllTypes.NestedMessage.Builder builderForValue) {
        if (repeatedNestedMessageBuilder_ == null) {
          ensureRepeatedNestedMessageIsMutable();
          repeatedNestedMessage_.set(index, builderForValue.build());
          onChanged();
        } else {
          repeatedNestedMessageBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .json_test.TestAllTypes.NestedMessage repeated_nested_message = 48;</code>
       */
      public Builder addRepeatedNestedMessage(com.google.protobuf.util.JsonTestProto.TestAllTypes.NestedMessage value) {
        if (repeatedNestedMessageBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRepeatedNestedMessageIsMutable();
          repeatedNestedMessage_.add(value);
          onChanged();
        } else {
          repeatedNestedMessageBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .json_test.TestAllTypes.NestedMessage repeated_nested_message = 48;</code>
       */
      public Builder addRepeatedNestedMessage(
          int index, com.google.protobuf.util.JsonTestProto.TestAllTypes.NestedMessage value) {
        if (repeatedNestedMessageBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRepeatedNestedMessageIsMutable();
          repeatedNestedMessage_.add(index, value);
          onChanged();
        } else {
          repeatedNestedMessageBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .json_test.TestAllTypes.NestedMessage repeated_nested_message = 48;</code>
       */
      public Builder addRepeatedNestedMessage(
          com.google.protobuf.util.JsonTestProto.TestAllTypes.NestedMessage.Builder builderForValue) {
        if (repeatedNestedMessageBuilder_ == null) {
          ensureRepeatedNestedMessageIsMutable();
          repeatedNestedMessage_.add(builderForValue.build());
          onChanged();
        } else {
          repeatedNestedMessageBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .json_test.TestAllTypes.NestedMessage repeated_nested_message = 48;</code>
       */
      public Builder addRepeatedNestedMessage(
          int index, com.google.protobuf.util.JsonTestProto.TestAllTypes.NestedMessage.Builder builderForValue) {
        if (repeatedNestedMessageBuilder_ == null) {
          ensureRepeatedNestedMessageIsMutable();
          repeatedNestedMessage_.add(index, builderForValue.build());
          onChanged();
        } else {
          repeatedNestedMessageBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .json_test.TestAllTypes.NestedMessage repeated_nested_message = 48;</code>
       */
      public Builder addAllRepeatedNestedMessage(
          java.lang.Iterable<? extends com.google.protobuf.util.JsonTestProto.TestAllTypes.NestedMessage> values) {
        if (repeatedNestedMessageBuilder_ == null) {
          ensureRepeatedNestedMessageIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, repeatedNestedMessage_);
          onChanged();
        } else {
          repeatedNestedMessageBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .json_test.TestAllTypes.NestedMessage repeated_nested_message = 48;</code>
       */
      public Builder clearRepeatedNestedMessage() {
        if (repeatedNestedMessageBuilder_ == null) {
          repeatedNestedMessage_ = java.util.Collections.emptyList();
          bitField1_ = (bitField1_ & ~0x00000001);
          onChanged();
        } else {
          repeatedNestedMessageBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .json_test.TestAllTypes.NestedMessage repeated_nested_message = 48;</code>
       */
      public Builder removeRepeatedNestedMessage(int index) {
        if (repeatedNestedMessageBuilder_ == null) {
          ensureRepeatedNestedMessageIsMutable();
          repeatedNestedMessage_.remove(index);
          onChanged();
        } else {
          repeatedNestedMessageBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .json_test.TestAllTypes.NestedMessage repeated_nested_message = 48;</code>
       */
      public com.google.protobuf.util.JsonTestProto.TestAllTypes.NestedMessage.Builder getRepeatedNestedMessageBuilder(
          int index) {
        return getRepeatedNestedMessageFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .json_test.TestAllTypes.NestedMessage repeated_nested_message = 48;</code>
       */
      public com.google.protobuf.util.JsonTestProto.TestAllTypes.NestedMessageOrBuilder getRepeatedNestedMessageOrBuilder(
          int index) {
        if (repeatedNestedMessageBuilder_ == null) {
          return repeatedNestedMessage_.get(index);  } else {
          return repeatedNestedMessageBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .json_test.TestAllTypes.NestedMessage repeated_nested_message = 48;</code>
       */
      public java.util.List<? extends com.google.protobuf.util.JsonTestProto.TestAllTypes.NestedMessageOrBuilder> 
           getRepeatedNestedMessageOrBuilderList() {
        if (repeatedNestedMessageBuilder_ != null) {
          return repeatedNestedMessageBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(repeatedNestedMessage_);
        }
      }
      /**
       * <code>repeated .json_test.TestAllTypes.NestedMessage repeated_nested_message = 48;</code>
       */
      public com.google.protobuf.util.JsonTestProto.TestAllTypes.NestedMessage.Builder addRepeatedNestedMessageBuilder() {
        return getRepeatedNestedMessageFieldBuilder().addBuilder(
            com.google.protobuf.util.JsonTestProto.TestAllTypes.NestedMessage.getDefaultInstance());
      }
      /**
       * <code>repeated .json_test.TestAllTypes.NestedMessage repeated_nested_message = 48;</code>
       */
      public com.google.protobuf.util.JsonTestProto.TestAllTypes.NestedMessage.Builder addRepeatedNestedMessageBuilder(
          int index) {
        return getRepeatedNestedMessageFieldBuilder().addBuilder(
            index, com.google.protobuf.util.JsonTestProto.TestAllTypes.NestedMessage.getDefaultInstance());
      }
      /**
       * <code>repeated .json_test.TestAllTypes.NestedMessage repeated_nested_message = 48;</code>
       */
      public java.util.List<com.google.protobuf.util.JsonTestProto.TestAllTypes.NestedMessage.Builder> 
           getRepeatedNestedMessageBuilderList() {
        return getRepeatedNestedMessageFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.google.protobuf.util.JsonTestProto.TestAllTypes.NestedMessage, com.google.protobuf.util.JsonTestProto.TestAllTypes.NestedMessage.Builder, com.google.protobuf.util.JsonTestProto.TestAllTypes.NestedMessageOrBuilder> 
          getRepeatedNestedMessageFieldBuilder() {
        if (repeatedNestedMessageBuilder_ == null) {
          repeatedNestedMessageBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              com.google.protobuf.util.JsonTestProto.TestAllTypes.NestedMessage, com.google.protobuf.util.JsonTestProto.TestAllTypes.NestedMessage.Builder, com.google.protobuf.util.JsonTestProto.TestAllTypes.NestedMessageOrBuilder>(
                  repeatedNestedMessage_,
                  ((bitField1_ & 0x00000001) == 0x00000001),
                  getParentForChildren(),
                  isClean());
          repeatedNestedMessage_ = null;
        }
        return repeatedNestedMessageBuilder_;
      }

      private java.util.List<java.lang.Integer> repeatedNestedEnum_ =
        java.util.Collections.emptyList();
      private void ensureRepeatedNestedEnumIsMutable() {
        if (!((bitField1_ & 0x00000002) == 0x00000002)) {
          repeatedNestedEnum_ = new java.util.ArrayList<java.lang.Integer>(repeatedNestedEnum_);
          bitField1_ |= 0x00000002;
        }
      }
      /**
       * <code>repeated .json_test.TestAllTypes.NestedEnum repeated_nested_enum = 51;</code>
       */
      public java.util.List<com.google.protobuf.util.JsonTestProto.TestAllTypes.NestedEnum> getRepeatedNestedEnumList() {
        return new com.google.protobuf.Internal.ListAdapter<
            java.lang.Integer, com.google.protobuf.util.JsonTestProto.TestAllTypes.NestedEnum>(repeatedNestedEnum_, repeatedNestedEnum_converter_);
      }
      /**
       * <code>repeated .json_test.TestAllTypes.NestedEnum repeated_nested_enum = 51;</code>
       */
      public int getRepeatedNestedEnumCount() {
        return repeatedNestedEnum_.size();
      }
      /**
       * <code>repeated .json_test.TestAllTypes.NestedEnum repeated_nested_enum = 51;</code>
       */
      public com.google.protobuf.util.JsonTestProto.TestAllTypes.NestedEnum getRepeatedNestedEnum(int index) {
        return repeatedNestedEnum_converter_.convert(repeatedNestedEnum_.get(index));
      }
      /**
       * <code>repeated .json_test.TestAllTypes.NestedEnum repeated_nested_enum = 51;</code>
       */
      public Builder setRepeatedNestedEnum(
          int index, com.google.protobuf.util.JsonTestProto.TestAllTypes.NestedEnum value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureRepeatedNestedEnumIsMutable();
        repeatedNestedEnum_.set(index, value.getNumber());
        onChanged();
        return this;
      }
      /**
       * <code>repeated .json_test.TestAllTypes.NestedEnum repeated_nested_enum = 51;</code>
       */
      public Builder addRepeatedNestedEnum(com.google.protobuf.util.JsonTestProto.TestAllTypes.NestedEnum value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureRepeatedNestedEnumIsMutable();
        repeatedNestedEnum_.add(value.getNumber());
        onChanged();
        return this;
      }
      /**
       * <code>repeated .json_test.TestAllTypes.NestedEnum repeated_nested_enum = 51;</code>
       */
      public Builder addAllRepeatedNestedEnum(
          java.lang.Iterable<? extends com.google.protobuf.util.JsonTestProto.TestAllTypes.NestedEnum> values) {
        ensureRepeatedNestedEnumIsMutable();
        for (com.google.protobuf.util.JsonTestProto.TestAllTypes.NestedEnum value : values) {
          repeatedNestedEnum_.add(value.getNumber());
        }
        onChanged();
        return this;
      }
      /**
       * <code>repeated .json_test.TestAllTypes.NestedEnum repeated_nested_enum = 51;</code>
       */
      public Builder clearRepeatedNestedEnum() {
        repeatedNestedEnum_ = java.util.Collections.emptyList();
        bitField1_ = (bitField1_ & ~0x00000002);
        onChanged();
        return this;
      }
      /**
       * <code>repeated .json_test.TestAllTypes.NestedEnum repeated_nested_enum = 51;</code>
       */
      public java.util.List<java.lang.Integer>
      getRepeatedNestedEnumValueList() {
        return java.util.Collections.unmodifiableList(repeatedNestedEnum_);
      }
      /**
       * <code>repeated .json_test.TestAllTypes.NestedEnum repeated_nested_enum = 51;</code>
       */
      public int getRepeatedNestedEnumValue(int index) {
        return repeatedNestedEnum_.get(index);
      }
      /**
       * <code>repeated .json_test.TestAllTypes.NestedEnum repeated_nested_enum = 51;</code>
       */
      public Builder setRepeatedNestedEnumValue(
          int index, int value) {
        ensureRepeatedNestedEnumIsMutable();
        repeatedNestedEnum_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated .json_test.TestAllTypes.NestedEnum repeated_nested_enum = 51;</code>
       */
      public Builder addRepeatedNestedEnumValue(int value) {
        ensureRepeatedNestedEnumIsMutable();
        repeatedNestedEnum_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated .json_test.TestAllTypes.NestedEnum repeated_nested_enum = 51;</code>
       */
      public Builder addAllRepeatedNestedEnumValue(
          java.lang.Iterable<java.lang.Integer> values) {
        ensureRepeatedNestedEnumIsMutable();
        for (int value : values) {
          repeatedNestedEnum_.add(value);
        }
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:json_test.TestAllTypes)
    }

    // @@protoc_insertion_point(class_scope:json_test.TestAllTypes)
    private static final com.google.protobuf.util.JsonTestProto.TestAllTypes DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.google.protobuf.util.JsonTestProto.TestAllTypes();
    }

    public static com.google.protobuf.util.JsonTestProto.TestAllTypes getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<TestAllTypes>
        PARSER = new com.google.protobuf.AbstractParser<TestAllTypes>() {
      public TestAllTypes parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new TestAllTypes(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<TestAllTypes> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<TestAllTypes> getParserForType() {
      return PARSER;
    }

    public com.google.protobuf.util.JsonTestProto.TestAllTypes getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface TestOneofOrBuilder extends
      // @@protoc_insertion_point(interface_extends:json_test.TestOneof)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>int32 oneof_int32 = 1;</code>
     */
    int getOneofInt32();

    /**
     * <code>.json_test.TestAllTypes.NestedMessage oneof_nested_message = 2;</code>
     */
    com.google.protobuf.util.JsonTestProto.TestAllTypes.NestedMessage getOneofNestedMessage();
    /**
     * <code>.json_test.TestAllTypes.NestedMessage oneof_nested_message = 2;</code>
     */
    com.google.protobuf.util.JsonTestProto.TestAllTypes.NestedMessageOrBuilder getOneofNestedMessageOrBuilder();

    /**
     * <code>.google.protobuf.NullValue oneof_null_value = 3;</code>
     */
    int getOneofNullValueValue();
    /**
     * <code>.google.protobuf.NullValue oneof_null_value = 3;</code>
     */
    com.google.protobuf.NullValue getOneofNullValue();

    public com.google.protobuf.util.JsonTestProto.TestOneof.OneofFieldCase getOneofFieldCase();
  }
  /**
   * Protobuf type {@code json_test.TestOneof}
   */
  public  static final class TestOneof extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:json_test.TestOneof)
      TestOneofOrBuilder {
    // Use TestOneof.newBuilder() to construct.
    private TestOneof(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private TestOneof() {
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private TestOneof(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              oneofFieldCase_ = 1;
              oneofField_ = input.readInt32();
              break;
            }
            case 18: {
              com.google.protobuf.util.JsonTestProto.TestAllTypes.NestedMessage.Builder subBuilder = null;
              if (oneofFieldCase_ == 2) {
                subBuilder = ((com.google.protobuf.util.JsonTestProto.TestAllTypes.NestedMessage) oneofField_).toBuilder();
              }
              oneofField_ =
                  input.readMessage(com.google.protobuf.util.JsonTestProto.TestAllTypes.NestedMessage.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((com.google.protobuf.util.JsonTestProto.TestAllTypes.NestedMessage) oneofField_);
                oneofField_ = subBuilder.buildPartial();
              }
              oneofFieldCase_ = 2;
              break;
            }
            case 24: {
              int rawValue = input.readEnum();
              oneofFieldCase_ = 3;
              oneofField_ = rawValue;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.google.protobuf.util.JsonTestProto.internal_static_json_test_TestOneof_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.protobuf.util.JsonTestProto.internal_static_json_test_TestOneof_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.protobuf.util.JsonTestProto.TestOneof.class, com.google.protobuf.util.JsonTestProto.TestOneof.Builder.class);
    }

    private int oneofFieldCase_ = 0;
    private java.lang.Object oneofField_;
    public enum OneofFieldCase
        implements com.google.protobuf.Internal.EnumLite {
      ONEOF_INT32(1),
      ONEOF_NESTED_MESSAGE(2),
      ONEOF_NULL_VALUE(3),
      ONEOFFIELD_NOT_SET(0);
      private final int value;
      private OneofFieldCase(int value) {
        this.value = value;
      }
      /**
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static OneofFieldCase valueOf(int value) {
        return forNumber(value);
      }

      public static OneofFieldCase forNumber(int value) {
        switch (value) {
          case 1: return ONEOF_INT32;
          case 2: return ONEOF_NESTED_MESSAGE;
          case 3: return ONEOF_NULL_VALUE;
          case 0: return ONEOFFIELD_NOT_SET;
          default: return null;
        }
      }
      public int getNumber() {
        return this.value;
      }
    };

    public OneofFieldCase
    getOneofFieldCase() {
      return OneofFieldCase.forNumber(
          oneofFieldCase_);
    }

    public static final int ONEOF_INT32_FIELD_NUMBER = 1;
    /**
     * <code>int32 oneof_int32 = 1;</code>
     */
    public int getOneofInt32() {
      if (oneofFieldCase_ == 1) {
        return (java.lang.Integer) oneofField_;
      }
      return 0;
    }

    public static final int ONEOF_NESTED_MESSAGE_FIELD_NUMBER = 2;
    /**
     * <code>.json_test.TestAllTypes.NestedMessage oneof_nested_message = 2;</code>
     */
    public com.google.protobuf.util.JsonTestProto.TestAllTypes.NestedMessage getOneofNestedMessage() {
      if (oneofFieldCase_ == 2) {
         return (com.google.protobuf.util.JsonTestProto.TestAllTypes.NestedMessage) oneofField_;
      }
      return com.google.protobuf.util.JsonTestProto.TestAllTypes.NestedMessage.getDefaultInstance();
    }
    /**
     * <code>.json_test.TestAllTypes.NestedMessage oneof_nested_message = 2;</code>
     */
    public com.google.protobuf.util.JsonTestProto.TestAllTypes.NestedMessageOrBuilder getOneofNestedMessageOrBuilder() {
      if (oneofFieldCase_ == 2) {
         return (com.google.protobuf.util.JsonTestProto.TestAllTypes.NestedMessage) oneofField_;
      }
      return com.google.protobuf.util.JsonTestProto.TestAllTypes.NestedMessage.getDefaultInstance();
    }

    public static final int ONEOF_NULL_VALUE_FIELD_NUMBER = 3;
    /**
     * <code>.google.protobuf.NullValue oneof_null_value = 3;</code>
     */
    public int getOneofNullValueValue() {
      if (oneofFieldCase_ == 3) {
        return (java.lang.Integer) oneofField_;
      }
      return 0;
    }
    /**
     * <code>.google.protobuf.NullValue oneof_null_value = 3;</code>
     */
    public com.google.protobuf.NullValue getOneofNullValue() {
      if (oneofFieldCase_ == 3) {
        com.google.protobuf.NullValue result = com.google.protobuf.NullValue.valueOf(
            (java.lang.Integer) oneofField_);
        return result == null ? com.google.protobuf.NullValue.UNRECOGNIZED : result;
      }
      return com.google.protobuf.NullValue.NULL_VALUE;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (oneofFieldCase_ == 1) {
        output.writeInt32(
            1, (int)((java.lang.Integer) oneofField_));
      }
      if (oneofFieldCase_ == 2) {
        output.writeMessage(2, (com.google.protobuf.util.JsonTestProto.TestAllTypes.NestedMessage) oneofField_);
      }
      if (oneofFieldCase_ == 3) {
        output.writeEnum(3, ((java.lang.Integer) oneofField_));
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (oneofFieldCase_ == 1) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(
              1, (int)((java.lang.Integer) oneofField_));
      }
      if (oneofFieldCase_ == 2) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, (com.google.protobuf.util.JsonTestProto.TestAllTypes.NestedMessage) oneofField_);
      }
      if (oneofFieldCase_ == 3) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(3, ((java.lang.Integer) oneofField_));
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.google.protobuf.util.JsonTestProto.TestOneof)) {
        return super.equals(obj);
      }
      com.google.protobuf.util.JsonTestProto.TestOneof other = (com.google.protobuf.util.JsonTestProto.TestOneof) obj;

      boolean result = true;
      result = result && getOneofFieldCase().equals(
          other.getOneofFieldCase());
      if (!result) return false;
      switch (oneofFieldCase_) {
        case 1:
          result = result && (getOneofInt32()
              == other.getOneofInt32());
          break;
        case 2:
          result = result && getOneofNestedMessage()
              .equals(other.getOneofNestedMessage());
          break;
        case 3:
          result = result && getOneofNullValueValue()
              == other.getOneofNullValueValue();
          break;
        case 0:
        default:
      }
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      switch (oneofFieldCase_) {
        case 1:
          hash = (37 * hash) + ONEOF_INT32_FIELD_NUMBER;
          hash = (53 * hash) + getOneofInt32();
          break;
        case 2:
          hash = (37 * hash) + ONEOF_NESTED_MESSAGE_FIELD_NUMBER;
          hash = (53 * hash) + getOneofNestedMessage().hashCode();
          break;
        case 3:
          hash = (37 * hash) + ONEOF_NULL_VALUE_FIELD_NUMBER;
          hash = (53 * hash) + getOneofNullValueValue();
          break;
        case 0:
        default:
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.google.protobuf.util.JsonTestProto.TestOneof parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.google.protobuf.util.JsonTestProto.TestOneof parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.google.protobuf.util.JsonTestProto.TestOneof parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.google.protobuf.util.JsonTestProto.TestOneof parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.google.protobuf.util.JsonTestProto.TestOneof parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.google.protobuf.util.JsonTestProto.TestOneof parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.google.protobuf.util.JsonTestProto.TestOneof parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.google.protobuf.util.JsonTestProto.TestOneof parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.google.protobuf.util.JsonTestProto.TestOneof parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.google.protobuf.util.JsonTestProto.TestOneof parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.google.protobuf.util.JsonTestProto.TestOneof parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.google.protobuf.util.JsonTestProto.TestOneof parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.google.protobuf.util.JsonTestProto.TestOneof prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code json_test.TestOneof}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:json_test.TestOneof)
        com.google.protobuf.util.JsonTestProto.TestOneofOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.google.protobuf.util.JsonTestProto.internal_static_json_test_TestOneof_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.google.protobuf.util.JsonTestProto.internal_static_json_test_TestOneof_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.google.protobuf.util.JsonTestProto.TestOneof.class, com.google.protobuf.util.JsonTestProto.TestOneof.Builder.class);
      }

      // Construct using com.google.protobuf.util.JsonTestProto.TestOneof.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        oneofFieldCase_ = 0;
        oneofField_ = null;
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.google.protobuf.util.JsonTestProto.internal_static_json_test_TestOneof_descriptor;
      }

      public com.google.protobuf.util.JsonTestProto.TestOneof getDefaultInstanceForType() {
        return com.google.protobuf.util.JsonTestProto.TestOneof.getDefaultInstance();
      }

      public com.google.protobuf.util.JsonTestProto.TestOneof build() {
        com.google.protobuf.util.JsonTestProto.TestOneof result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.google.protobuf.util.JsonTestProto.TestOneof buildPartial() {
        com.google.protobuf.util.JsonTestProto.TestOneof result = new com.google.protobuf.util.JsonTestProto.TestOneof(this);
        if (oneofFieldCase_ == 1) {
          result.oneofField_ = oneofField_;
        }
        if (oneofFieldCase_ == 2) {
          if (oneofNestedMessageBuilder_ == null) {
            result.oneofField_ = oneofField_;
          } else {
            result.oneofField_ = oneofNestedMessageBuilder_.build();
          }
        }
        if (oneofFieldCase_ == 3) {
          result.oneofField_ = oneofField_;
        }
        result.oneofFieldCase_ = oneofFieldCase_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.google.protobuf.util.JsonTestProto.TestOneof) {
          return mergeFrom((com.google.protobuf.util.JsonTestProto.TestOneof)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.google.protobuf.util.JsonTestProto.TestOneof other) {
        if (other == com.google.protobuf.util.JsonTestProto.TestOneof.getDefaultInstance()) return this;
        switch (other.getOneofFieldCase()) {
          case ONEOF_INT32: {
            setOneofInt32(other.getOneofInt32());
            break;
          }
          case ONEOF_NESTED_MESSAGE: {
            mergeOneofNestedMessage(other.getOneofNestedMessage());
            break;
          }
          case ONEOF_NULL_VALUE: {
            setOneofNullValueValue(other.getOneofNullValueValue());
            break;
          }
          case ONEOFFIELD_NOT_SET: {
            break;
          }
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.util.JsonTestProto.TestOneof parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.google.protobuf.util.JsonTestProto.TestOneof) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int oneofFieldCase_ = 0;
      private java.lang.Object oneofField_;
      public OneofFieldCase
          getOneofFieldCase() {
        return OneofFieldCase.forNumber(
            oneofFieldCase_);
      }

      public Builder clearOneofField() {
        oneofFieldCase_ = 0;
        oneofField_ = null;
        onChanged();
        return this;
      }


      /**
       * <code>int32 oneof_int32 = 1;</code>
       */
      public int getOneofInt32() {
        if (oneofFieldCase_ == 1) {
          return (java.lang.Integer) oneofField_;
        }
        return 0;
      }
      /**
       * <code>int32 oneof_int32 = 1;</code>
       */
      public Builder setOneofInt32(int value) {
        oneofFieldCase_ = 1;
        oneofField_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 oneof_int32 = 1;</code>
       */
      public Builder clearOneofInt32() {
        if (oneofFieldCase_ == 1) {
          oneofFieldCase_ = 0;
          oneofField_ = null;
          onChanged();
        }
        return this;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.util.JsonTestProto.TestAllTypes.NestedMessage, com.google.protobuf.util.JsonTestProto.TestAllTypes.NestedMessage.Builder, com.google.protobuf.util.JsonTestProto.TestAllTypes.NestedMessageOrBuilder> oneofNestedMessageBuilder_;
      /**
       * <code>.json_test.TestAllTypes.NestedMessage oneof_nested_message = 2;</code>
       */
      public com.google.protobuf.util.JsonTestProto.TestAllTypes.NestedMessage getOneofNestedMessage() {
        if (oneofNestedMessageBuilder_ == null) {
          if (oneofFieldCase_ == 2) {
            return (com.google.protobuf.util.JsonTestProto.TestAllTypes.NestedMessage) oneofField_;
          }
          return com.google.protobuf.util.JsonTestProto.TestAllTypes.NestedMessage.getDefaultInstance();
        } else {
          if (oneofFieldCase_ == 2) {
            return oneofNestedMessageBuilder_.getMessage();
          }
          return com.google.protobuf.util.JsonTestProto.TestAllTypes.NestedMessage.getDefaultInstance();
        }
      }
      /**
       * <code>.json_test.TestAllTypes.NestedMessage oneof_nested_message = 2;</code>
       */
      public Builder setOneofNestedMessage(com.google.protobuf.util.JsonTestProto.TestAllTypes.NestedMessage value) {
        if (oneofNestedMessageBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          oneofField_ = value;
          onChanged();
        } else {
          oneofNestedMessageBuilder_.setMessage(value);
        }
        oneofFieldCase_ = 2;
        return this;
      }
      /**
       * <code>.json_test.TestAllTypes.NestedMessage oneof_nested_message = 2;</code>
       */
      public Builder setOneofNestedMessage(
          com.google.protobuf.util.JsonTestProto.TestAllTypes.NestedMessage.Builder builderForValue) {
        if (oneofNestedMessageBuilder_ == null) {
          oneofField_ = builderForValue.build();
          onChanged();
        } else {
          oneofNestedMessageBuilder_.setMessage(builderForValue.build());
        }
        oneofFieldCase_ = 2;
        return this;
      }
      /**
       * <code>.json_test.TestAllTypes.NestedMessage oneof_nested_message = 2;</code>
       */
      public Builder mergeOneofNestedMessage(com.google.protobuf.util.JsonTestProto.TestAllTypes.NestedMessage value) {
        if (oneofNestedMessageBuilder_ == null) {
          if (oneofFieldCase_ == 2 &&
              oneofField_ != com.google.protobuf.util.JsonTestProto.TestAllTypes.NestedMessage.getDefaultInstance()) {
            oneofField_ = com.google.protobuf.util.JsonTestProto.TestAllTypes.NestedMessage.newBuilder((com.google.protobuf.util.JsonTestProto.TestAllTypes.NestedMessage) oneofField_)
                .mergeFrom(value).buildPartial();
          } else {
            oneofField_ = value;
          }
          onChanged();
        } else {
          if (oneofFieldCase_ == 2) {
            oneofNestedMessageBuilder_.mergeFrom(value);
          }
          oneofNestedMessageBuilder_.setMessage(value);
        }
        oneofFieldCase_ = 2;
        return this;
      }
      /**
       * <code>.json_test.TestAllTypes.NestedMessage oneof_nested_message = 2;</code>
       */
      public Builder clearOneofNestedMessage() {
        if (oneofNestedMessageBuilder_ == null) {
          if (oneofFieldCase_ == 2) {
            oneofFieldCase_ = 0;
            oneofField_ = null;
            onChanged();
          }
        } else {
          if (oneofFieldCase_ == 2) {
            oneofFieldCase_ = 0;
            oneofField_ = null;
          }
          oneofNestedMessageBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>.json_test.TestAllTypes.NestedMessage oneof_nested_message = 2;</code>
       */
      public com.google.protobuf.util.JsonTestProto.TestAllTypes.NestedMessage.Builder getOneofNestedMessageBuilder() {
        return getOneofNestedMessageFieldBuilder().getBuilder();
      }
      /**
       * <code>.json_test.TestAllTypes.NestedMessage oneof_nested_message = 2;</code>
       */
      public com.google.protobuf.util.JsonTestProto.TestAllTypes.NestedMessageOrBuilder getOneofNestedMessageOrBuilder() {
        if ((oneofFieldCase_ == 2) && (oneofNestedMessageBuilder_ != null)) {
          return oneofNestedMessageBuilder_.getMessageOrBuilder();
        } else {
          if (oneofFieldCase_ == 2) {
            return (com.google.protobuf.util.JsonTestProto.TestAllTypes.NestedMessage) oneofField_;
          }
          return com.google.protobuf.util.JsonTestProto.TestAllTypes.NestedMessage.getDefaultInstance();
        }
      }
      /**
       * <code>.json_test.TestAllTypes.NestedMessage oneof_nested_message = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.util.JsonTestProto.TestAllTypes.NestedMessage, com.google.protobuf.util.JsonTestProto.TestAllTypes.NestedMessage.Builder, com.google.protobuf.util.JsonTestProto.TestAllTypes.NestedMessageOrBuilder> 
          getOneofNestedMessageFieldBuilder() {
        if (oneofNestedMessageBuilder_ == null) {
          if (!(oneofFieldCase_ == 2)) {
            oneofField_ = com.google.protobuf.util.JsonTestProto.TestAllTypes.NestedMessage.getDefaultInstance();
          }
          oneofNestedMessageBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.util.JsonTestProto.TestAllTypes.NestedMessage, com.google.protobuf.util.JsonTestProto.TestAllTypes.NestedMessage.Builder, com.google.protobuf.util.JsonTestProto.TestAllTypes.NestedMessageOrBuilder>(
                  (com.google.protobuf.util.JsonTestProto.TestAllTypes.NestedMessage) oneofField_,
                  getParentForChildren(),
                  isClean());
          oneofField_ = null;
        }
        oneofFieldCase_ = 2;
        onChanged();;
        return oneofNestedMessageBuilder_;
      }

      /**
       * <code>.google.protobuf.NullValue oneof_null_value = 3;</code>
       */
      public int getOneofNullValueValue() {
        if (oneofFieldCase_ == 3) {
          return ((java.lang.Integer) oneofField_).intValue();
        }
        return 0;
      }
      /**
       * <code>.google.protobuf.NullValue oneof_null_value = 3;</code>
       */
      public Builder setOneofNullValueValue(int value) {
        oneofFieldCase_ = 3;
        oneofField_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>.google.protobuf.NullValue oneof_null_value = 3;</code>
       */
      public com.google.protobuf.NullValue getOneofNullValue() {
        if (oneofFieldCase_ == 3) {
          com.google.protobuf.NullValue result = com.google.protobuf.NullValue.valueOf(
              (java.lang.Integer) oneofField_);
          return result == null ? com.google.protobuf.NullValue.UNRECOGNIZED : result;
        }
        return com.google.protobuf.NullValue.NULL_VALUE;
      }
      /**
       * <code>.google.protobuf.NullValue oneof_null_value = 3;</code>
       */
      public Builder setOneofNullValue(com.google.protobuf.NullValue value) {
        if (value == null) {
          throw new NullPointerException();
        }
        oneofFieldCase_ = 3;
        oneofField_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>.google.protobuf.NullValue oneof_null_value = 3;</code>
       */
      public Builder clearOneofNullValue() {
        if (oneofFieldCase_ == 3) {
          oneofFieldCase_ = 0;
          oneofField_ = null;
          onChanged();
        }
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:json_test.TestOneof)
    }

    // @@protoc_insertion_point(class_scope:json_test.TestOneof)
    private static final com.google.protobuf.util.JsonTestProto.TestOneof DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.google.protobuf.util.JsonTestProto.TestOneof();
    }

    public static com.google.protobuf.util.JsonTestProto.TestOneof getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<TestOneof>
        PARSER = new com.google.protobuf.AbstractParser<TestOneof>() {
      public TestOneof parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new TestOneof(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<TestOneof> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<TestOneof> getParserForType() {
      return PARSER;
    }

    public com.google.protobuf.util.JsonTestProto.TestOneof getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface TestMapOrBuilder extends
      // @@protoc_insertion_point(interface_extends:json_test.TestMap)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Instead of testing all combinations (too many), we only make sure all
     * valid types have been used at least in one field as key and in one
     * field as value.
     * </pre>
     *
     * <code>map&lt;int32, int32&gt; int32_to_int32_map = 1;</code>
     */
    int getInt32ToInt32MapCount();
    /**
     * <pre>
     * Instead of testing all combinations (too many), we only make sure all
     * valid types have been used at least in one field as key and in one
     * field as value.
     * </pre>
     *
     * <code>map&lt;int32, int32&gt; int32_to_int32_map = 1;</code>
     */
    boolean containsInt32ToInt32Map(
        int key);
    /**
     * Use {@link #getInt32ToInt32MapMap()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.Integer, java.lang.Integer>
    getInt32ToInt32Map();
    /**
     * <pre>
     * Instead of testing all combinations (too many), we only make sure all
     * valid types have been used at least in one field as key and in one
     * field as value.
     * </pre>
     *
     * <code>map&lt;int32, int32&gt; int32_to_int32_map = 1;</code>
     */
    java.util.Map<java.lang.Integer, java.lang.Integer>
    getInt32ToInt32MapMap();
    /**
     * <pre>
     * Instead of testing all combinations (too many), we only make sure all
     * valid types have been used at least in one field as key and in one
     * field as value.
     * </pre>
     *
     * <code>map&lt;int32, int32&gt; int32_to_int32_map = 1;</code>
     */

    int getInt32ToInt32MapOrDefault(
        int key,
        int defaultValue);
    /**
     * <pre>
     * Instead of testing all combinations (too many), we only make sure all
     * valid types have been used at least in one field as key and in one
     * field as value.
     * </pre>
     *
     * <code>map&lt;int32, int32&gt; int32_to_int32_map = 1;</code>
     */

    int getInt32ToInt32MapOrThrow(
        int key);

    /**
     * <code>map&lt;int64, int32&gt; int64_to_int32_map = 2;</code>
     */
    int getInt64ToInt32MapCount();
    /**
     * <code>map&lt;int64, int32&gt; int64_to_int32_map = 2;</code>
     */
    boolean containsInt64ToInt32Map(
        long key);
    /**
     * Use {@link #getInt64ToInt32MapMap()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.Long, java.lang.Integer>
    getInt64ToInt32Map();
    /**
     * <code>map&lt;int64, int32&gt; int64_to_int32_map = 2;</code>
     */
    java.util.Map<java.lang.Long, java.lang.Integer>
    getInt64ToInt32MapMap();
    /**
     * <code>map&lt;int64, int32&gt; int64_to_int32_map = 2;</code>
     */

    int getInt64ToInt32MapOrDefault(
        long key,
        int defaultValue);
    /**
     * <code>map&lt;int64, int32&gt; int64_to_int32_map = 2;</code>
     */

    int getInt64ToInt32MapOrThrow(
        long key);

    /**
     * <code>map&lt;uint32, int32&gt; uint32_to_int32_map = 3;</code>
     */
    int getUint32ToInt32MapCount();
    /**
     * <code>map&lt;uint32, int32&gt; uint32_to_int32_map = 3;</code>
     */
    boolean containsUint32ToInt32Map(
        int key);
    /**
     * Use {@link #getUint32ToInt32MapMap()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.Integer, java.lang.Integer>
    getUint32ToInt32Map();
    /**
     * <code>map&lt;uint32, int32&gt; uint32_to_int32_map = 3;</code>
     */
    java.util.Map<java.lang.Integer, java.lang.Integer>
    getUint32ToInt32MapMap();
    /**
     * <code>map&lt;uint32, int32&gt; uint32_to_int32_map = 3;</code>
     */

    int getUint32ToInt32MapOrDefault(
        int key,
        int defaultValue);
    /**
     * <code>map&lt;uint32, int32&gt; uint32_to_int32_map = 3;</code>
     */

    int getUint32ToInt32MapOrThrow(
        int key);

    /**
     * <code>map&lt;uint64, int32&gt; uint64_to_int32_map = 4;</code>
     */
    int getUint64ToInt32MapCount();
    /**
     * <code>map&lt;uint64, int32&gt; uint64_to_int32_map = 4;</code>
     */
    boolean containsUint64ToInt32Map(
        long key);
    /**
     * Use {@link #getUint64ToInt32MapMap()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.Long, java.lang.Integer>
    getUint64ToInt32Map();
    /**
     * <code>map&lt;uint64, int32&gt; uint64_to_int32_map = 4;</code>
     */
    java.util.Map<java.lang.Long, java.lang.Integer>
    getUint64ToInt32MapMap();
    /**
     * <code>map&lt;uint64, int32&gt; uint64_to_int32_map = 4;</code>
     */

    int getUint64ToInt32MapOrDefault(
        long key,
        int defaultValue);
    /**
     * <code>map&lt;uint64, int32&gt; uint64_to_int32_map = 4;</code>
     */

    int getUint64ToInt32MapOrThrow(
        long key);

    /**
     * <code>map&lt;sint32, int32&gt; sint32_to_int32_map = 5;</code>
     */
    int getSint32ToInt32MapCount();
    /**
     * <code>map&lt;sint32, int32&gt; sint32_to_int32_map = 5;</code>
     */
    boolean containsSint32ToInt32Map(
        int key);
    /**
     * Use {@link #getSint32ToInt32MapMap()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.Integer, java.lang.Integer>
    getSint32ToInt32Map();
    /**
     * <code>map&lt;sint32, int32&gt; sint32_to_int32_map = 5;</code>
     */
    java.util.Map<java.lang.Integer, java.lang.Integer>
    getSint32ToInt32MapMap();
    /**
     * <code>map&lt;sint32, int32&gt; sint32_to_int32_map = 5;</code>
     */

    int getSint32ToInt32MapOrDefault(
        int key,
        int defaultValue);
    /**
     * <code>map&lt;sint32, int32&gt; sint32_to_int32_map = 5;</code>
     */

    int getSint32ToInt32MapOrThrow(
        int key);

    /**
     * <code>map&lt;sint64, int32&gt; sint64_to_int32_map = 6;</code>
     */
    int getSint64ToInt32MapCount();
    /**
     * <code>map&lt;sint64, int32&gt; sint64_to_int32_map = 6;</code>
     */
    boolean containsSint64ToInt32Map(
        long key);
    /**
     * Use {@link #getSint64ToInt32MapMap()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.Long, java.lang.Integer>
    getSint64ToInt32Map();
    /**
     * <code>map&lt;sint64, int32&gt; sint64_to_int32_map = 6;</code>
     */
    java.util.Map<java.lang.Long, java.lang.Integer>
    getSint64ToInt32MapMap();
    /**
     * <code>map&lt;sint64, int32&gt; sint64_to_int32_map = 6;</code>
     */

    int getSint64ToInt32MapOrDefault(
        long key,
        int defaultValue);
    /**
     * <code>map&lt;sint64, int32&gt; sint64_to_int32_map = 6;</code>
     */

    int getSint64ToInt32MapOrThrow(
        long key);

    /**
     * <code>map&lt;fixed32, int32&gt; fixed32_to_int32_map = 7;</code>
     */
    int getFixed32ToInt32MapCount();
    /**
     * <code>map&lt;fixed32, int32&gt; fixed32_to_int32_map = 7;</code>
     */
    boolean containsFixed32ToInt32Map(
        int key);
    /**
     * Use {@link #getFixed32ToInt32MapMap()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.Integer, java.lang.Integer>
    getFixed32ToInt32Map();
    /**
     * <code>map&lt;fixed32, int32&gt; fixed32_to_int32_map = 7;</code>
     */
    java.util.Map<java.lang.Integer, java.lang.Integer>
    getFixed32ToInt32MapMap();
    /**
     * <code>map&lt;fixed32, int32&gt; fixed32_to_int32_map = 7;</code>
     */

    int getFixed32ToInt32MapOrDefault(
        int key,
        int defaultValue);
    /**
     * <code>map&lt;fixed32, int32&gt; fixed32_to_int32_map = 7;</code>
     */

    int getFixed32ToInt32MapOrThrow(
        int key);

    /**
     * <code>map&lt;fixed64, int32&gt; fixed64_to_int32_map = 8;</code>
     */
    int getFixed64ToInt32MapCount();
    /**
     * <code>map&lt;fixed64, int32&gt; fixed64_to_int32_map = 8;</code>
     */
    boolean containsFixed64ToInt32Map(
        long key);
    /**
     * Use {@link #getFixed64ToInt32MapMap()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.Long, java.lang.Integer>
    getFixed64ToInt32Map();
    /**
     * <code>map&lt;fixed64, int32&gt; fixed64_to_int32_map = 8;</code>
     */
    java.util.Map<java.lang.Long, java.lang.Integer>
    getFixed64ToInt32MapMap();
    /**
     * <code>map&lt;fixed64, int32&gt; fixed64_to_int32_map = 8;</code>
     */

    int getFixed64ToInt32MapOrDefault(
        long key,
        int defaultValue);
    /**
     * <code>map&lt;fixed64, int32&gt; fixed64_to_int32_map = 8;</code>
     */

    int getFixed64ToInt32MapOrThrow(
        long key);

    /**
     * <code>map&lt;sfixed32, int32&gt; sfixed32_to_int32_map = 9;</code>
     */
    int getSfixed32ToInt32MapCount();
    /**
     * <code>map&lt;sfixed32, int32&gt; sfixed32_to_int32_map = 9;</code>
     */
    boolean containsSfixed32ToInt32Map(
        int key);
    /**
     * Use {@link #getSfixed32ToInt32MapMap()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.Integer, java.lang.Integer>
    getSfixed32ToInt32Map();
    /**
     * <code>map&lt;sfixed32, int32&gt; sfixed32_to_int32_map = 9;</code>
     */
    java.util.Map<java.lang.Integer, java.lang.Integer>
    getSfixed32ToInt32MapMap();
    /**
     * <code>map&lt;sfixed32, int32&gt; sfixed32_to_int32_map = 9;</code>
     */

    int getSfixed32ToInt32MapOrDefault(
        int key,
        int defaultValue);
    /**
     * <code>map&lt;sfixed32, int32&gt; sfixed32_to_int32_map = 9;</code>
     */

    int getSfixed32ToInt32MapOrThrow(
        int key);

    /**
     * <code>map&lt;sfixed64, int32&gt; sfixed64_to_int32_map = 10;</code>
     */
    int getSfixed64ToInt32MapCount();
    /**
     * <code>map&lt;sfixed64, int32&gt; sfixed64_to_int32_map = 10;</code>
     */
    boolean containsSfixed64ToInt32Map(
        long key);
    /**
     * Use {@link #getSfixed64ToInt32MapMap()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.Long, java.lang.Integer>
    getSfixed64ToInt32Map();
    /**
     * <code>map&lt;sfixed64, int32&gt; sfixed64_to_int32_map = 10;</code>
     */
    java.util.Map<java.lang.Long, java.lang.Integer>
    getSfixed64ToInt32MapMap();
    /**
     * <code>map&lt;sfixed64, int32&gt; sfixed64_to_int32_map = 10;</code>
     */

    int getSfixed64ToInt32MapOrDefault(
        long key,
        int defaultValue);
    /**
     * <code>map&lt;sfixed64, int32&gt; sfixed64_to_int32_map = 10;</code>
     */

    int getSfixed64ToInt32MapOrThrow(
        long key);

    /**
     * <code>map&lt;bool, int32&gt; bool_to_int32_map = 11;</code>
     */
    int getBoolToInt32MapCount();
    /**
     * <code>map&lt;bool, int32&gt; bool_to_int32_map = 11;</code>
     */
    boolean containsBoolToInt32Map(
        boolean key);
    /**
     * Use {@link #getBoolToInt32MapMap()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.Boolean, java.lang.Integer>
    getBoolToInt32Map();
    /**
     * <code>map&lt;bool, int32&gt; bool_to_int32_map = 11;</code>
     */
    java.util.Map<java.lang.Boolean, java.lang.Integer>
    getBoolToInt32MapMap();
    /**
     * <code>map&lt;bool, int32&gt; bool_to_int32_map = 11;</code>
     */

    int getBoolToInt32MapOrDefault(
        boolean key,
        int defaultValue);
    /**
     * <code>map&lt;bool, int32&gt; bool_to_int32_map = 11;</code>
     */

    int getBoolToInt32MapOrThrow(
        boolean key);

    /**
     * <code>map&lt;string, int32&gt; string_to_int32_map = 12;</code>
     */
    int getStringToInt32MapCount();
    /**
     * <code>map&lt;string, int32&gt; string_to_int32_map = 12;</code>
     */
    boolean containsStringToInt32Map(
        java.lang.String key);
    /**
     * Use {@link #getStringToInt32MapMap()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.String, java.lang.Integer>
    getStringToInt32Map();
    /**
     * <code>map&lt;string, int32&gt; string_to_int32_map = 12;</code>
     */
    java.util.Map<java.lang.String, java.lang.Integer>
    getStringToInt32MapMap();
    /**
     * <code>map&lt;string, int32&gt; string_to_int32_map = 12;</code>
     */

    int getStringToInt32MapOrDefault(
        java.lang.String key,
        int defaultValue);
    /**
     * <code>map&lt;string, int32&gt; string_to_int32_map = 12;</code>
     */

    int getStringToInt32MapOrThrow(
        java.lang.String key);

    /**
     * <code>map&lt;int32, int64&gt; int32_to_int64_map = 101;</code>
     */
    int getInt32ToInt64MapCount();
    /**
     * <code>map&lt;int32, int64&gt; int32_to_int64_map = 101;</code>
     */
    boolean containsInt32ToInt64Map(
        int key);
    /**
     * Use {@link #getInt32ToInt64MapMap()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.Integer, java.lang.Long>
    getInt32ToInt64Map();
    /**
     * <code>map&lt;int32, int64&gt; int32_to_int64_map = 101;</code>
     */
    java.util.Map<java.lang.Integer, java.lang.Long>
    getInt32ToInt64MapMap();
    /**
     * <code>map&lt;int32, int64&gt; int32_to_int64_map = 101;</code>
     */

    long getInt32ToInt64MapOrDefault(
        int key,
        long defaultValue);
    /**
     * <code>map&lt;int32, int64&gt; int32_to_int64_map = 101;</code>
     */

    long getInt32ToInt64MapOrThrow(
        int key);

    /**
     * <code>map&lt;int32, uint32&gt; int32_to_uint32_map = 102;</code>
     */
    int getInt32ToUint32MapCount();
    /**
     * <code>map&lt;int32, uint32&gt; int32_to_uint32_map = 102;</code>
     */
    boolean containsInt32ToUint32Map(
        int key);
    /**
     * Use {@link #getInt32ToUint32MapMap()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.Integer, java.lang.Integer>
    getInt32ToUint32Map();
    /**
     * <code>map&lt;int32, uint32&gt; int32_to_uint32_map = 102;</code>
     */
    java.util.Map<java.lang.Integer, java.lang.Integer>
    getInt32ToUint32MapMap();
    /**
     * <code>map&lt;int32, uint32&gt; int32_to_uint32_map = 102;</code>
     */

    int getInt32ToUint32MapOrDefault(
        int key,
        int defaultValue);
    /**
     * <code>map&lt;int32, uint32&gt; int32_to_uint32_map = 102;</code>
     */

    int getInt32ToUint32MapOrThrow(
        int key);

    /**
     * <code>map&lt;int32, uint64&gt; int32_to_uint64_map = 103;</code>
     */
    int getInt32ToUint64MapCount();
    /**
     * <code>map&lt;int32, uint64&gt; int32_to_uint64_map = 103;</code>
     */
    boolean containsInt32ToUint64Map(
        int key);
    /**
     * Use {@link #getInt32ToUint64MapMap()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.Integer, java.lang.Long>
    getInt32ToUint64Map();
    /**
     * <code>map&lt;int32, uint64&gt; int32_to_uint64_map = 103;</code>
     */
    java.util.Map<java.lang.Integer, java.lang.Long>
    getInt32ToUint64MapMap();
    /**
     * <code>map&lt;int32, uint64&gt; int32_to_uint64_map = 103;</code>
     */

    long getInt32ToUint64MapOrDefault(
        int key,
        long defaultValue);
    /**
     * <code>map&lt;int32, uint64&gt; int32_to_uint64_map = 103;</code>
     */

    long getInt32ToUint64MapOrThrow(
        int key);

    /**
     * <code>map&lt;int32, sint32&gt; int32_to_sint32_map = 104;</code>
     */
    int getInt32ToSint32MapCount();
    /**
     * <code>map&lt;int32, sint32&gt; int32_to_sint32_map = 104;</code>
     */
    boolean containsInt32ToSint32Map(
        int key);
    /**
     * Use {@link #getInt32ToSint32MapMap()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.Integer, java.lang.Integer>
    getInt32ToSint32Map();
    /**
     * <code>map&lt;int32, sint32&gt; int32_to_sint32_map = 104;</code>
     */
    java.util.Map<java.lang.Integer, java.lang.Integer>
    getInt32ToSint32MapMap();
    /**
     * <code>map&lt;int32, sint32&gt; int32_to_sint32_map = 104;</code>
     */

    int getInt32ToSint32MapOrDefault(
        int key,
        int defaultValue);
    /**
     * <code>map&lt;int32, sint32&gt; int32_to_sint32_map = 104;</code>
     */

    int getInt32ToSint32MapOrThrow(
        int key);

    /**
     * <code>map&lt;int32, sint64&gt; int32_to_sint64_map = 105;</code>
     */
    int getInt32ToSint64MapCount();
    /**
     * <code>map&lt;int32, sint64&gt; int32_to_sint64_map = 105;</code>
     */
    boolean containsInt32ToSint64Map(
        int key);
    /**
     * Use {@link #getInt32ToSint64MapMap()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.Integer, java.lang.Long>
    getInt32ToSint64Map();
    /**
     * <code>map&lt;int32, sint64&gt; int32_to_sint64_map = 105;</code>
     */
    java.util.Map<java.lang.Integer, java.lang.Long>
    getInt32ToSint64MapMap();
    /**
     * <code>map&lt;int32, sint64&gt; int32_to_sint64_map = 105;</code>
     */

    long getInt32ToSint64MapOrDefault(
        int key,
        long defaultValue);
    /**
     * <code>map&lt;int32, sint64&gt; int32_to_sint64_map = 105;</code>
     */

    long getInt32ToSint64MapOrThrow(
        int key);

    /**
     * <code>map&lt;int32, fixed32&gt; int32_to_fixed32_map = 106;</code>
     */
    int getInt32ToFixed32MapCount();
    /**
     * <code>map&lt;int32, fixed32&gt; int32_to_fixed32_map = 106;</code>
     */
    boolean containsInt32ToFixed32Map(
        int key);
    /**
     * Use {@link #getInt32ToFixed32MapMap()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.Integer, java.lang.Integer>
    getInt32ToFixed32Map();
    /**
     * <code>map&lt;int32, fixed32&gt; int32_to_fixed32_map = 106;</code>
     */
    java.util.Map<java.lang.Integer, java.lang.Integer>
    getInt32ToFixed32MapMap();
    /**
     * <code>map&lt;int32, fixed32&gt; int32_to_fixed32_map = 106;</code>
     */

    int getInt32ToFixed32MapOrDefault(
        int key,
        int defaultValue);
    /**
     * <code>map&lt;int32, fixed32&gt; int32_to_fixed32_map = 106;</code>
     */

    int getInt32ToFixed32MapOrThrow(
        int key);

    /**
     * <code>map&lt;int32, fixed64&gt; int32_to_fixed64_map = 107;</code>
     */
    int getInt32ToFixed64MapCount();
    /**
     * <code>map&lt;int32, fixed64&gt; int32_to_fixed64_map = 107;</code>
     */
    boolean containsInt32ToFixed64Map(
        int key);
    /**
     * Use {@link #getInt32ToFixed64MapMap()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.Integer, java.lang.Long>
    getInt32ToFixed64Map();
    /**
     * <code>map&lt;int32, fixed64&gt; int32_to_fixed64_map = 107;</code>
     */
    java.util.Map<java.lang.Integer, java.lang.Long>
    getInt32ToFixed64MapMap();
    /**
     * <code>map&lt;int32, fixed64&gt; int32_to_fixed64_map = 107;</code>
     */

    long getInt32ToFixed64MapOrDefault(
        int key,
        long defaultValue);
    /**
     * <code>map&lt;int32, fixed64&gt; int32_to_fixed64_map = 107;</code>
     */

    long getInt32ToFixed64MapOrThrow(
        int key);

    /**
     * <code>map&lt;int32, sfixed32&gt; int32_to_sfixed32_map = 108;</code>
     */
    int getInt32ToSfixed32MapCount();
    /**
     * <code>map&lt;int32, sfixed32&gt; int32_to_sfixed32_map = 108;</code>
     */
    boolean containsInt32ToSfixed32Map(
        int key);
    /**
     * Use {@link #getInt32ToSfixed32MapMap()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.Integer, java.lang.Integer>
    getInt32ToSfixed32Map();
    /**
     * <code>map&lt;int32, sfixed32&gt; int32_to_sfixed32_map = 108;</code>
     */
    java.util.Map<java.lang.Integer, java.lang.Integer>
    getInt32ToSfixed32MapMap();
    /**
     * <code>map&lt;int32, sfixed32&gt; int32_to_sfixed32_map = 108;</code>
     */

    int getInt32ToSfixed32MapOrDefault(
        int key,
        int defaultValue);
    /**
     * <code>map&lt;int32, sfixed32&gt; int32_to_sfixed32_map = 108;</code>
     */

    int getInt32ToSfixed32MapOrThrow(
        int key);

    /**
     * <code>map&lt;int32, sfixed64&gt; int32_to_sfixed64_map = 109;</code>
     */
    int getInt32ToSfixed64MapCount();
    /**
     * <code>map&lt;int32, sfixed64&gt; int32_to_sfixed64_map = 109;</code>
     */
    boolean containsInt32ToSfixed64Map(
        int key);
    /**
     * Use {@link #getInt32ToSfixed64MapMap()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.Integer, java.lang.Long>
    getInt32ToSfixed64Map();
    /**
     * <code>map&lt;int32, sfixed64&gt; int32_to_sfixed64_map = 109;</code>
     */
    java.util.Map<java.lang.Integer, java.lang.Long>
    getInt32ToSfixed64MapMap();
    /**
     * <code>map&lt;int32, sfixed64&gt; int32_to_sfixed64_map = 109;</code>
     */

    long getInt32ToSfixed64MapOrDefault(
        int key,
        long defaultValue);
    /**
     * <code>map&lt;int32, sfixed64&gt; int32_to_sfixed64_map = 109;</code>
     */

    long getInt32ToSfixed64MapOrThrow(
        int key);

    /**
     * <code>map&lt;int32, float&gt; int32_to_float_map = 110;</code>
     */
    int getInt32ToFloatMapCount();
    /**
     * <code>map&lt;int32, float&gt; int32_to_float_map = 110;</code>
     */
    boolean containsInt32ToFloatMap(
        int key);
    /**
     * Use {@link #getInt32ToFloatMapMap()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.Integer, java.lang.Float>
    getInt32ToFloatMap();
    /**
     * <code>map&lt;int32, float&gt; int32_to_float_map = 110;</code>
     */
    java.util.Map<java.lang.Integer, java.lang.Float>
    getInt32ToFloatMapMap();
    /**
     * <code>map&lt;int32, float&gt; int32_to_float_map = 110;</code>
     */

    float getInt32ToFloatMapOrDefault(
        int key,
        float defaultValue);
    /**
     * <code>map&lt;int32, float&gt; int32_to_float_map = 110;</code>
     */

    float getInt32ToFloatMapOrThrow(
        int key);

    /**
     * <code>map&lt;int32, double&gt; int32_to_double_map = 111;</code>
     */
    int getInt32ToDoubleMapCount();
    /**
     * <code>map&lt;int32, double&gt; int32_to_double_map = 111;</code>
     */
    boolean containsInt32ToDoubleMap(
        int key);
    /**
     * Use {@link #getInt32ToDoubleMapMap()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.Integer, java.lang.Double>
    getInt32ToDoubleMap();
    /**
     * <code>map&lt;int32, double&gt; int32_to_double_map = 111;</code>
     */
    java.util.Map<java.lang.Integer, java.lang.Double>
    getInt32ToDoubleMapMap();
    /**
     * <code>map&lt;int32, double&gt; int32_to_double_map = 111;</code>
     */

    double getInt32ToDoubleMapOrDefault(
        int key,
        double defaultValue);
    /**
     * <code>map&lt;int32, double&gt; int32_to_double_map = 111;</code>
     */

    double getInt32ToDoubleMapOrThrow(
        int key);

    /**
     * <code>map&lt;int32, bool&gt; int32_to_bool_map = 112;</code>
     */
    int getInt32ToBoolMapCount();
    /**
     * <code>map&lt;int32, bool&gt; int32_to_bool_map = 112;</code>
     */
    boolean containsInt32ToBoolMap(
        int key);
    /**
     * Use {@link #getInt32ToBoolMapMap()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.Integer, java.lang.Boolean>
    getInt32ToBoolMap();
    /**
     * <code>map&lt;int32, bool&gt; int32_to_bool_map = 112;</code>
     */
    java.util.Map<java.lang.Integer, java.lang.Boolean>
    getInt32ToBoolMapMap();
    /**
     * <code>map&lt;int32, bool&gt; int32_to_bool_map = 112;</code>
     */

    boolean getInt32ToBoolMapOrDefault(
        int key,
        boolean defaultValue);
    /**
     * <code>map&lt;int32, bool&gt; int32_to_bool_map = 112;</code>
     */

    boolean getInt32ToBoolMapOrThrow(
        int key);

    /**
     * <code>map&lt;int32, string&gt; int32_to_string_map = 113;</code>
     */
    int getInt32ToStringMapCount();
    /**
     * <code>map&lt;int32, string&gt; int32_to_string_map = 113;</code>
     */
    boolean containsInt32ToStringMap(
        int key);
    /**
     * Use {@link #getInt32ToStringMapMap()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.Integer, java.lang.String>
    getInt32ToStringMap();
    /**
     * <code>map&lt;int32, string&gt; int32_to_string_map = 113;</code>
     */
    java.util.Map<java.lang.Integer, java.lang.String>
    getInt32ToStringMapMap();
    /**
     * <code>map&lt;int32, string&gt; int32_to_string_map = 113;</code>
     */

    java.lang.String getInt32ToStringMapOrDefault(
        int key,
        java.lang.String defaultValue);
    /**
     * <code>map&lt;int32, string&gt; int32_to_string_map = 113;</code>
     */

    java.lang.String getInt32ToStringMapOrThrow(
        int key);

    /**
     * <code>map&lt;int32, bytes&gt; int32_to_bytes_map = 114;</code>
     */
    int getInt32ToBytesMapCount();
    /**
     * <code>map&lt;int32, bytes&gt; int32_to_bytes_map = 114;</code>
     */
    boolean containsInt32ToBytesMap(
        int key);
    /**
     * Use {@link #getInt32ToBytesMapMap()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.Integer, com.google.protobuf.ByteString>
    getInt32ToBytesMap();
    /**
     * <code>map&lt;int32, bytes&gt; int32_to_bytes_map = 114;</code>
     */
    java.util.Map<java.lang.Integer, com.google.protobuf.ByteString>
    getInt32ToBytesMapMap();
    /**
     * <code>map&lt;int32, bytes&gt; int32_to_bytes_map = 114;</code>
     */

    com.google.protobuf.ByteString getInt32ToBytesMapOrDefault(
        int key,
        com.google.protobuf.ByteString defaultValue);
    /**
     * <code>map&lt;int32, bytes&gt; int32_to_bytes_map = 114;</code>
     */

    com.google.protobuf.ByteString getInt32ToBytesMapOrThrow(
        int key);

    /**
     * <code>map&lt;int32, .json_test.TestAllTypes.NestedMessage&gt; int32_to_message_map = 115;</code>
     */
    int getInt32ToMessageMapCount();
    /**
     * <code>map&lt;int32, .json_test.TestAllTypes.NestedMessage&gt; int32_to_message_map = 115;</code>
     */
    boolean containsInt32ToMessageMap(
        int key);
    /**
     * Use {@link #getInt32ToMessageMapMap()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.Integer, com.google.protobuf.util.JsonTestProto.TestAllTypes.NestedMessage>
    getInt32ToMessageMap();
    /**
     * <code>map&lt;int32, .json_test.TestAllTypes.NestedMessage&gt; int32_to_message_map = 115;</code>
     */
    java.util.Map<java.lang.Integer, com.google.protobuf.util.JsonTestProto.TestAllTypes.NestedMessage>
    getInt32ToMessageMapMap();
    /**
     * <code>map&lt;int32, .json_test.TestAllTypes.NestedMessage&gt; int32_to_message_map = 115;</code>
     */

    com.google.protobuf.util.JsonTestProto.TestAllTypes.NestedMessage getInt32ToMessageMapOrDefault(
        int key,
        com.google.protobuf.util.JsonTestProto.TestAllTypes.NestedMessage defaultValue);
    /**
     * <code>map&lt;int32, .json_test.TestAllTypes.NestedMessage&gt; int32_to_message_map = 115;</code>
     */

    com.google.protobuf.util.JsonTestProto.TestAllTypes.NestedMessage getInt32ToMessageMapOrThrow(
        int key);

    /**
     * <code>map&lt;int32, .json_test.TestAllTypes.NestedEnum&gt; int32_to_enum_map = 116;</code>
     */
    int getInt32ToEnumMapCount();
    /**
     * <code>map&lt;int32, .json_test.TestAllTypes.NestedEnum&gt; int32_to_enum_map = 116;</code>
     */
    boolean containsInt32ToEnumMap(
        int key);
    /**
     * Use {@link #getInt32ToEnumMapMap()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.Integer, com.google.protobuf.util.JsonTestProto.TestAllTypes.NestedEnum>
    getInt32ToEnumMap();
    /**
     * <code>map&lt;int32, .json_test.TestAllTypes.NestedEnum&gt; int32_to_enum_map = 116;</code>
     */
    java.util.Map<java.lang.Integer, com.google.protobuf.util.JsonTestProto.TestAllTypes.NestedEnum>
    getInt32ToEnumMapMap();
    /**
     * <code>map&lt;int32, .json_test.TestAllTypes.NestedEnum&gt; int32_to_enum_map = 116;</code>
     */
    com.google.protobuf.util.JsonTestProto.TestAllTypes.NestedEnum getInt32ToEnumMapOrDefault(
        int key,
        com.google.protobuf.util.JsonTestProto.TestAllTypes.NestedEnum defaultValue);
    /**
     * <code>map&lt;int32, .json_test.TestAllTypes.NestedEnum&gt; int32_to_enum_map = 116;</code>
     */
    com.google.protobuf.util.JsonTestProto.TestAllTypes.NestedEnum getInt32ToEnumMapOrThrow(
        int key);
    /**
     * Use {@link #getInt32ToEnumMapValueMap()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.Integer, java.lang.Integer>
    getInt32ToEnumMapValue();
    /**
     * <code>map&lt;int32, .json_test.TestAllTypes.NestedEnum&gt; int32_to_enum_map = 116;</code>
     */
    java.util.Map<java.lang.Integer, java.lang.Integer>
    getInt32ToEnumMapValueMap();
    /**
     * <code>map&lt;int32, .json_test.TestAllTypes.NestedEnum&gt; int32_to_enum_map = 116;</code>
     */

    int getInt32ToEnumMapValueOrDefault(
        int key,
        int defaultValue);
    /**
     * <code>map&lt;int32, .json_test.TestAllTypes.NestedEnum&gt; int32_to_enum_map = 116;</code>
     */

    int getInt32ToEnumMapValueOrThrow(
        int key);
  }
  /**
   * Protobuf type {@code json_test.TestMap}
   */
  public  static final class TestMap extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:json_test.TestMap)
      TestMapOrBuilder {
    // Use TestMap.newBuilder() to construct.
    private TestMap(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private TestMap() {
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private TestMap(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                int32ToInt32Map_ = com.google.protobuf.MapField.newMapField(
                    Int32ToInt32MapDefaultEntryHolder.defaultEntry);
                mutable_bitField0_ |= 0x00000001;
              }
              com.google.protobuf.MapEntry<java.lang.Integer, java.lang.Integer>
              int32ToInt32Map__ = input.readMessage(
                  Int32ToInt32MapDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              int32ToInt32Map_.getMutableMap().put(
                  int32ToInt32Map__.getKey(), int32ToInt32Map__.getValue());
              break;
            }
            case 18: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                int64ToInt32Map_ = com.google.protobuf.MapField.newMapField(
                    Int64ToInt32MapDefaultEntryHolder.defaultEntry);
                mutable_bitField0_ |= 0x00000002;
              }
              com.google.protobuf.MapEntry<java.lang.Long, java.lang.Integer>
              int64ToInt32Map__ = input.readMessage(
                  Int64ToInt32MapDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              int64ToInt32Map_.getMutableMap().put(
                  int64ToInt32Map__.getKey(), int64ToInt32Map__.getValue());
              break;
            }
            case 26: {
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                uint32ToInt32Map_ = com.google.protobuf.MapField.newMapField(
                    Uint32ToInt32MapDefaultEntryHolder.defaultEntry);
                mutable_bitField0_ |= 0x00000004;
              }
              com.google.protobuf.MapEntry<java.lang.Integer, java.lang.Integer>
              uint32ToInt32Map__ = input.readMessage(
                  Uint32ToInt32MapDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              uint32ToInt32Map_.getMutableMap().put(
                  uint32ToInt32Map__.getKey(), uint32ToInt32Map__.getValue());
              break;
            }
            case 34: {
              if (!((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
                uint64ToInt32Map_ = com.google.protobuf.MapField.newMapField(
                    Uint64ToInt32MapDefaultEntryHolder.defaultEntry);
                mutable_bitField0_ |= 0x00000008;
              }
              com.google.protobuf.MapEntry<java.lang.Long, java.lang.Integer>
              uint64ToInt32Map__ = input.readMessage(
                  Uint64ToInt32MapDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              uint64ToInt32Map_.getMutableMap().put(
                  uint64ToInt32Map__.getKey(), uint64ToInt32Map__.getValue());
              break;
            }
            case 42: {
              if (!((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
                sint32ToInt32Map_ = com.google.protobuf.MapField.newMapField(
                    Sint32ToInt32MapDefaultEntryHolder.defaultEntry);
                mutable_bitField0_ |= 0x00000010;
              }
              com.google.protobuf.MapEntry<java.lang.Integer, java.lang.Integer>
              sint32ToInt32Map__ = input.readMessage(
                  Sint32ToInt32MapDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              sint32ToInt32Map_.getMutableMap().put(
                  sint32ToInt32Map__.getKey(), sint32ToInt32Map__.getValue());
              break;
            }
            case 50: {
              if (!((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
                sint64ToInt32Map_ = com.google.protobuf.MapField.newMapField(
                    Sint64ToInt32MapDefaultEntryHolder.defaultEntry);
                mutable_bitField0_ |= 0x00000020;
              }
              com.google.protobuf.MapEntry<java.lang.Long, java.lang.Integer>
              sint64ToInt32Map__ = input.readMessage(
                  Sint64ToInt32MapDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              sint64ToInt32Map_.getMutableMap().put(
                  sint64ToInt32Map__.getKey(), sint64ToInt32Map__.getValue());
              break;
            }
            case 58: {
              if (!((mutable_bitField0_ & 0x00000040) == 0x00000040)) {
                fixed32ToInt32Map_ = com.google.protobuf.MapField.newMapField(
                    Fixed32ToInt32MapDefaultEntryHolder.defaultEntry);
                mutable_bitField0_ |= 0x00000040;
              }
              com.google.protobuf.MapEntry<java.lang.Integer, java.lang.Integer>
              fixed32ToInt32Map__ = input.readMessage(
                  Fixed32ToInt32MapDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              fixed32ToInt32Map_.getMutableMap().put(
                  fixed32ToInt32Map__.getKey(), fixed32ToInt32Map__.getValue());
              break;
            }
            case 66: {
              if (!((mutable_bitField0_ & 0x00000080) == 0x00000080)) {
                fixed64ToInt32Map_ = com.google.protobuf.MapField.newMapField(
                    Fixed64ToInt32MapDefaultEntryHolder.defaultEntry);
                mutable_bitField0_ |= 0x00000080;
              }
              com.google.protobuf.MapEntry<java.lang.Long, java.lang.Integer>
              fixed64ToInt32Map__ = input.readMessage(
                  Fixed64ToInt32MapDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              fixed64ToInt32Map_.getMutableMap().put(
                  fixed64ToInt32Map__.getKey(), fixed64ToInt32Map__.getValue());
              break;
            }
            case 74: {
              if (!((mutable_bitField0_ & 0x00000100) == 0x00000100)) {
                sfixed32ToInt32Map_ = com.google.protobuf.MapField.newMapField(
                    Sfixed32ToInt32MapDefaultEntryHolder.defaultEntry);
                mutable_bitField0_ |= 0x00000100;
              }
              com.google.protobuf.MapEntry<java.lang.Integer, java.lang.Integer>
              sfixed32ToInt32Map__ = input.readMessage(
                  Sfixed32ToInt32MapDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              sfixed32ToInt32Map_.getMutableMap().put(
                  sfixed32ToInt32Map__.getKey(), sfixed32ToInt32Map__.getValue());
              break;
            }
            case 82: {
              if (!((mutable_bitField0_ & 0x00000200) == 0x00000200)) {
                sfixed64ToInt32Map_ = com.google.protobuf.MapField.newMapField(
                    Sfixed64ToInt32MapDefaultEntryHolder.defaultEntry);
                mutable_bitField0_ |= 0x00000200;
              }
              com.google.protobuf.MapEntry<java.lang.Long, java.lang.Integer>
              sfixed64ToInt32Map__ = input.readMessage(
                  Sfixed64ToInt32MapDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              sfixed64ToInt32Map_.getMutableMap().put(
                  sfixed64ToInt32Map__.getKey(), sfixed64ToInt32Map__.getValue());
              break;
            }
            case 90: {
              if (!((mutable_bitField0_ & 0x00000400) == 0x00000400)) {
                boolToInt32Map_ = com.google.protobuf.MapField.newMapField(
                    BoolToInt32MapDefaultEntryHolder.defaultEntry);
                mutable_bitField0_ |= 0x00000400;
              }
              com.google.protobuf.MapEntry<java.lang.Boolean, java.lang.Integer>
              boolToInt32Map__ = input.readMessage(
                  BoolToInt32MapDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              boolToInt32Map_.getMutableMap().put(
                  boolToInt32Map__.getKey(), boolToInt32Map__.getValue());
              break;
            }
            case 98: {
              if (!((mutable_bitField0_ & 0x00000800) == 0x00000800)) {
                stringToInt32Map_ = com.google.protobuf.MapField.newMapField(
                    StringToInt32MapDefaultEntryHolder.defaultEntry);
                mutable_bitField0_ |= 0x00000800;
              }
              com.google.protobuf.MapEntry<java.lang.String, java.lang.Integer>
              stringToInt32Map__ = input.readMessage(
                  StringToInt32MapDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              stringToInt32Map_.getMutableMap().put(
                  stringToInt32Map__.getKey(), stringToInt32Map__.getValue());
              break;
            }
            case 810: {
              if (!((mutable_bitField0_ & 0x00001000) == 0x00001000)) {
                int32ToInt64Map_ = com.google.protobuf.MapField.newMapField(
                    Int32ToInt64MapDefaultEntryHolder.defaultEntry);
                mutable_bitField0_ |= 0x00001000;
              }
              com.google.protobuf.MapEntry<java.lang.Integer, java.lang.Long>
              int32ToInt64Map__ = input.readMessage(
                  Int32ToInt64MapDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              int32ToInt64Map_.getMutableMap().put(
                  int32ToInt64Map__.getKey(), int32ToInt64Map__.getValue());
              break;
            }
            case 818: {
              if (!((mutable_bitField0_ & 0x00002000) == 0x00002000)) {
                int32ToUint32Map_ = com.google.protobuf.MapField.newMapField(
                    Int32ToUint32MapDefaultEntryHolder.defaultEntry);
                mutable_bitField0_ |= 0x00002000;
              }
              com.google.protobuf.MapEntry<java.lang.Integer, java.lang.Integer>
              int32ToUint32Map__ = input.readMessage(
                  Int32ToUint32MapDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              int32ToUint32Map_.getMutableMap().put(
                  int32ToUint32Map__.getKey(), int32ToUint32Map__.getValue());
              break;
            }
            case 826: {
              if (!((mutable_bitField0_ & 0x00004000) == 0x00004000)) {
                int32ToUint64Map_ = com.google.protobuf.MapField.newMapField(
                    Int32ToUint64MapDefaultEntryHolder.defaultEntry);
                mutable_bitField0_ |= 0x00004000;
              }
              com.google.protobuf.MapEntry<java.lang.Integer, java.lang.Long>
              int32ToUint64Map__ = input.readMessage(
                  Int32ToUint64MapDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              int32ToUint64Map_.getMutableMap().put(
                  int32ToUint64Map__.getKey(), int32ToUint64Map__.getValue());
              break;
            }
            case 834: {
              if (!((mutable_bitField0_ & 0x00008000) == 0x00008000)) {
                int32ToSint32Map_ = com.google.protobuf.MapField.newMapField(
                    Int32ToSint32MapDefaultEntryHolder.defaultEntry);
                mutable_bitField0_ |= 0x00008000;
              }
              com.google.protobuf.MapEntry<java.lang.Integer, java.lang.Integer>
              int32ToSint32Map__ = input.readMessage(
                  Int32ToSint32MapDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              int32ToSint32Map_.getMutableMap().put(
                  int32ToSint32Map__.getKey(), int32ToSint32Map__.getValue());
              break;
            }
            case 842: {
              if (!((mutable_bitField0_ & 0x00010000) == 0x00010000)) {
                int32ToSint64Map_ = com.google.protobuf.MapField.newMapField(
                    Int32ToSint64MapDefaultEntryHolder.defaultEntry);
                mutable_bitField0_ |= 0x00010000;
              }
              com.google.protobuf.MapEntry<java.lang.Integer, java.lang.Long>
              int32ToSint64Map__ = input.readMessage(
                  Int32ToSint64MapDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              int32ToSint64Map_.getMutableMap().put(
                  int32ToSint64Map__.getKey(), int32ToSint64Map__.getValue());
              break;
            }
            case 850: {
              if (!((mutable_bitField0_ & 0x00020000) == 0x00020000)) {
                int32ToFixed32Map_ = com.google.protobuf.MapField.newMapField(
                    Int32ToFixed32MapDefaultEntryHolder.defaultEntry);
                mutable_bitField0_ |= 0x00020000;
              }
              com.google.protobuf.MapEntry<java.lang.Integer, java.lang.Integer>
              int32ToFixed32Map__ = input.readMessage(
                  Int32ToFixed32MapDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              int32ToFixed32Map_.getMutableMap().put(
                  int32ToFixed32Map__.getKey(), int32ToFixed32Map__.getValue());
              break;
            }
            case 858: {
              if (!((mutable_bitField0_ & 0x00040000) == 0x00040000)) {
                int32ToFixed64Map_ = com.google.protobuf.MapField.newMapField(
                    Int32ToFixed64MapDefaultEntryHolder.defaultEntry);
                mutable_bitField0_ |= 0x00040000;
              }
              com.google.protobuf.MapEntry<java.lang.Integer, java.lang.Long>
              int32ToFixed64Map__ = input.readMessage(
                  Int32ToFixed64MapDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              int32ToFixed64Map_.getMutableMap().put(
                  int32ToFixed64Map__.getKey(), int32ToFixed64Map__.getValue());
              break;
            }
            case 866: {
              if (!((mutable_bitField0_ & 0x00080000) == 0x00080000)) {
                int32ToSfixed32Map_ = com.google.protobuf.MapField.newMapField(
                    Int32ToSfixed32MapDefaultEntryHolder.defaultEntry);
                mutable_bitField0_ |= 0x00080000;
              }
              com.google.protobuf.MapEntry<java.lang.Integer, java.lang.Integer>
              int32ToSfixed32Map__ = input.readMessage(
                  Int32ToSfixed32MapDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              int32ToSfixed32Map_.getMutableMap().put(
                  int32ToSfixed32Map__.getKey(), int32ToSfixed32Map__.getValue());
              break;
            }
            case 874: {
              if (!((mutable_bitField0_ & 0x00100000) == 0x00100000)) {
                int32ToSfixed64Map_ = com.google.protobuf.MapField.newMapField(
                    Int32ToSfixed64MapDefaultEntryHolder.defaultEntry);
                mutable_bitField0_ |= 0x00100000;
              }
              com.google.protobuf.MapEntry<java.lang.Integer, java.lang.Long>
              int32ToSfixed64Map__ = input.readMessage(
                  Int32ToSfixed64MapDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              int32ToSfixed64Map_.getMutableMap().put(
                  int32ToSfixed64Map__.getKey(), int32ToSfixed64Map__.getValue());
              break;
            }
            case 882: {
              if (!((mutable_bitField0_ & 0x00200000) == 0x00200000)) {
                int32ToFloatMap_ = com.google.protobuf.MapField.newMapField(
                    Int32ToFloatMapDefaultEntryHolder.defaultEntry);
                mutable_bitField0_ |= 0x00200000;
              }
              com.google.protobuf.MapEntry<java.lang.Integer, java.lang.Float>
              int32ToFloatMap__ = input.readMessage(
                  Int32ToFloatMapDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              int32ToFloatMap_.getMutableMap().put(
                  int32ToFloatMap__.getKey(), int32ToFloatMap__.getValue());
              break;
            }
            case 890: {
              if (!((mutable_bitField0_ & 0x00400000) == 0x00400000)) {
                int32ToDoubleMap_ = com.google.protobuf.MapField.newMapField(
                    Int32ToDoubleMapDefaultEntryHolder.defaultEntry);
                mutable_bitField0_ |= 0x00400000;
              }
              com.google.protobuf.MapEntry<java.lang.Integer, java.lang.Double>
              int32ToDoubleMap__ = input.readMessage(
                  Int32ToDoubleMapDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              int32ToDoubleMap_.getMutableMap().put(
                  int32ToDoubleMap__.getKey(), int32ToDoubleMap__.getValue());
              break;
            }
            case 898: {
              if (!((mutable_bitField0_ & 0x00800000) == 0x00800000)) {
                int32ToBoolMap_ = com.google.protobuf.MapField.newMapField(
                    Int32ToBoolMapDefaultEntryHolder.defaultEntry);
                mutable_bitField0_ |= 0x00800000;
              }
              com.google.protobuf.MapEntry<java.lang.Integer, java.lang.Boolean>
              int32ToBoolMap__ = input.readMessage(
                  Int32ToBoolMapDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              int32ToBoolMap_.getMutableMap().put(
                  int32ToBoolMap__.getKey(), int32ToBoolMap__.getValue());
              break;
            }
            case 906: {
              if (!((mutable_bitField0_ & 0x01000000) == 0x01000000)) {
                int32ToStringMap_ = com.google.protobuf.MapField.newMapField(
                    Int32ToStringMapDefaultEntryHolder.defaultEntry);
                mutable_bitField0_ |= 0x01000000;
              }
              com.google.protobuf.MapEntry<java.lang.Integer, java.lang.String>
              int32ToStringMap__ = input.readMessage(
                  Int32ToStringMapDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              int32ToStringMap_.getMutableMap().put(
                  int32ToStringMap__.getKey(), int32ToStringMap__.getValue());
              break;
            }
            case 914: {
              if (!((mutable_bitField0_ & 0x02000000) == 0x02000000)) {
                int32ToBytesMap_ = com.google.protobuf.MapField.newMapField(
                    Int32ToBytesMapDefaultEntryHolder.defaultEntry);
                mutable_bitField0_ |= 0x02000000;
              }
              com.google.protobuf.MapEntry<java.lang.Integer, com.google.protobuf.ByteString>
              int32ToBytesMap__ = input.readMessage(
                  Int32ToBytesMapDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              int32ToBytesMap_.getMutableMap().put(
                  int32ToBytesMap__.getKey(), int32ToBytesMap__.getValue());
              break;
            }
            case 922: {
              if (!((mutable_bitField0_ & 0x04000000) == 0x04000000)) {
                int32ToMessageMap_ = com.google.protobuf.MapField.newMapField(
                    Int32ToMessageMapDefaultEntryHolder.defaultEntry);
                mutable_bitField0_ |= 0x04000000;
              }
              com.google.protobuf.MapEntry<java.lang.Integer, com.google.protobuf.util.JsonTestProto.TestAllTypes.NestedMessage>
              int32ToMessageMap__ = input.readMessage(
                  Int32ToMessageMapDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              int32ToMessageMap_.getMutableMap().put(
                  int32ToMessageMap__.getKey(), int32ToMessageMap__.getValue());
              break;
            }
            case 930: {
              if (!((mutable_bitField0_ & 0x08000000) == 0x08000000)) {
                int32ToEnumMap_ = com.google.protobuf.MapField.newMapField(
                    Int32ToEnumMapDefaultEntryHolder.defaultEntry);
                mutable_bitField0_ |= 0x08000000;
              }
              com.google.protobuf.MapEntry<java.lang.Integer, java.lang.Integer>
              int32ToEnumMap__ = input.readMessage(
                  Int32ToEnumMapDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              int32ToEnumMap_.getMutableMap().put(
                  int32ToEnumMap__.getKey(), int32ToEnumMap__.getValue());
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.google.protobuf.util.JsonTestProto.internal_static_json_test_TestMap_descriptor;
    }

    @SuppressWarnings({"rawtypes"})
    protected com.google.protobuf.MapField internalGetMapField(
        int number) {
      switch (number) {
        case 1:
          return internalGetInt32ToInt32Map();
        case 2:
          return internalGetInt64ToInt32Map();
        case 3:
          return internalGetUint32ToInt32Map();
        case 4:
          return internalGetUint64ToInt32Map();
        case 5:
          return internalGetSint32ToInt32Map();
        case 6:
          return internalGetSint64ToInt32Map();
        case 7:
          return internalGetFixed32ToInt32Map();
        case 8:
          return internalGetFixed64ToInt32Map();
        case 9:
          return internalGetSfixed32ToInt32Map();
        case 10:
          return internalGetSfixed64ToInt32Map();
        case 11:
          return internalGetBoolToInt32Map();
        case 12:
          return internalGetStringToInt32Map();
        case 101:
          return internalGetInt32ToInt64Map();
        case 102:
          return internalGetInt32ToUint32Map();
        case 103:
          return internalGetInt32ToUint64Map();
        case 104:
          return internalGetInt32ToSint32Map();
        case 105:
          return internalGetInt32ToSint64Map();
        case 106:
          return internalGetInt32ToFixed32Map();
        case 107:
          return internalGetInt32ToFixed64Map();
        case 108:
          return internalGetInt32ToSfixed32Map();
        case 109:
          return internalGetInt32ToSfixed64Map();
        case 110:
          return internalGetInt32ToFloatMap();
        case 111:
          return internalGetInt32ToDoubleMap();
        case 112:
          return internalGetInt32ToBoolMap();
        case 113:
          return internalGetInt32ToStringMap();
        case 114:
          return internalGetInt32ToBytesMap();
        case 115:
          return internalGetInt32ToMessageMap();
        case 116:
          return internalGetInt32ToEnumMap();
        default:
          throw new RuntimeException(
              "Invalid map field number: " + number);
      }
    }
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.protobuf.util.JsonTestProto.internal_static_json_test_TestMap_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.protobuf.util.JsonTestProto.TestMap.class, com.google.protobuf.util.JsonTestProto.TestMap.Builder.class);
    }

    public static final int INT32_TO_INT32_MAP_FIELD_NUMBER = 1;
    private static final class Int32ToInt32MapDefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          java.lang.Integer, java.lang.Integer> defaultEntry =
              com.google.protobuf.MapEntry
              .<java.lang.Integer, java.lang.Integer>newDefaultInstance(
                  com.google.protobuf.util.JsonTestProto.internal_static_json_test_TestMap_Int32ToInt32MapEntry_descriptor, 
                  com.google.protobuf.WireFormat.FieldType.INT32,
                  0,
                  com.google.protobuf.WireFormat.FieldType.INT32,
                  0);
    }
    private com.google.protobuf.MapField<
        java.lang.Integer, java.lang.Integer> int32ToInt32Map_;
    private com.google.protobuf.MapField<java.lang.Integer, java.lang.Integer>
    internalGetInt32ToInt32Map() {
      if (int32ToInt32Map_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            Int32ToInt32MapDefaultEntryHolder.defaultEntry);
      }
      return int32ToInt32Map_;
    }

    public int getInt32ToInt32MapCount() {
      return internalGetInt32ToInt32Map().getMap().size();
    }
    /**
     * <pre>
     * Instead of testing all combinations (too many), we only make sure all
     * valid types have been used at least in one field as key and in one
     * field as value.
     * </pre>
     *
     * <code>map&lt;int32, int32&gt; int32_to_int32_map = 1;</code>
     */

    public boolean containsInt32ToInt32Map(
        int key) {
      
      return internalGetInt32ToInt32Map().getMap().containsKey(key);
    }
    /**
     * Use {@link #getInt32ToInt32MapMap()} instead.
     */
    @java.lang.Deprecated
    public java.util.Map<java.lang.Integer, java.lang.Integer> getInt32ToInt32Map() {
      return getInt32ToInt32MapMap();
    }
    /**
     * <pre>
     * Instead of testing all combinations (too many), we only make sure all
     * valid types have been used at least in one field as key and in one
     * field as value.
     * </pre>
     *
     * <code>map&lt;int32, int32&gt; int32_to_int32_map = 1;</code>
     */

    public java.util.Map<java.lang.Integer, java.lang.Integer> getInt32ToInt32MapMap() {
      return internalGetInt32ToInt32Map().getMap();
    }
    /**
     * <pre>
     * Instead of testing all combinations (too many), we only make sure all
     * valid types have been used at least in one field as key and in one
     * field as value.
     * </pre>
     *
     * <code>map&lt;int32, int32&gt; int32_to_int32_map = 1;</code>
     */

    public int getInt32ToInt32MapOrDefault(
        int key,
        int defaultValue) {
      
      java.util.Map<java.lang.Integer, java.lang.Integer> map =
          internalGetInt32ToInt32Map().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <pre>
     * Instead of testing all combinations (too many), we only make sure all
     * valid types have been used at least in one field as key and in one
     * field as value.
     * </pre>
     *
     * <code>map&lt;int32, int32&gt; int32_to_int32_map = 1;</code>
     */

    public int getInt32ToInt32MapOrThrow(
        int key) {
      
      java.util.Map<java.lang.Integer, java.lang.Integer> map =
          internalGetInt32ToInt32Map().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    public static final int INT64_TO_INT32_MAP_FIELD_NUMBER = 2;
    private static final class Int64ToInt32MapDefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          java.lang.Long, java.lang.Integer> defaultEntry =
              com.google.protobuf.MapEntry
              .<java.lang.Long, java.lang.Integer>newDefaultInstance(
                  com.google.protobuf.util.JsonTestProto.internal_static_json_test_TestMap_Int64ToInt32MapEntry_descriptor, 
                  com.google.protobuf.WireFormat.FieldType.INT64,
                  0L,
                  com.google.protobuf.WireFormat.FieldType.INT32,
                  0);
    }
    private com.google.protobuf.MapField<
        java.lang.Long, java.lang.Integer> int64ToInt32Map_;
    private com.google.protobuf.MapField<java.lang.Long, java.lang.Integer>
    internalGetInt64ToInt32Map() {
      if (int64ToInt32Map_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            Int64ToInt32MapDefaultEntryHolder.defaultEntry);
      }
      return int64ToInt32Map_;
    }

    public int getInt64ToInt32MapCount() {
      return internalGetInt64ToInt32Map().getMap().size();
    }
    /**
     * <code>map&lt;int64, int32&gt; int64_to_int32_map = 2;</code>
     */

    public boolean containsInt64ToInt32Map(
        long key) {
      
      return internalGetInt64ToInt32Map().getMap().containsKey(key);
    }
    /**
     * Use {@link #getInt64ToInt32MapMap()} instead.
     */
    @java.lang.Deprecated
    public java.util.Map<java.lang.Long, java.lang.Integer> getInt64ToInt32Map() {
      return getInt64ToInt32MapMap();
    }
    /**
     * <code>map&lt;int64, int32&gt; int64_to_int32_map = 2;</code>
     */

    public java.util.Map<java.lang.Long, java.lang.Integer> getInt64ToInt32MapMap() {
      return internalGetInt64ToInt32Map().getMap();
    }
    /**
     * <code>map&lt;int64, int32&gt; int64_to_int32_map = 2;</code>
     */

    public int getInt64ToInt32MapOrDefault(
        long key,
        int defaultValue) {
      
      java.util.Map<java.lang.Long, java.lang.Integer> map =
          internalGetInt64ToInt32Map().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <code>map&lt;int64, int32&gt; int64_to_int32_map = 2;</code>
     */

    public int getInt64ToInt32MapOrThrow(
        long key) {
      
      java.util.Map<java.lang.Long, java.lang.Integer> map =
          internalGetInt64ToInt32Map().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    public static final int UINT32_TO_INT32_MAP_FIELD_NUMBER = 3;
    private static final class Uint32ToInt32MapDefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          java.lang.Integer, java.lang.Integer> defaultEntry =
              com.google.protobuf.MapEntry
              .<java.lang.Integer, java.lang.Integer>newDefaultInstance(
                  com.google.protobuf.util.JsonTestProto.internal_static_json_test_TestMap_Uint32ToInt32MapEntry_descriptor, 
                  com.google.protobuf.WireFormat.FieldType.UINT32,
                  0,
                  com.google.protobuf.WireFormat.FieldType.INT32,
                  0);
    }
    private com.google.protobuf.MapField<
        java.lang.Integer, java.lang.Integer> uint32ToInt32Map_;
    private com.google.protobuf.MapField<java.lang.Integer, java.lang.Integer>
    internalGetUint32ToInt32Map() {
      if (uint32ToInt32Map_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            Uint32ToInt32MapDefaultEntryHolder.defaultEntry);
      }
      return uint32ToInt32Map_;
    }

    public int getUint32ToInt32MapCount() {
      return internalGetUint32ToInt32Map().getMap().size();
    }
    /**
     * <code>map&lt;uint32, int32&gt; uint32_to_int32_map = 3;</code>
     */

    public boolean containsUint32ToInt32Map(
        int key) {
      
      return internalGetUint32ToInt32Map().getMap().containsKey(key);
    }
    /**
     * Use {@link #getUint32ToInt32MapMap()} instead.
     */
    @java.lang.Deprecated
    public java.util.Map<java.lang.Integer, java.lang.Integer> getUint32ToInt32Map() {
      return getUint32ToInt32MapMap();
    }
    /**
     * <code>map&lt;uint32, int32&gt; uint32_to_int32_map = 3;</code>
     */

    public java.util.Map<java.lang.Integer, java.lang.Integer> getUint32ToInt32MapMap() {
      return internalGetUint32ToInt32Map().getMap();
    }
    /**
     * <code>map&lt;uint32, int32&gt; uint32_to_int32_map = 3;</code>
     */

    public int getUint32ToInt32MapOrDefault(
        int key,
        int defaultValue) {
      
      java.util.Map<java.lang.Integer, java.lang.Integer> map =
          internalGetUint32ToInt32Map().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <code>map&lt;uint32, int32&gt; uint32_to_int32_map = 3;</code>
     */

    public int getUint32ToInt32MapOrThrow(
        int key) {
      
      java.util.Map<java.lang.Integer, java.lang.Integer> map =
          internalGetUint32ToInt32Map().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    public static final int UINT64_TO_INT32_MAP_FIELD_NUMBER = 4;
    private static final class Uint64ToInt32MapDefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          java.lang.Long, java.lang.Integer> defaultEntry =
              com.google.protobuf.MapEntry
              .<java.lang.Long, java.lang.Integer>newDefaultInstance(
                  com.google.protobuf.util.JsonTestProto.internal_static_json_test_TestMap_Uint64ToInt32MapEntry_descriptor, 
                  com.google.protobuf.WireFormat.FieldType.UINT64,
                  0L,
                  com.google.protobuf.WireFormat.FieldType.INT32,
                  0);
    }
    private com.google.protobuf.MapField<
        java.lang.Long, java.lang.Integer> uint64ToInt32Map_;
    private com.google.protobuf.MapField<java.lang.Long, java.lang.Integer>
    internalGetUint64ToInt32Map() {
      if (uint64ToInt32Map_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            Uint64ToInt32MapDefaultEntryHolder.defaultEntry);
      }
      return uint64ToInt32Map_;
    }

    public int getUint64ToInt32MapCount() {
      return internalGetUint64ToInt32Map().getMap().size();
    }
    /**
     * <code>map&lt;uint64, int32&gt; uint64_to_int32_map = 4;</code>
     */

    public boolean containsUint64ToInt32Map(
        long key) {
      
      return internalGetUint64ToInt32Map().getMap().containsKey(key);
    }
    /**
     * Use {@link #getUint64ToInt32MapMap()} instead.
     */
    @java.lang.Deprecated
    public java.util.Map<java.lang.Long, java.lang.Integer> getUint64ToInt32Map() {
      return getUint64ToInt32MapMap();
    }
    /**
     * <code>map&lt;uint64, int32&gt; uint64_to_int32_map = 4;</code>
     */

    public java.util.Map<java.lang.Long, java.lang.Integer> getUint64ToInt32MapMap() {
      return internalGetUint64ToInt32Map().getMap();
    }
    /**
     * <code>map&lt;uint64, int32&gt; uint64_to_int32_map = 4;</code>
     */

    public int getUint64ToInt32MapOrDefault(
        long key,
        int defaultValue) {
      
      java.util.Map<java.lang.Long, java.lang.Integer> map =
          internalGetUint64ToInt32Map().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <code>map&lt;uint64, int32&gt; uint64_to_int32_map = 4;</code>
     */

    public int getUint64ToInt32MapOrThrow(
        long key) {
      
      java.util.Map<java.lang.Long, java.lang.Integer> map =
          internalGetUint64ToInt32Map().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    public static final int SINT32_TO_INT32_MAP_FIELD_NUMBER = 5;
    private static final class Sint32ToInt32MapDefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          java.lang.Integer, java.lang.Integer> defaultEntry =
              com.google.protobuf.MapEntry
              .<java.lang.Integer, java.lang.Integer>newDefaultInstance(
                  com.google.protobuf.util.JsonTestProto.internal_static_json_test_TestMap_Sint32ToInt32MapEntry_descriptor, 
                  com.google.protobuf.WireFormat.FieldType.SINT32,
                  0,
                  com.google.protobuf.WireFormat.FieldType.INT32,
                  0);
    }
    private com.google.protobuf.MapField<
        java.lang.Integer, java.lang.Integer> sint32ToInt32Map_;
    private com.google.protobuf.MapField<java.lang.Integer, java.lang.Integer>
    internalGetSint32ToInt32Map() {
      if (sint32ToInt32Map_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            Sint32ToInt32MapDefaultEntryHolder.defaultEntry);
      }
      return sint32ToInt32Map_;
    }

    public int getSint32ToInt32MapCount() {
      return internalGetSint32ToInt32Map().getMap().size();
    }
    /**
     * <code>map&lt;sint32, int32&gt; sint32_to_int32_map = 5;</code>
     */

    public boolean containsSint32ToInt32Map(
        int key) {
      
      return internalGetSint32ToInt32Map().getMap().containsKey(key);
    }
    /**
     * Use {@link #getSint32ToInt32MapMap()} instead.
     */
    @java.lang.Deprecated
    public java.util.Map<java.lang.Integer, java.lang.Integer> getSint32ToInt32Map() {
      return getSint32ToInt32MapMap();
    }
    /**
     * <code>map&lt;sint32, int32&gt; sint32_to_int32_map = 5;</code>
     */

    public java.util.Map<java.lang.Integer, java.lang.Integer> getSint32ToInt32MapMap() {
      return internalGetSint32ToInt32Map().getMap();
    }
    /**
     * <code>map&lt;sint32, int32&gt; sint32_to_int32_map = 5;</code>
     */

    public int getSint32ToInt32MapOrDefault(
        int key,
        int defaultValue) {
      
      java.util.Map<java.lang.Integer, java.lang.Integer> map =
          internalGetSint32ToInt32Map().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <code>map&lt;sint32, int32&gt; sint32_to_int32_map = 5;</code>
     */

    public int getSint32ToInt32MapOrThrow(
        int key) {
      
      java.util.Map<java.lang.Integer, java.lang.Integer> map =
          internalGetSint32ToInt32Map().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    public static final int SINT64_TO_INT32_MAP_FIELD_NUMBER = 6;
    private static final class Sint64ToInt32MapDefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          java.lang.Long, java.lang.Integer> defaultEntry =
              com.google.protobuf.MapEntry
              .<java.lang.Long, java.lang.Integer>newDefaultInstance(
                  com.google.protobuf.util.JsonTestProto.internal_static_json_test_TestMap_Sint64ToInt32MapEntry_descriptor, 
                  com.google.protobuf.WireFormat.FieldType.SINT64,
                  0L,
                  com.google.protobuf.WireFormat.FieldType.INT32,
                  0);
    }
    private com.google.protobuf.MapField<
        java.lang.Long, java.lang.Integer> sint64ToInt32Map_;
    private com.google.protobuf.MapField<java.lang.Long, java.lang.Integer>
    internalGetSint64ToInt32Map() {
      if (sint64ToInt32Map_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            Sint64ToInt32MapDefaultEntryHolder.defaultEntry);
      }
      return sint64ToInt32Map_;
    }

    public int getSint64ToInt32MapCount() {
      return internalGetSint64ToInt32Map().getMap().size();
    }
    /**
     * <code>map&lt;sint64, int32&gt; sint64_to_int32_map = 6;</code>
     */

    public boolean containsSint64ToInt32Map(
        long key) {
      
      return internalGetSint64ToInt32Map().getMap().containsKey(key);
    }
    /**
     * Use {@link #getSint64ToInt32MapMap()} instead.
     */
    @java.lang.Deprecated
    public java.util.Map<java.lang.Long, java.lang.Integer> getSint64ToInt32Map() {
      return getSint64ToInt32MapMap();
    }
    /**
     * <code>map&lt;sint64, int32&gt; sint64_to_int32_map = 6;</code>
     */

    public java.util.Map<java.lang.Long, java.lang.Integer> getSint64ToInt32MapMap() {
      return internalGetSint64ToInt32Map().getMap();
    }
    /**
     * <code>map&lt;sint64, int32&gt; sint64_to_int32_map = 6;</code>
     */

    public int getSint64ToInt32MapOrDefault(
        long key,
        int defaultValue) {
      
      java.util.Map<java.lang.Long, java.lang.Integer> map =
          internalGetSint64ToInt32Map().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <code>map&lt;sint64, int32&gt; sint64_to_int32_map = 6;</code>
     */

    public int getSint64ToInt32MapOrThrow(
        long key) {
      
      java.util.Map<java.lang.Long, java.lang.Integer> map =
          internalGetSint64ToInt32Map().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    public static final int FIXED32_TO_INT32_MAP_FIELD_NUMBER = 7;
    private static final class Fixed32ToInt32MapDefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          java.lang.Integer, java.lang.Integer> defaultEntry =
              com.google.protobuf.MapEntry
              .<java.lang.Integer, java.lang.Integer>newDefaultInstance(
                  com.google.protobuf.util.JsonTestProto.internal_static_json_test_TestMap_Fixed32ToInt32MapEntry_descriptor, 
                  com.google.protobuf.WireFormat.FieldType.FIXED32,
                  0,
                  com.google.protobuf.WireFormat.FieldType.INT32,
                  0);
    }
    private com.google.protobuf.MapField<
        java.lang.Integer, java.lang.Integer> fixed32ToInt32Map_;
    private com.google.protobuf.MapField<java.lang.Integer, java.lang.Integer>
    internalGetFixed32ToInt32Map() {
      if (fixed32ToInt32Map_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            Fixed32ToInt32MapDefaultEntryHolder.defaultEntry);
      }
      return fixed32ToInt32Map_;
    }

    public int getFixed32ToInt32MapCount() {
      return internalGetFixed32ToInt32Map().getMap().size();
    }
    /**
     * <code>map&lt;fixed32, int32&gt; fixed32_to_int32_map = 7;</code>
     */

    public boolean containsFixed32ToInt32Map(
        int key) {
      
      return internalGetFixed32ToInt32Map().getMap().containsKey(key);
    }
    /**
     * Use {@link #getFixed32ToInt32MapMap()} instead.
     */
    @java.lang.Deprecated
    public java.util.Map<java.lang.Integer, java.lang.Integer> getFixed32ToInt32Map() {
      return getFixed32ToInt32MapMap();
    }
    /**
     * <code>map&lt;fixed32, int32&gt; fixed32_to_int32_map = 7;</code>
     */

    public java.util.Map<java.lang.Integer, java.lang.Integer> getFixed32ToInt32MapMap() {
      return internalGetFixed32ToInt32Map().getMap();
    }
    /**
     * <code>map&lt;fixed32, int32&gt; fixed32_to_int32_map = 7;</code>
     */

    public int getFixed32ToInt32MapOrDefault(
        int key,
        int defaultValue) {
      
      java.util.Map<java.lang.Integer, java.lang.Integer> map =
          internalGetFixed32ToInt32Map().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <code>map&lt;fixed32, int32&gt; fixed32_to_int32_map = 7;</code>
     */

    public int getFixed32ToInt32MapOrThrow(
        int key) {
      
      java.util.Map<java.lang.Integer, java.lang.Integer> map =
          internalGetFixed32ToInt32Map().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    public static final int FIXED64_TO_INT32_MAP_FIELD_NUMBER = 8;
    private static final class Fixed64ToInt32MapDefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          java.lang.Long, java.lang.Integer> defaultEntry =
              com.google.protobuf.MapEntry
              .<java.lang.Long, java.lang.Integer>newDefaultInstance(
                  com.google.protobuf.util.JsonTestProto.internal_static_json_test_TestMap_Fixed64ToInt32MapEntry_descriptor, 
                  com.google.protobuf.WireFormat.FieldType.FIXED64,
                  0L,
                  com.google.protobuf.WireFormat.FieldType.INT32,
                  0);
    }
    private com.google.protobuf.MapField<
        java.lang.Long, java.lang.Integer> fixed64ToInt32Map_;
    private com.google.protobuf.MapField<java.lang.Long, java.lang.Integer>
    internalGetFixed64ToInt32Map() {
      if (fixed64ToInt32Map_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            Fixed64ToInt32MapDefaultEntryHolder.defaultEntry);
      }
      return fixed64ToInt32Map_;
    }

    public int getFixed64ToInt32MapCount() {
      return internalGetFixed64ToInt32Map().getMap().size();
    }
    /**
     * <code>map&lt;fixed64, int32&gt; fixed64_to_int32_map = 8;</code>
     */

    public boolean containsFixed64ToInt32Map(
        long key) {
      
      return internalGetFixed64ToInt32Map().getMap().containsKey(key);
    }
    /**
     * Use {@link #getFixed64ToInt32MapMap()} instead.
     */
    @java.lang.Deprecated
    public java.util.Map<java.lang.Long, java.lang.Integer> getFixed64ToInt32Map() {
      return getFixed64ToInt32MapMap();
    }
    /**
     * <code>map&lt;fixed64, int32&gt; fixed64_to_int32_map = 8;</code>
     */

    public java.util.Map<java.lang.Long, java.lang.Integer> getFixed64ToInt32MapMap() {
      return internalGetFixed64ToInt32Map().getMap();
    }
    /**
     * <code>map&lt;fixed64, int32&gt; fixed64_to_int32_map = 8;</code>
     */

    public int getFixed64ToInt32MapOrDefault(
        long key,
        int defaultValue) {
      
      java.util.Map<java.lang.Long, java.lang.Integer> map =
          internalGetFixed64ToInt32Map().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <code>map&lt;fixed64, int32&gt; fixed64_to_int32_map = 8;</code>
     */

    public int getFixed64ToInt32MapOrThrow(
        long key) {
      
      java.util.Map<java.lang.Long, java.lang.Integer> map =
          internalGetFixed64ToInt32Map().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    public static final int SFIXED32_TO_INT32_MAP_FIELD_NUMBER = 9;
    private static final class Sfixed32ToInt32MapDefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          java.lang.Integer, java.lang.Integer> defaultEntry =
              com.google.protobuf.MapEntry
              .<java.lang.Integer, java.lang.Integer>newDefaultInstance(
                  com.google.protobuf.util.JsonTestProto.internal_static_json_test_TestMap_Sfixed32ToInt32MapEntry_descriptor, 
                  com.google.protobuf.WireFormat.FieldType.SFIXED32,
                  0,
                  com.google.protobuf.WireFormat.FieldType.INT32,
                  0);
    }
    private com.google.protobuf.MapField<
        java.lang.Integer, java.lang.Integer> sfixed32ToInt32Map_;
    private com.google.protobuf.MapField<java.lang.Integer, java.lang.Integer>
    internalGetSfixed32ToInt32Map() {
      if (sfixed32ToInt32Map_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            Sfixed32ToInt32MapDefaultEntryHolder.defaultEntry);
      }
      return sfixed32ToInt32Map_;
    }

    public int getSfixed32ToInt32MapCount() {
      return internalGetSfixed32ToInt32Map().getMap().size();
    }
    /**
     * <code>map&lt;sfixed32, int32&gt; sfixed32_to_int32_map = 9;</code>
     */

    public boolean containsSfixed32ToInt32Map(
        int key) {
      
      return internalGetSfixed32ToInt32Map().getMap().containsKey(key);
    }
    /**
     * Use {@link #getSfixed32ToInt32MapMap()} instead.
     */
    @java.lang.Deprecated
    public java.util.Map<java.lang.Integer, java.lang.Integer> getSfixed32ToInt32Map() {
      return getSfixed32ToInt32MapMap();
    }
    /**
     * <code>map&lt;sfixed32, int32&gt; sfixed32_to_int32_map = 9;</code>
     */

    public java.util.Map<java.lang.Integer, java.lang.Integer> getSfixed32ToInt32MapMap() {
      return internalGetSfixed32ToInt32Map().getMap();
    }
    /**
     * <code>map&lt;sfixed32, int32&gt; sfixed32_to_int32_map = 9;</code>
     */

    public int getSfixed32ToInt32MapOrDefault(
        int key,
        int defaultValue) {
      
      java.util.Map<java.lang.Integer, java.lang.Integer> map =
          internalGetSfixed32ToInt32Map().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <code>map&lt;sfixed32, int32&gt; sfixed32_to_int32_map = 9;</code>
     */

    public int getSfixed32ToInt32MapOrThrow(
        int key) {
      
      java.util.Map<java.lang.Integer, java.lang.Integer> map =
          internalGetSfixed32ToInt32Map().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    public static final int SFIXED64_TO_INT32_MAP_FIELD_NUMBER = 10;
    private static final class Sfixed64ToInt32MapDefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          java.lang.Long, java.lang.Integer> defaultEntry =
              com.google.protobuf.MapEntry
              .<java.lang.Long, java.lang.Integer>newDefaultInstance(
                  com.google.protobuf.util.JsonTestProto.internal_static_json_test_TestMap_Sfixed64ToInt32MapEntry_descriptor, 
                  com.google.protobuf.WireFormat.FieldType.SFIXED64,
                  0L,
                  com.google.protobuf.WireFormat.FieldType.INT32,
                  0);
    }
    private com.google.protobuf.MapField<
        java.lang.Long, java.lang.Integer> sfixed64ToInt32Map_;
    private com.google.protobuf.MapField<java.lang.Long, java.lang.Integer>
    internalGetSfixed64ToInt32Map() {
      if (sfixed64ToInt32Map_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            Sfixed64ToInt32MapDefaultEntryHolder.defaultEntry);
      }
      return sfixed64ToInt32Map_;
    }

    public int getSfixed64ToInt32MapCount() {
      return internalGetSfixed64ToInt32Map().getMap().size();
    }
    /**
     * <code>map&lt;sfixed64, int32&gt; sfixed64_to_int32_map = 10;</code>
     */

    public boolean containsSfixed64ToInt32Map(
        long key) {
      
      return internalGetSfixed64ToInt32Map().getMap().containsKey(key);
    }
    /**
     * Use {@link #getSfixed64ToInt32MapMap()} instead.
     */
    @java.lang.Deprecated
    public java.util.Map<java.lang.Long, java.lang.Integer> getSfixed64ToInt32Map() {
      return getSfixed64ToInt32MapMap();
    }
    /**
     * <code>map&lt;sfixed64, int32&gt; sfixed64_to_int32_map = 10;</code>
     */

    public java.util.Map<java.lang.Long, java.lang.Integer> getSfixed64ToInt32MapMap() {
      return internalGetSfixed64ToInt32Map().getMap();
    }
    /**
     * <code>map&lt;sfixed64, int32&gt; sfixed64_to_int32_map = 10;</code>
     */

    public int getSfixed64ToInt32MapOrDefault(
        long key,
        int defaultValue) {
      
      java.util.Map<java.lang.Long, java.lang.Integer> map =
          internalGetSfixed64ToInt32Map().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <code>map&lt;sfixed64, int32&gt; sfixed64_to_int32_map = 10;</code>
     */

    public int getSfixed64ToInt32MapOrThrow(
        long key) {
      
      java.util.Map<java.lang.Long, java.lang.Integer> map =
          internalGetSfixed64ToInt32Map().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    public static final int BOOL_TO_INT32_MAP_FIELD_NUMBER = 11;
    private static final class BoolToInt32MapDefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          java.lang.Boolean, java.lang.Integer> defaultEntry =
              com.google.protobuf.MapEntry
              .<java.lang.Boolean, java.lang.Integer>newDefaultInstance(
                  com.google.protobuf.util.JsonTestProto.internal_static_json_test_TestMap_BoolToInt32MapEntry_descriptor, 
                  com.google.protobuf.WireFormat.FieldType.BOOL,
                  false,
                  com.google.protobuf.WireFormat.FieldType.INT32,
                  0);
    }
    private com.google.protobuf.MapField<
        java.lang.Boolean, java.lang.Integer> boolToInt32Map_;
    private com.google.protobuf.MapField<java.lang.Boolean, java.lang.Integer>
    internalGetBoolToInt32Map() {
      if (boolToInt32Map_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            BoolToInt32MapDefaultEntryHolder.defaultEntry);
      }
      return boolToInt32Map_;
    }

    public int getBoolToInt32MapCount() {
      return internalGetBoolToInt32Map().getMap().size();
    }
    /**
     * <code>map&lt;bool, int32&gt; bool_to_int32_map = 11;</code>
     */

    public boolean containsBoolToInt32Map(
        boolean key) {
      
      return internalGetBoolToInt32Map().getMap().containsKey(key);
    }
    /**
     * Use {@link #getBoolToInt32MapMap()} instead.
     */
    @java.lang.Deprecated
    public java.util.Map<java.lang.Boolean, java.lang.Integer> getBoolToInt32Map() {
      return getBoolToInt32MapMap();
    }
    /**
     * <code>map&lt;bool, int32&gt; bool_to_int32_map = 11;</code>
     */

    public java.util.Map<java.lang.Boolean, java.lang.Integer> getBoolToInt32MapMap() {
      return internalGetBoolToInt32Map().getMap();
    }
    /**
     * <code>map&lt;bool, int32&gt; bool_to_int32_map = 11;</code>
     */

    public int getBoolToInt32MapOrDefault(
        boolean key,
        int defaultValue) {
      
      java.util.Map<java.lang.Boolean, java.lang.Integer> map =
          internalGetBoolToInt32Map().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <code>map&lt;bool, int32&gt; bool_to_int32_map = 11;</code>
     */

    public int getBoolToInt32MapOrThrow(
        boolean key) {
      
      java.util.Map<java.lang.Boolean, java.lang.Integer> map =
          internalGetBoolToInt32Map().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    public static final int STRING_TO_INT32_MAP_FIELD_NUMBER = 12;
    private static final class StringToInt32MapDefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          java.lang.String, java.lang.Integer> defaultEntry =
              com.google.protobuf.MapEntry
              .<java.lang.String, java.lang.Integer>newDefaultInstance(
                  com.google.protobuf.util.JsonTestProto.internal_static_json_test_TestMap_StringToInt32MapEntry_descriptor, 
                  com.google.protobuf.WireFormat.FieldType.STRING,
                  "",
                  com.google.protobuf.WireFormat.FieldType.INT32,
                  0);
    }
    private com.google.protobuf.MapField<
        java.lang.String, java.lang.Integer> stringToInt32Map_;
    private com.google.protobuf.MapField<java.lang.String, java.lang.Integer>
    internalGetStringToInt32Map() {
      if (stringToInt32Map_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            StringToInt32MapDefaultEntryHolder.defaultEntry);
      }
      return stringToInt32Map_;
    }

    public int getStringToInt32MapCount() {
      return internalGetStringToInt32Map().getMap().size();
    }
    /**
     * <code>map&lt;string, int32&gt; string_to_int32_map = 12;</code>
     */

    public boolean containsStringToInt32Map(
        java.lang.String key) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      return internalGetStringToInt32Map().getMap().containsKey(key);
    }
    /**
     * Use {@link #getStringToInt32MapMap()} instead.
     */
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, java.lang.Integer> getStringToInt32Map() {
      return getStringToInt32MapMap();
    }
    /**
     * <code>map&lt;string, int32&gt; string_to_int32_map = 12;</code>
     */

    public java.util.Map<java.lang.String, java.lang.Integer> getStringToInt32MapMap() {
      return internalGetStringToInt32Map().getMap();
    }
    /**
     * <code>map&lt;string, int32&gt; string_to_int32_map = 12;</code>
     */

    public int getStringToInt32MapOrDefault(
        java.lang.String key,
        int defaultValue) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      java.util.Map<java.lang.String, java.lang.Integer> map =
          internalGetStringToInt32Map().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <code>map&lt;string, int32&gt; string_to_int32_map = 12;</code>
     */

    public int getStringToInt32MapOrThrow(
        java.lang.String key) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      java.util.Map<java.lang.String, java.lang.Integer> map =
          internalGetStringToInt32Map().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    public static final int INT32_TO_INT64_MAP_FIELD_NUMBER = 101;
    private static final class Int32ToInt64MapDefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          java.lang.Integer, java.lang.Long> defaultEntry =
              com.google.protobuf.MapEntry
              .<java.lang.Integer, java.lang.Long>newDefaultInstance(
                  com.google.protobuf.util.JsonTestProto.internal_static_json_test_TestMap_Int32ToInt64MapEntry_descriptor, 
                  com.google.protobuf.WireFormat.FieldType.INT32,
                  0,
                  com.google.protobuf.WireFormat.FieldType.INT64,
                  0L);
    }
    private com.google.protobuf.MapField<
        java.lang.Integer, java.lang.Long> int32ToInt64Map_;
    private com.google.protobuf.MapField<java.lang.Integer, java.lang.Long>
    internalGetInt32ToInt64Map() {
      if (int32ToInt64Map_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            Int32ToInt64MapDefaultEntryHolder.defaultEntry);
      }
      return int32ToInt64Map_;
    }

    public int getInt32ToInt64MapCount() {
      return internalGetInt32ToInt64Map().getMap().size();
    }
    /**
     * <code>map&lt;int32, int64&gt; int32_to_int64_map = 101;</code>
     */

    public boolean containsInt32ToInt64Map(
        int key) {
      
      return internalGetInt32ToInt64Map().getMap().containsKey(key);
    }
    /**
     * Use {@link #getInt32ToInt64MapMap()} instead.
     */
    @java.lang.Deprecated
    public java.util.Map<java.lang.Integer, java.lang.Long> getInt32ToInt64Map() {
      return getInt32ToInt64MapMap();
    }
    /**
     * <code>map&lt;int32, int64&gt; int32_to_int64_map = 101;</code>
     */

    public java.util.Map<java.lang.Integer, java.lang.Long> getInt32ToInt64MapMap() {
      return internalGetInt32ToInt64Map().getMap();
    }
    /**
     * <code>map&lt;int32, int64&gt; int32_to_int64_map = 101;</code>
     */

    public long getInt32ToInt64MapOrDefault(
        int key,
        long defaultValue) {
      
      java.util.Map<java.lang.Integer, java.lang.Long> map =
          internalGetInt32ToInt64Map().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <code>map&lt;int32, int64&gt; int32_to_int64_map = 101;</code>
     */

    public long getInt32ToInt64MapOrThrow(
        int key) {
      
      java.util.Map<java.lang.Integer, java.lang.Long> map =
          internalGetInt32ToInt64Map().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    public static final int INT32_TO_UINT32_MAP_FIELD_NUMBER = 102;
    private static final class Int32ToUint32MapDefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          java.lang.Integer, java.lang.Integer> defaultEntry =
              com.google.protobuf.MapEntry
              .<java.lang.Integer, java.lang.Integer>newDefaultInstance(
                  com.google.protobuf.util.JsonTestProto.internal_static_json_test_TestMap_Int32ToUint32MapEntry_descriptor, 
                  com.google.protobuf.WireFormat.FieldType.INT32,
                  0,
                  com.google.protobuf.WireFormat.FieldType.UINT32,
                  0);
    }
    private com.google.protobuf.MapField<
        java.lang.Integer, java.lang.Integer> int32ToUint32Map_;
    private com.google.protobuf.MapField<java.lang.Integer, java.lang.Integer>
    internalGetInt32ToUint32Map() {
      if (int32ToUint32Map_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            Int32ToUint32MapDefaultEntryHolder.defaultEntry);
      }
      return int32ToUint32Map_;
    }

    public int getInt32ToUint32MapCount() {
      return internalGetInt32ToUint32Map().getMap().size();
    }
    /**
     * <code>map&lt;int32, uint32&gt; int32_to_uint32_map = 102;</code>
     */

    public boolean containsInt32ToUint32Map(
        int key) {
      
      return internalGetInt32ToUint32Map().getMap().containsKey(key);
    }
    /**
     * Use {@link #getInt32ToUint32MapMap()} instead.
     */
    @java.lang.Deprecated
    public java.util.Map<java.lang.Integer, java.lang.Integer> getInt32ToUint32Map() {
      return getInt32ToUint32MapMap();
    }
    /**
     * <code>map&lt;int32, uint32&gt; int32_to_uint32_map = 102;</code>
     */

    public java.util.Map<java.lang.Integer, java.lang.Integer> getInt32ToUint32MapMap() {
      return internalGetInt32ToUint32Map().getMap();
    }
    /**
     * <code>map&lt;int32, uint32&gt; int32_to_uint32_map = 102;</code>
     */

    public int getInt32ToUint32MapOrDefault(
        int key,
        int defaultValue) {
      
      java.util.Map<java.lang.Integer, java.lang.Integer> map =
          internalGetInt32ToUint32Map().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <code>map&lt;int32, uint32&gt; int32_to_uint32_map = 102;</code>
     */

    public int getInt32ToUint32MapOrThrow(
        int key) {
      
      java.util.Map<java.lang.Integer, java.lang.Integer> map =
          internalGetInt32ToUint32Map().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    public static final int INT32_TO_UINT64_MAP_FIELD_NUMBER = 103;
    private static final class Int32ToUint64MapDefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          java.lang.Integer, java.lang.Long> defaultEntry =
              com.google.protobuf.MapEntry
              .<java.lang.Integer, java.lang.Long>newDefaultInstance(
                  com.google.protobuf.util.JsonTestProto.internal_static_json_test_TestMap_Int32ToUint64MapEntry_descriptor, 
                  com.google.protobuf.WireFormat.FieldType.INT32,
                  0,
                  com.google.protobuf.WireFormat.FieldType.UINT64,
                  0L);
    }
    private com.google.protobuf.MapField<
        java.lang.Integer, java.lang.Long> int32ToUint64Map_;
    private com.google.protobuf.MapField<java.lang.Integer, java.lang.Long>
    internalGetInt32ToUint64Map() {
      if (int32ToUint64Map_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            Int32ToUint64MapDefaultEntryHolder.defaultEntry);
      }
      return int32ToUint64Map_;
    }

    public int getInt32ToUint64MapCount() {
      return internalGetInt32ToUint64Map().getMap().size();
    }
    /**
     * <code>map&lt;int32, uint64&gt; int32_to_uint64_map = 103;</code>
     */

    public boolean containsInt32ToUint64Map(
        int key) {
      
      return internalGetInt32ToUint64Map().getMap().containsKey(key);
    }
    /**
     * Use {@link #getInt32ToUint64MapMap()} instead.
     */
    @java.lang.Deprecated
    public java.util.Map<java.lang.Integer, java.lang.Long> getInt32ToUint64Map() {
      return getInt32ToUint64MapMap();
    }
    /**
     * <code>map&lt;int32, uint64&gt; int32_to_uint64_map = 103;</code>
     */

    public java.util.Map<java.lang.Integer, java.lang.Long> getInt32ToUint64MapMap() {
      return internalGetInt32ToUint64Map().getMap();
    }
    /**
     * <code>map&lt;int32, uint64&gt; int32_to_uint64_map = 103;</code>
     */

    public long getInt32ToUint64MapOrDefault(
        int key,
        long defaultValue) {
      
      java.util.Map<java.lang.Integer, java.lang.Long> map =
          internalGetInt32ToUint64Map().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <code>map&lt;int32, uint64&gt; int32_to_uint64_map = 103;</code>
     */

    public long getInt32ToUint64MapOrThrow(
        int key) {
      
      java.util.Map<java.lang.Integer, java.lang.Long> map =
          internalGetInt32ToUint64Map().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    public static final int INT32_TO_SINT32_MAP_FIELD_NUMBER = 104;
    private static final class Int32ToSint32MapDefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          java.lang.Integer, java.lang.Integer> defaultEntry =
              com.google.protobuf.MapEntry
              .<java.lang.Integer, java.lang.Integer>newDefaultInstance(
                  com.google.protobuf.util.JsonTestProto.internal_static_json_test_TestMap_Int32ToSint32MapEntry_descriptor, 
                  com.google.protobuf.WireFormat.FieldType.INT32,
                  0,
                  com.google.protobuf.WireFormat.FieldType.SINT32,
                  0);
    }
    private com.google.protobuf.MapField<
        java.lang.Integer, java.lang.Integer> int32ToSint32Map_;
    private com.google.protobuf.MapField<java.lang.Integer, java.lang.Integer>
    internalGetInt32ToSint32Map() {
      if (int32ToSint32Map_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            Int32ToSint32MapDefaultEntryHolder.defaultEntry);
      }
      return int32ToSint32Map_;
    }

    public int getInt32ToSint32MapCount() {
      return internalGetInt32ToSint32Map().getMap().size();
    }
    /**
     * <code>map&lt;int32, sint32&gt; int32_to_sint32_map = 104;</code>
     */

    public boolean containsInt32ToSint32Map(
        int key) {
      
      return internalGetInt32ToSint32Map().getMap().containsKey(key);
    }
    /**
     * Use {@link #getInt32ToSint32MapMap()} instead.
     */
    @java.lang.Deprecated
    public java.util.Map<java.lang.Integer, java.lang.Integer> getInt32ToSint32Map() {
      return getInt32ToSint32MapMap();
    }
    /**
     * <code>map&lt;int32, sint32&gt; int32_to_sint32_map = 104;</code>
     */

    public java.util.Map<java.lang.Integer, java.lang.Integer> getInt32ToSint32MapMap() {
      return internalGetInt32ToSint32Map().getMap();
    }
    /**
     * <code>map&lt;int32, sint32&gt; int32_to_sint32_map = 104;</code>
     */

    public int getInt32ToSint32MapOrDefault(
        int key,
        int defaultValue) {
      
      java.util.Map<java.lang.Integer, java.lang.Integer> map =
          internalGetInt32ToSint32Map().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <code>map&lt;int32, sint32&gt; int32_to_sint32_map = 104;</code>
     */

    public int getInt32ToSint32MapOrThrow(
        int key) {
      
      java.util.Map<java.lang.Integer, java.lang.Integer> map =
          internalGetInt32ToSint32Map().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    public static final int INT32_TO_SINT64_MAP_FIELD_NUMBER = 105;
    private static final class Int32ToSint64MapDefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          java.lang.Integer, java.lang.Long> defaultEntry =
              com.google.protobuf.MapEntry
              .<java.lang.Integer, java.lang.Long>newDefaultInstance(
                  com.google.protobuf.util.JsonTestProto.internal_static_json_test_TestMap_Int32ToSint64MapEntry_descriptor, 
                  com.google.protobuf.WireFormat.FieldType.INT32,
                  0,
                  com.google.protobuf.WireFormat.FieldType.SINT64,
                  0L);
    }
    private com.google.protobuf.MapField<
        java.lang.Integer, java.lang.Long> int32ToSint64Map_;
    private com.google.protobuf.MapField<java.lang.Integer, java.lang.Long>
    internalGetInt32ToSint64Map() {
      if (int32ToSint64Map_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            Int32ToSint64MapDefaultEntryHolder.defaultEntry);
      }
      return int32ToSint64Map_;
    }

    public int getInt32ToSint64MapCount() {
      return internalGetInt32ToSint64Map().getMap().size();
    }
    /**
     * <code>map&lt;int32, sint64&gt; int32_to_sint64_map = 105;</code>
     */

    public boolean containsInt32ToSint64Map(
        int key) {
      
      return internalGetInt32ToSint64Map().getMap().containsKey(key);
    }
    /**
     * Use {@link #getInt32ToSint64MapMap()} instead.
     */
    @java.lang.Deprecated
    public java.util.Map<java.lang.Integer, java.lang.Long> getInt32ToSint64Map() {
      return getInt32ToSint64MapMap();
    }
    /**
     * <code>map&lt;int32, sint64&gt; int32_to_sint64_map = 105;</code>
     */

    public java.util.Map<java.lang.Integer, java.lang.Long> getInt32ToSint64MapMap() {
      return internalGetInt32ToSint64Map().getMap();
    }
    /**
     * <code>map&lt;int32, sint64&gt; int32_to_sint64_map = 105;</code>
     */

    public long getInt32ToSint64MapOrDefault(
        int key,
        long defaultValue) {
      
      java.util.Map<java.lang.Integer, java.lang.Long> map =
          internalGetInt32ToSint64Map().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <code>map&lt;int32, sint64&gt; int32_to_sint64_map = 105;</code>
     */

    public long getInt32ToSint64MapOrThrow(
        int key) {
      
      java.util.Map<java.lang.Integer, java.lang.Long> map =
          internalGetInt32ToSint64Map().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    public static final int INT32_TO_FIXED32_MAP_FIELD_NUMBER = 106;
    private static final class Int32ToFixed32MapDefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          java.lang.Integer, java.lang.Integer> defaultEntry =
              com.google.protobuf.MapEntry
              .<java.lang.Integer, java.lang.Integer>newDefaultInstance(
                  com.google.protobuf.util.JsonTestProto.internal_static_json_test_TestMap_Int32ToFixed32MapEntry_descriptor, 
                  com.google.protobuf.WireFormat.FieldType.INT32,
                  0,
                  com.google.protobuf.WireFormat.FieldType.FIXED32,
                  0);
    }
    private com.google.protobuf.MapField<
        java.lang.Integer, java.lang.Integer> int32ToFixed32Map_;
    private com.google.protobuf.MapField<java.lang.Integer, java.lang.Integer>
    internalGetInt32ToFixed32Map() {
      if (int32ToFixed32Map_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            Int32ToFixed32MapDefaultEntryHolder.defaultEntry);
      }
      return int32ToFixed32Map_;
    }

    public int getInt32ToFixed32MapCount() {
      return internalGetInt32ToFixed32Map().getMap().size();
    }
    /**
     * <code>map&lt;int32, fixed32&gt; int32_to_fixed32_map = 106;</code>
     */

    public boolean containsInt32ToFixed32Map(
        int key) {
      
      return internalGetInt32ToFixed32Map().getMap().containsKey(key);
    }
    /**
     * Use {@link #getInt32ToFixed32MapMap()} instead.
     */
    @java.lang.Deprecated
    public java.util.Map<java.lang.Integer, java.lang.Integer> getInt32ToFixed32Map() {
      return getInt32ToFixed32MapMap();
    }
    /**
     * <code>map&lt;int32, fixed32&gt; int32_to_fixed32_map = 106;</code>
     */

    public java.util.Map<java.lang.Integer, java.lang.Integer> getInt32ToFixed32MapMap() {
      return internalGetInt32ToFixed32Map().getMap();
    }
    /**
     * <code>map&lt;int32, fixed32&gt; int32_to_fixed32_map = 106;</code>
     */

    public int getInt32ToFixed32MapOrDefault(
        int key,
        int defaultValue) {
      
      java.util.Map<java.lang.Integer, java.lang.Integer> map =
          internalGetInt32ToFixed32Map().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <code>map&lt;int32, fixed32&gt; int32_to_fixed32_map = 106;</code>
     */

    public int getInt32ToFixed32MapOrThrow(
        int key) {
      
      java.util.Map<java.lang.Integer, java.lang.Integer> map =
          internalGetInt32ToFixed32Map().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    public static final int INT32_TO_FIXED64_MAP_FIELD_NUMBER = 107;
    private static final class Int32ToFixed64MapDefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          java.lang.Integer, java.lang.Long> defaultEntry =
              com.google.protobuf.MapEntry
              .<java.lang.Integer, java.lang.Long>newDefaultInstance(
                  com.google.protobuf.util.JsonTestProto.internal_static_json_test_TestMap_Int32ToFixed64MapEntry_descriptor, 
                  com.google.protobuf.WireFormat.FieldType.INT32,
                  0,
                  com.google.protobuf.WireFormat.FieldType.FIXED64,
                  0L);
    }
    private com.google.protobuf.MapField<
        java.lang.Integer, java.lang.Long> int32ToFixed64Map_;
    private com.google.protobuf.MapField<java.lang.Integer, java.lang.Long>
    internalGetInt32ToFixed64Map() {
      if (int32ToFixed64Map_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            Int32ToFixed64MapDefaultEntryHolder.defaultEntry);
      }
      return int32ToFixed64Map_;
    }

    public int getInt32ToFixed64MapCount() {
      return internalGetInt32ToFixed64Map().getMap().size();
    }
    /**
     * <code>map&lt;int32, fixed64&gt; int32_to_fixed64_map = 107;</code>
     */

    public boolean containsInt32ToFixed64Map(
        int key) {
      
      return internalGetInt32ToFixed64Map().getMap().containsKey(key);
    }
    /**
     * Use {@link #getInt32ToFixed64MapMap()} instead.
     */
    @java.lang.Deprecated
    public java.util.Map<java.lang.Integer, java.lang.Long> getInt32ToFixed64Map() {
      return getInt32ToFixed64MapMap();
    }
    /**
     * <code>map&lt;int32, fixed64&gt; int32_to_fixed64_map = 107;</code>
     */

    public java.util.Map<java.lang.Integer, java.lang.Long> getInt32ToFixed64MapMap() {
      return internalGetInt32ToFixed64Map().getMap();
    }
    /**
     * <code>map&lt;int32, fixed64&gt; int32_to_fixed64_map = 107;</code>
     */

    public long getInt32ToFixed64MapOrDefault(
        int key,
        long defaultValue) {
      
      java.util.Map<java.lang.Integer, java.lang.Long> map =
          internalGetInt32ToFixed64Map().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <code>map&lt;int32, fixed64&gt; int32_to_fixed64_map = 107;</code>
     */

    public long getInt32ToFixed64MapOrThrow(
        int key) {
      
      java.util.Map<java.lang.Integer, java.lang.Long> map =
          internalGetInt32ToFixed64Map().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    public static final int INT32_TO_SFIXED32_MAP_FIELD_NUMBER = 108;
    private static final class Int32ToSfixed32MapDefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          java.lang.Integer, java.lang.Integer> defaultEntry =
              com.google.protobuf.MapEntry
              .<java.lang.Integer, java.lang.Integer>newDefaultInstance(
                  com.google.protobuf.util.JsonTestProto.internal_static_json_test_TestMap_Int32ToSfixed32MapEntry_descriptor, 
                  com.google.protobuf.WireFormat.FieldType.INT32,
                  0,
                  com.google.protobuf.WireFormat.FieldType.SFIXED32,
                  0);
    }
    private com.google.protobuf.MapField<
        java.lang.Integer, java.lang.Integer> int32ToSfixed32Map_;
    private com.google.protobuf.MapField<java.lang.Integer, java.lang.Integer>
    internalGetInt32ToSfixed32Map() {
      if (int32ToSfixed32Map_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            Int32ToSfixed32MapDefaultEntryHolder.defaultEntry);
      }
      return int32ToSfixed32Map_;
    }

    public int getInt32ToSfixed32MapCount() {
      return internalGetInt32ToSfixed32Map().getMap().size();
    }
    /**
     * <code>map&lt;int32, sfixed32&gt; int32_to_sfixed32_map = 108;</code>
     */

    public boolean containsInt32ToSfixed32Map(
        int key) {
      
      return internalGetInt32ToSfixed32Map().getMap().containsKey(key);
    }
    /**
     * Use {@link #getInt32ToSfixed32MapMap()} instead.
     */
    @java.lang.Deprecated
    public java.util.Map<java.lang.Integer, java.lang.Integer> getInt32ToSfixed32Map() {
      return getInt32ToSfixed32MapMap();
    }
    /**
     * <code>map&lt;int32, sfixed32&gt; int32_to_sfixed32_map = 108;</code>
     */

    public java.util.Map<java.lang.Integer, java.lang.Integer> getInt32ToSfixed32MapMap() {
      return internalGetInt32ToSfixed32Map().getMap();
    }
    /**
     * <code>map&lt;int32, sfixed32&gt; int32_to_sfixed32_map = 108;</code>
     */

    public int getInt32ToSfixed32MapOrDefault(
        int key,
        int defaultValue) {
      
      java.util.Map<java.lang.Integer, java.lang.Integer> map =
          internalGetInt32ToSfixed32Map().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <code>map&lt;int32, sfixed32&gt; int32_to_sfixed32_map = 108;</code>
     */

    public int getInt32ToSfixed32MapOrThrow(
        int key) {
      
      java.util.Map<java.lang.Integer, java.lang.Integer> map =
          internalGetInt32ToSfixed32Map().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    public static final int INT32_TO_SFIXED64_MAP_FIELD_NUMBER = 109;
    private static final class Int32ToSfixed64MapDefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          java.lang.Integer, java.lang.Long> defaultEntry =
              com.google.protobuf.MapEntry
              .<java.lang.Integer, java.lang.Long>newDefaultInstance(
                  com.google.protobuf.util.JsonTestProto.internal_static_json_test_TestMap_Int32ToSfixed64MapEntry_descriptor, 
                  com.google.protobuf.WireFormat.FieldType.INT32,
                  0,
                  com.google.protobuf.WireFormat.FieldType.SFIXED64,
                  0L);
    }
    private com.google.protobuf.MapField<
        java.lang.Integer, java.lang.Long> int32ToSfixed64Map_;
    private com.google.protobuf.MapField<java.lang.Integer, java.lang.Long>
    internalGetInt32ToSfixed64Map() {
      if (int32ToSfixed64Map_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            Int32ToSfixed64MapDefaultEntryHolder.defaultEntry);
      }
      return int32ToSfixed64Map_;
    }

    public int getInt32ToSfixed64MapCount() {
      return internalGetInt32ToSfixed64Map().getMap().size();
    }
    /**
     * <code>map&lt;int32, sfixed64&gt; int32_to_sfixed64_map = 109;</code>
     */

    public boolean containsInt32ToSfixed64Map(
        int key) {
      
      return internalGetInt32ToSfixed64Map().getMap().containsKey(key);
    }
    /**
     * Use {@link #getInt32ToSfixed64MapMap()} instead.
     */
    @java.lang.Deprecated
    public java.util.Map<java.lang.Integer, java.lang.Long> getInt32ToSfixed64Map() {
      return getInt32ToSfixed64MapMap();
    }
    /**
     * <code>map&lt;int32, sfixed64&gt; int32_to_sfixed64_map = 109;</code>
     */

    public java.util.Map<java.lang.Integer, java.lang.Long> getInt32ToSfixed64MapMap() {
      return internalGetInt32ToSfixed64Map().getMap();
    }
    /**
     * <code>map&lt;int32, sfixed64&gt; int32_to_sfixed64_map = 109;</code>
     */

    public long getInt32ToSfixed64MapOrDefault(
        int key,
        long defaultValue) {
      
      java.util.Map<java.lang.Integer, java.lang.Long> map =
          internalGetInt32ToSfixed64Map().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <code>map&lt;int32, sfixed64&gt; int32_to_sfixed64_map = 109;</code>
     */

    public long getInt32ToSfixed64MapOrThrow(
        int key) {
      
      java.util.Map<java.lang.Integer, java.lang.Long> map =
          internalGetInt32ToSfixed64Map().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    public static final int INT32_TO_FLOAT_MAP_FIELD_NUMBER = 110;
    private static final class Int32ToFloatMapDefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          java.lang.Integer, java.lang.Float> defaultEntry =
              com.google.protobuf.MapEntry
              .<java.lang.Integer, java.lang.Float>newDefaultInstance(
                  com.google.protobuf.util.JsonTestProto.internal_static_json_test_TestMap_Int32ToFloatMapEntry_descriptor, 
                  com.google.protobuf.WireFormat.FieldType.INT32,
                  0,
                  com.google.protobuf.WireFormat.FieldType.FLOAT,
                  0F);
    }
    private com.google.protobuf.MapField<
        java.lang.Integer, java.lang.Float> int32ToFloatMap_;
    private com.google.protobuf.MapField<java.lang.Integer, java.lang.Float>
    internalGetInt32ToFloatMap() {
      if (int32ToFloatMap_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            Int32ToFloatMapDefaultEntryHolder.defaultEntry);
      }
      return int32ToFloatMap_;
    }

    public int getInt32ToFloatMapCount() {
      return internalGetInt32ToFloatMap().getMap().size();
    }
    /**
     * <code>map&lt;int32, float&gt; int32_to_float_map = 110;</code>
     */

    public boolean containsInt32ToFloatMap(
        int key) {
      
      return internalGetInt32ToFloatMap().getMap().containsKey(key);
    }
    /**
     * Use {@link #getInt32ToFloatMapMap()} instead.
     */
    @java.lang.Deprecated
    public java.util.Map<java.lang.Integer, java.lang.Float> getInt32ToFloatMap() {
      return getInt32ToFloatMapMap();
    }
    /**
     * <code>map&lt;int32, float&gt; int32_to_float_map = 110;</code>
     */

    public java.util.Map<java.lang.Integer, java.lang.Float> getInt32ToFloatMapMap() {
      return internalGetInt32ToFloatMap().getMap();
    }
    /**
     * <code>map&lt;int32, float&gt; int32_to_float_map = 110;</code>
     */

    public float getInt32ToFloatMapOrDefault(
        int key,
        float defaultValue) {
      
      java.util.Map<java.lang.Integer, java.lang.Float> map =
          internalGetInt32ToFloatMap().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <code>map&lt;int32, float&gt; int32_to_float_map = 110;</code>
     */

    public float getInt32ToFloatMapOrThrow(
        int key) {
      
      java.util.Map<java.lang.Integer, java.lang.Float> map =
          internalGetInt32ToFloatMap().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    public static final int INT32_TO_DOUBLE_MAP_FIELD_NUMBER = 111;
    private static final class Int32ToDoubleMapDefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          java.lang.Integer, java.lang.Double> defaultEntry =
              com.google.protobuf.MapEntry
              .<java.lang.Integer, java.lang.Double>newDefaultInstance(
                  com.google.protobuf.util.JsonTestProto.internal_static_json_test_TestMap_Int32ToDoubleMapEntry_descriptor, 
                  com.google.protobuf.WireFormat.FieldType.INT32,
                  0,
                  com.google.protobuf.WireFormat.FieldType.DOUBLE,
                  0D);
    }
    private com.google.protobuf.MapField<
        java.lang.Integer, java.lang.Double> int32ToDoubleMap_;
    private com.google.protobuf.MapField<java.lang.Integer, java.lang.Double>
    internalGetInt32ToDoubleMap() {
      if (int32ToDoubleMap_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            Int32ToDoubleMapDefaultEntryHolder.defaultEntry);
      }
      return int32ToDoubleMap_;
    }

    public int getInt32ToDoubleMapCount() {
      return internalGetInt32ToDoubleMap().getMap().size();
    }
    /**
     * <code>map&lt;int32, double&gt; int32_to_double_map = 111;</code>
     */

    public boolean containsInt32ToDoubleMap(
        int key) {
      
      return internalGetInt32ToDoubleMap().getMap().containsKey(key);
    }
    /**
     * Use {@link #getInt32ToDoubleMapMap()} instead.
     */
    @java.lang.Deprecated
    public java.util.Map<java.lang.Integer, java.lang.Double> getInt32ToDoubleMap() {
      return getInt32ToDoubleMapMap();
    }
    /**
     * <code>map&lt;int32, double&gt; int32_to_double_map = 111;</code>
     */

    public java.util.Map<java.lang.Integer, java.lang.Double> getInt32ToDoubleMapMap() {
      return internalGetInt32ToDoubleMap().getMap();
    }
    /**
     * <code>map&lt;int32, double&gt; int32_to_double_map = 111;</code>
     */

    public double getInt32ToDoubleMapOrDefault(
        int key,
        double defaultValue) {
      
      java.util.Map<java.lang.Integer, java.lang.Double> map =
          internalGetInt32ToDoubleMap().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <code>map&lt;int32, double&gt; int32_to_double_map = 111;</code>
     */

    public double getInt32ToDoubleMapOrThrow(
        int key) {
      
      java.util.Map<java.lang.Integer, java.lang.Double> map =
          internalGetInt32ToDoubleMap().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    public static final int INT32_TO_BOOL_MAP_FIELD_NUMBER = 112;
    private static final class Int32ToBoolMapDefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          java.lang.Integer, java.lang.Boolean> defaultEntry =
              com.google.protobuf.MapEntry
              .<java.lang.Integer, java.lang.Boolean>newDefaultInstance(
                  com.google.protobuf.util.JsonTestProto.internal_static_json_test_TestMap_Int32ToBoolMapEntry_descriptor, 
                  com.google.protobuf.WireFormat.FieldType.INT32,
                  0,
                  com.google.protobuf.WireFormat.FieldType.BOOL,
                  false);
    }
    private com.google.protobuf.MapField<
        java.lang.Integer, java.lang.Boolean> int32ToBoolMap_;
    private com.google.protobuf.MapField<java.lang.Integer, java.lang.Boolean>
    internalGetInt32ToBoolMap() {
      if (int32ToBoolMap_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            Int32ToBoolMapDefaultEntryHolder.defaultEntry);
      }
      return int32ToBoolMap_;
    }

    public int getInt32ToBoolMapCount() {
      return internalGetInt32ToBoolMap().getMap().size();
    }
    /**
     * <code>map&lt;int32, bool&gt; int32_to_bool_map = 112;</code>
     */

    public boolean containsInt32ToBoolMap(
        int key) {
      
      return internalGetInt32ToBoolMap().getMap().containsKey(key);
    }
    /**
     * Use {@link #getInt32ToBoolMapMap()} instead.
     */
    @java.lang.Deprecated
    public java.util.Map<java.lang.Integer, java.lang.Boolean> getInt32ToBoolMap() {
      return getInt32ToBoolMapMap();
    }
    /**
     * <code>map&lt;int32, bool&gt; int32_to_bool_map = 112;</code>
     */

    public java.util.Map<java.lang.Integer, java.lang.Boolean> getInt32ToBoolMapMap() {
      return internalGetInt32ToBoolMap().getMap();
    }
    /**
     * <code>map&lt;int32, bool&gt; int32_to_bool_map = 112;</code>
     */

    public boolean getInt32ToBoolMapOrDefault(
        int key,
        boolean defaultValue) {
      
      java.util.Map<java.lang.Integer, java.lang.Boolean> map =
          internalGetInt32ToBoolMap().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <code>map&lt;int32, bool&gt; int32_to_bool_map = 112;</code>
     */

    public boolean getInt32ToBoolMapOrThrow(
        int key) {
      
      java.util.Map<java.lang.Integer, java.lang.Boolean> map =
          internalGetInt32ToBoolMap().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    public static final int INT32_TO_STRING_MAP_FIELD_NUMBER = 113;
    private static final class Int32ToStringMapDefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          java.lang.Integer, java.lang.String> defaultEntry =
              com.google.protobuf.MapEntry
              .<java.lang.Integer, java.lang.String>newDefaultInstance(
                  com.google.protobuf.util.JsonTestProto.internal_static_json_test_TestMap_Int32ToStringMapEntry_descriptor, 
                  com.google.protobuf.WireFormat.FieldType.INT32,
                  0,
                  com.google.protobuf.WireFormat.FieldType.STRING,
                  "");
    }
    private com.google.protobuf.MapField<
        java.lang.Integer, java.lang.String> int32ToStringMap_;
    private com.google.protobuf.MapField<java.lang.Integer, java.lang.String>
    internalGetInt32ToStringMap() {
      if (int32ToStringMap_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            Int32ToStringMapDefaultEntryHolder.defaultEntry);
      }
      return int32ToStringMap_;
    }

    public int getInt32ToStringMapCount() {
      return internalGetInt32ToStringMap().getMap().size();
    }
    /**
     * <code>map&lt;int32, string&gt; int32_to_string_map = 113;</code>
     */

    public boolean containsInt32ToStringMap(
        int key) {
      
      return internalGetInt32ToStringMap().getMap().containsKey(key);
    }
    /**
     * Use {@link #getInt32ToStringMapMap()} instead.
     */
    @java.lang.Deprecated
    public java.util.Map<java.lang.Integer, java.lang.String> getInt32ToStringMap() {
      return getInt32ToStringMapMap();
    }
    /**
     * <code>map&lt;int32, string&gt; int32_to_string_map = 113;</code>
     */

    public java.util.Map<java.lang.Integer, java.lang.String> getInt32ToStringMapMap() {
      return internalGetInt32ToStringMap().getMap();
    }
    /**
     * <code>map&lt;int32, string&gt; int32_to_string_map = 113;</code>
     */

    public java.lang.String getInt32ToStringMapOrDefault(
        int key,
        java.lang.String defaultValue) {
      
      java.util.Map<java.lang.Integer, java.lang.String> map =
          internalGetInt32ToStringMap().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <code>map&lt;int32, string&gt; int32_to_string_map = 113;</code>
     */

    public java.lang.String getInt32ToStringMapOrThrow(
        int key) {
      
      java.util.Map<java.lang.Integer, java.lang.String> map =
          internalGetInt32ToStringMap().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    public static final int INT32_TO_BYTES_MAP_FIELD_NUMBER = 114;
    private static final class Int32ToBytesMapDefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          java.lang.Integer, com.google.protobuf.ByteString> defaultEntry =
              com.google.protobuf.MapEntry
              .<java.lang.Integer, com.google.protobuf.ByteString>newDefaultInstance(
                  com.google.protobuf.util.JsonTestProto.internal_static_json_test_TestMap_Int32ToBytesMapEntry_descriptor, 
                  com.google.protobuf.WireFormat.FieldType.INT32,
                  0,
                  com.google.protobuf.WireFormat.FieldType.BYTES,
                  com.google.protobuf.ByteString.EMPTY);
    }
    private com.google.protobuf.MapField<
        java.lang.Integer, com.google.protobuf.ByteString> int32ToBytesMap_;
    private com.google.protobuf.MapField<java.lang.Integer, com.google.protobuf.ByteString>
    internalGetInt32ToBytesMap() {
      if (int32ToBytesMap_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            Int32ToBytesMapDefaultEntryHolder.defaultEntry);
      }
      return int32ToBytesMap_;
    }

    public int getInt32ToBytesMapCount() {
      return internalGetInt32ToBytesMap().getMap().size();
    }
    /**
     * <code>map&lt;int32, bytes&gt; int32_to_bytes_map = 114;</code>
     */

    public boolean containsInt32ToBytesMap(
        int key) {
      
      return internalGetInt32ToBytesMap().getMap().containsKey(key);
    }
    /**
     * Use {@link #getInt32ToBytesMapMap()} instead.
     */
    @java.lang.Deprecated
    public java.util.Map<java.lang.Integer, com.google.protobuf.ByteString> getInt32ToBytesMap() {
      return getInt32ToBytesMapMap();
    }
    /**
     * <code>map&lt;int32, bytes&gt; int32_to_bytes_map = 114;</code>
     */

    public java.util.Map<java.lang.Integer, com.google.protobuf.ByteString> getInt32ToBytesMapMap() {
      return internalGetInt32ToBytesMap().getMap();
    }
    /**
     * <code>map&lt;int32, bytes&gt; int32_to_bytes_map = 114;</code>
     */

    public com.google.protobuf.ByteString getInt32ToBytesMapOrDefault(
        int key,
        com.google.protobuf.ByteString defaultValue) {
      
      java.util.Map<java.lang.Integer, com.google.protobuf.ByteString> map =
          internalGetInt32ToBytesMap().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <code>map&lt;int32, bytes&gt; int32_to_bytes_map = 114;</code>
     */

    public com.google.protobuf.ByteString getInt32ToBytesMapOrThrow(
        int key) {
      
      java.util.Map<java.lang.Integer, com.google.protobuf.ByteString> map =
          internalGetInt32ToBytesMap().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    public static final int INT32_TO_MESSAGE_MAP_FIELD_NUMBER = 115;
    private static final class Int32ToMessageMapDefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          java.lang.Integer, com.google.protobuf.util.JsonTestProto.TestAllTypes.NestedMessage> defaultEntry =
              com.google.protobuf.MapEntry
              .<java.lang.Integer, com.google.protobuf.util.JsonTestProto.TestAllTypes.NestedMessage>newDefaultInstance(
                  com.google.protobuf.util.JsonTestProto.internal_static_json_test_TestMap_Int32ToMessageMapEntry_descriptor, 
                  com.google.protobuf.WireFormat.FieldType.INT32,
                  0,
                  com.google.protobuf.WireFormat.FieldType.MESSAGE,
                  com.google.protobuf.util.JsonTestProto.TestAllTypes.NestedMessage.getDefaultInstance());
    }
    private com.google.protobuf.MapField<
        java.lang.Integer, com.google.protobuf.util.JsonTestProto.TestAllTypes.NestedMessage> int32ToMessageMap_;
    private com.google.protobuf.MapField<java.lang.Integer, com.google.protobuf.util.JsonTestProto.TestAllTypes.NestedMessage>
    internalGetInt32ToMessageMap() {
      if (int32ToMessageMap_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            Int32ToMessageMapDefaultEntryHolder.defaultEntry);
      }
      return int32ToMessageMap_;
    }

    public int getInt32ToMessageMapCount() {
      return internalGetInt32ToMessageMap().getMap().size();
    }
    /**
     * <code>map&lt;int32, .json_test.TestAllTypes.NestedMessage&gt; int32_to_message_map = 115;</code>
     */

    public boolean containsInt32ToMessageMap(
        int key) {
      
      return internalGetInt32ToMessageMap().getMap().containsKey(key);
    }
    /**
     * Use {@link #getInt32ToMessageMapMap()} instead.
     */
    @java.lang.Deprecated
    public java.util.Map<java.lang.Integer, com.google.protobuf.util.JsonTestProto.TestAllTypes.NestedMessage> getInt32ToMessageMap() {
      return getInt32ToMessageMapMap();
    }
    /**
     * <code>map&lt;int32, .json_test.TestAllTypes.NestedMessage&gt; int32_to_message_map = 115;</code>
     */

    public java.util.Map<java.lang.Integer, com.google.protobuf.util.JsonTestProto.TestAllTypes.NestedMessage> getInt32ToMessageMapMap() {
      return internalGetInt32ToMessageMap().getMap();
    }
    /**
     * <code>map&lt;int32, .json_test.TestAllTypes.NestedMessage&gt; int32_to_message_map = 115;</code>
     */

    public com.google.protobuf.util.JsonTestProto.TestAllTypes.NestedMessage getInt32ToMessageMapOrDefault(
        int key,
        com.google.protobuf.util.JsonTestProto.TestAllTypes.NestedMessage defaultValue) {
      
      java.util.Map<java.lang.Integer, com.google.protobuf.util.JsonTestProto.TestAllTypes.NestedMessage> map =
          internalGetInt32ToMessageMap().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <code>map&lt;int32, .json_test.TestAllTypes.NestedMessage&gt; int32_to_message_map = 115;</code>
     */

    public com.google.protobuf.util.JsonTestProto.TestAllTypes.NestedMessage getInt32ToMessageMapOrThrow(
        int key) {
      
      java.util.Map<java.lang.Integer, com.google.protobuf.util.JsonTestProto.TestAllTypes.NestedMessage> map =
          internalGetInt32ToMessageMap().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    public static final int INT32_TO_ENUM_MAP_FIELD_NUMBER = 116;
    private static final class Int32ToEnumMapDefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          java.lang.Integer, java.lang.Integer> defaultEntry =
              com.google.protobuf.MapEntry
              .<java.lang.Integer, java.lang.Integer>newDefaultInstance(
                  com.google.protobuf.util.JsonTestProto.internal_static_json_test_TestMap_Int32ToEnumMapEntry_descriptor, 
                  com.google.protobuf.WireFormat.FieldType.INT32,
                  0,
                  com.google.protobuf.WireFormat.FieldType.ENUM,
                  com.google.protobuf.util.JsonTestProto.TestAllTypes.NestedEnum.FOO.getNumber());
    }
    private com.google.protobuf.MapField<
        java.lang.Integer, java.lang.Integer> int32ToEnumMap_;
    private com.google.protobuf.MapField<java.lang.Integer, java.lang.Integer>
    internalGetInt32ToEnumMap() {
      if (int32ToEnumMap_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            Int32ToEnumMapDefaultEntryHolder.defaultEntry);
      }
      return int32ToEnumMap_;
    }
    private static final
    com.google.protobuf.Internal.MapAdapter.Converter<
        java.lang.Integer, com.google.protobuf.util.JsonTestProto.TestAllTypes.NestedEnum> int32ToEnumMapValueConverter =
            com.google.protobuf.Internal.MapAdapter.newEnumConverter(
                com.google.protobuf.util.JsonTestProto.TestAllTypes.NestedEnum.internalGetValueMap(),
                com.google.protobuf.util.JsonTestProto.TestAllTypes.NestedEnum.UNRECOGNIZED);
    private static final java.util.Map<java.lang.Integer, com.google.protobuf.util.JsonTestProto.TestAllTypes.NestedEnum>
    internalGetAdaptedInt32ToEnumMapMap(
        java.util.Map<java.lang.Integer, java.lang.Integer> map) {
      return new com.google.protobuf.Internal.MapAdapter<
          java.lang.Integer, com.google.protobuf.util.JsonTestProto.TestAllTypes.NestedEnum, java.lang.Integer>(
              map, int32ToEnumMapValueConverter);
    }

    public int getInt32ToEnumMapCount() {
      return internalGetInt32ToEnumMap().getMap().size();
    }
    /**
     * <code>map&lt;int32, .json_test.TestAllTypes.NestedEnum&gt; int32_to_enum_map = 116;</code>
     */

    public boolean containsInt32ToEnumMap(
        int key) {
      
      return internalGetInt32ToEnumMap().getMap().containsKey(key);
    }
    /**
     * Use {@link #getInt32ToEnumMapMap()} instead.
     */
    @java.lang.Deprecated
    public java.util.Map<java.lang.Integer, com.google.protobuf.util.JsonTestProto.TestAllTypes.NestedEnum>
    getInt32ToEnumMap() {
      return getInt32ToEnumMapMap();
    }
    /**
     * <code>map&lt;int32, .json_test.TestAllTypes.NestedEnum&gt; int32_to_enum_map = 116;</code>
     */

    public java.util.Map<java.lang.Integer, com.google.protobuf.util.JsonTestProto.TestAllTypes.NestedEnum>
    getInt32ToEnumMapMap() {
      return internalGetAdaptedInt32ToEnumMapMap(
          internalGetInt32ToEnumMap().getMap());}
    /**
     * <code>map&lt;int32, .json_test.TestAllTypes.NestedEnum&gt; int32_to_enum_map = 116;</code>
     */

    public com.google.protobuf.util.JsonTestProto.TestAllTypes.NestedEnum getInt32ToEnumMapOrDefault(
        int key,
        com.google.protobuf.util.JsonTestProto.TestAllTypes.NestedEnum defaultValue) {
      
      java.util.Map<java.lang.Integer, java.lang.Integer> map =
          internalGetInt32ToEnumMap().getMap();
      return map.containsKey(key)
             ? int32ToEnumMapValueConverter.doForward(map.get(key))
             : defaultValue;
    }
    /**
     * <code>map&lt;int32, .json_test.TestAllTypes.NestedEnum&gt; int32_to_enum_map = 116;</code>
     */

    public com.google.protobuf.util.JsonTestProto.TestAllTypes.NestedEnum getInt32ToEnumMapOrThrow(
        int key) {
      
      java.util.Map<java.lang.Integer, java.lang.Integer> map =
          internalGetInt32ToEnumMap().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return int32ToEnumMapValueConverter.doForward(map.get(key));
    }
    /**
     * Use {@link #getInt32ToEnumMapValueMap()} instead.
     */
    @java.lang.Deprecated
    public java.util.Map<java.lang.Integer, java.lang.Integer>
    getInt32ToEnumMapValue() {
      return getInt32ToEnumMapValueMap();
    }
    /**
     * <code>map&lt;int32, .json_test.TestAllTypes.NestedEnum&gt; int32_to_enum_map = 116;</code>
     */

    public java.util.Map<java.lang.Integer, java.lang.Integer>
    getInt32ToEnumMapValueMap() {
      return internalGetInt32ToEnumMap().getMap();
    }
    /**
     * <code>map&lt;int32, .json_test.TestAllTypes.NestedEnum&gt; int32_to_enum_map = 116;</code>
     */

    public int getInt32ToEnumMapValueOrDefault(
        int key,
        int defaultValue) {
      
      java.util.Map<java.lang.Integer, java.lang.Integer> map =
          internalGetInt32ToEnumMap().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <code>map&lt;int32, .json_test.TestAllTypes.NestedEnum&gt; int32_to_enum_map = 116;</code>
     */

    public int getInt32ToEnumMapValueOrThrow(
        int key) {
      
      java.util.Map<java.lang.Integer, java.lang.Integer> map =
          internalGetInt32ToEnumMap().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      com.google.protobuf.GeneratedMessageV3
        .serializeIntegerMapTo(
          output,
          internalGetInt32ToInt32Map(),
          Int32ToInt32MapDefaultEntryHolder.defaultEntry,
          1);
      com.google.protobuf.GeneratedMessageV3
        .serializeLongMapTo(
          output,
          internalGetInt64ToInt32Map(),
          Int64ToInt32MapDefaultEntryHolder.defaultEntry,
          2);
      com.google.protobuf.GeneratedMessageV3
        .serializeIntegerMapTo(
          output,
          internalGetUint32ToInt32Map(),
          Uint32ToInt32MapDefaultEntryHolder.defaultEntry,
          3);
      com.google.protobuf.GeneratedMessageV3
        .serializeLongMapTo(
          output,
          internalGetUint64ToInt32Map(),
          Uint64ToInt32MapDefaultEntryHolder.defaultEntry,
          4);
      com.google.protobuf.GeneratedMessageV3
        .serializeIntegerMapTo(
          output,
          internalGetSint32ToInt32Map(),
          Sint32ToInt32MapDefaultEntryHolder.defaultEntry,
          5);
      com.google.protobuf.GeneratedMessageV3
        .serializeLongMapTo(
          output,
          internalGetSint64ToInt32Map(),
          Sint64ToInt32MapDefaultEntryHolder.defaultEntry,
          6);
      com.google.protobuf.GeneratedMessageV3
        .serializeIntegerMapTo(
          output,
          internalGetFixed32ToInt32Map(),
          Fixed32ToInt32MapDefaultEntryHolder.defaultEntry,
          7);
      com.google.protobuf.GeneratedMessageV3
        .serializeLongMapTo(
          output,
          internalGetFixed64ToInt32Map(),
          Fixed64ToInt32MapDefaultEntryHolder.defaultEntry,
          8);
      com.google.protobuf.GeneratedMessageV3
        .serializeIntegerMapTo(
          output,
          internalGetSfixed32ToInt32Map(),
          Sfixed32ToInt32MapDefaultEntryHolder.defaultEntry,
          9);
      com.google.protobuf.GeneratedMessageV3
        .serializeLongMapTo(
          output,
          internalGetSfixed64ToInt32Map(),
          Sfixed64ToInt32MapDefaultEntryHolder.defaultEntry,
          10);
      com.google.protobuf.GeneratedMessageV3
        .serializeBooleanMapTo(
          output,
          internalGetBoolToInt32Map(),
          BoolToInt32MapDefaultEntryHolder.defaultEntry,
          11);
      com.google.protobuf.GeneratedMessageV3
        .serializeStringMapTo(
          output,
          internalGetStringToInt32Map(),
          StringToInt32MapDefaultEntryHolder.defaultEntry,
          12);
      com.google.protobuf.GeneratedMessageV3
        .serializeIntegerMapTo(
          output,
          internalGetInt32ToInt64Map(),
          Int32ToInt64MapDefaultEntryHolder.defaultEntry,
          101);
      com.google.protobuf.GeneratedMessageV3
        .serializeIntegerMapTo(
          output,
          internalGetInt32ToUint32Map(),
          Int32ToUint32MapDefaultEntryHolder.defaultEntry,
          102);
      com.google.protobuf.GeneratedMessageV3
        .serializeIntegerMapTo(
          output,
          internalGetInt32ToUint64Map(),
          Int32ToUint64MapDefaultEntryHolder.defaultEntry,
          103);
      com.google.protobuf.GeneratedMessageV3
        .serializeIntegerMapTo(
          output,
          internalGetInt32ToSint32Map(),
          Int32ToSint32MapDefaultEntryHolder.defaultEntry,
          104);
      com.google.protobuf.GeneratedMessageV3
        .serializeIntegerMapTo(
          output,
          internalGetInt32ToSint64Map(),
          Int32ToSint64MapDefaultEntryHolder.defaultEntry,
          105);
      com.google.protobuf.GeneratedMessageV3
        .serializeIntegerMapTo(
          output,
          internalGetInt32ToFixed32Map(),
          Int32ToFixed32MapDefaultEntryHolder.defaultEntry,
          106);
      com.google.protobuf.GeneratedMessageV3
        .serializeIntegerMapTo(
          output,
          internalGetInt32ToFixed64Map(),
          Int32ToFixed64MapDefaultEntryHolder.defaultEntry,
          107);
      com.google.protobuf.GeneratedMessageV3
        .serializeIntegerMapTo(
          output,
          internalGetInt32ToSfixed32Map(),
          Int32ToSfixed32MapDefaultEntryHolder.defaultEntry,
          108);
      com.google.protobuf.GeneratedMessageV3
        .serializeIntegerMapTo(
          output,
          internalGetInt32ToSfixed64Map(),
          Int32ToSfixed64MapDefaultEntryHolder.defaultEntry,
          109);
      com.google.protobuf.GeneratedMessageV3
        .serializeIntegerMapTo(
          output,
          internalGetInt32ToFloatMap(),
          Int32ToFloatMapDefaultEntryHolder.defaultEntry,
          110);
      com.google.protobuf.GeneratedMessageV3
        .serializeIntegerMapTo(
          output,
          internalGetInt32ToDoubleMap(),
          Int32ToDoubleMapDefaultEntryHolder.defaultEntry,
          111);
      com.google.protobuf.GeneratedMessageV3
        .serializeIntegerMapTo(
          output,
          internalGetInt32ToBoolMap(),
          Int32ToBoolMapDefaultEntryHolder.defaultEntry,
          112);
      com.google.protobuf.GeneratedMessageV3
        .serializeIntegerMapTo(
          output,
          internalGetInt32ToStringMap(),
          Int32ToStringMapDefaultEntryHolder.defaultEntry,
          113);
      com.google.protobuf.GeneratedMessageV3
        .serializeIntegerMapTo(
          output,
          internalGetInt32ToBytesMap(),
          Int32ToBytesMapDefaultEntryHolder.defaultEntry,
          114);
      com.google.protobuf.GeneratedMessageV3
        .serializeIntegerMapTo(
          output,
          internalGetInt32ToMessageMap(),
          Int32ToMessageMapDefaultEntryHolder.defaultEntry,
          115);
      com.google.protobuf.GeneratedMessageV3
        .serializeIntegerMapTo(
          output,
          internalGetInt32ToEnumMap(),
          Int32ToEnumMapDefaultEntryHolder.defaultEntry,
          116);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (java.util.Map.Entry<java.lang.Integer, java.lang.Integer> entry
           : internalGetInt32ToInt32Map().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.Integer, java.lang.Integer>
        int32ToInt32Map__ = Int32ToInt32MapDefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(1, int32ToInt32Map__);
      }
      for (java.util.Map.Entry<java.lang.Long, java.lang.Integer> entry
           : internalGetInt64ToInt32Map().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.Long, java.lang.Integer>
        int64ToInt32Map__ = Int64ToInt32MapDefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(2, int64ToInt32Map__);
      }
      for (java.util.Map.Entry<java.lang.Integer, java.lang.Integer> entry
           : internalGetUint32ToInt32Map().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.Integer, java.lang.Integer>
        uint32ToInt32Map__ = Uint32ToInt32MapDefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(3, uint32ToInt32Map__);
      }
      for (java.util.Map.Entry<java.lang.Long, java.lang.Integer> entry
           : internalGetUint64ToInt32Map().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.Long, java.lang.Integer>
        uint64ToInt32Map__ = Uint64ToInt32MapDefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(4, uint64ToInt32Map__);
      }
      for (java.util.Map.Entry<java.lang.Integer, java.lang.Integer> entry
           : internalGetSint32ToInt32Map().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.Integer, java.lang.Integer>
        sint32ToInt32Map__ = Sint32ToInt32MapDefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(5, sint32ToInt32Map__);
      }
      for (java.util.Map.Entry<java.lang.Long, java.lang.Integer> entry
           : internalGetSint64ToInt32Map().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.Long, java.lang.Integer>
        sint64ToInt32Map__ = Sint64ToInt32MapDefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(6, sint64ToInt32Map__);
      }
      for (java.util.Map.Entry<java.lang.Integer, java.lang.Integer> entry
           : internalGetFixed32ToInt32Map().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.Integer, java.lang.Integer>
        fixed32ToInt32Map__ = Fixed32ToInt32MapDefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(7, fixed32ToInt32Map__);
      }
      for (java.util.Map.Entry<java.lang.Long, java.lang.Integer> entry
           : internalGetFixed64ToInt32Map().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.Long, java.lang.Integer>
        fixed64ToInt32Map__ = Fixed64ToInt32MapDefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(8, fixed64ToInt32Map__);
      }
      for (java.util.Map.Entry<java.lang.Integer, java.lang.Integer> entry
           : internalGetSfixed32ToInt32Map().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.Integer, java.lang.Integer>
        sfixed32ToInt32Map__ = Sfixed32ToInt32MapDefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(9, sfixed32ToInt32Map__);
      }
      for (java.util.Map.Entry<java.lang.Long, java.lang.Integer> entry
           : internalGetSfixed64ToInt32Map().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.Long, java.lang.Integer>
        sfixed64ToInt32Map__ = Sfixed64ToInt32MapDefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10, sfixed64ToInt32Map__);
      }
      for (java.util.Map.Entry<java.lang.Boolean, java.lang.Integer> entry
           : internalGetBoolToInt32Map().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.Boolean, java.lang.Integer>
        boolToInt32Map__ = BoolToInt32MapDefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(11, boolToInt32Map__);
      }
      for (java.util.Map.Entry<java.lang.String, java.lang.Integer> entry
           : internalGetStringToInt32Map().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.String, java.lang.Integer>
        stringToInt32Map__ = StringToInt32MapDefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(12, stringToInt32Map__);
      }
      for (java.util.Map.Entry<java.lang.Integer, java.lang.Long> entry
           : internalGetInt32ToInt64Map().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.Integer, java.lang.Long>
        int32ToInt64Map__ = Int32ToInt64MapDefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(101, int32ToInt64Map__);
      }
      for (java.util.Map.Entry<java.lang.Integer, java.lang.Integer> entry
           : internalGetInt32ToUint32Map().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.Integer, java.lang.Integer>
        int32ToUint32Map__ = Int32ToUint32MapDefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(102, int32ToUint32Map__);
      }
      for (java.util.Map.Entry<java.lang.Integer, java.lang.Long> entry
           : internalGetInt32ToUint64Map().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.Integer, java.lang.Long>
        int32ToUint64Map__ = Int32ToUint64MapDefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(103, int32ToUint64Map__);
      }
      for (java.util.Map.Entry<java.lang.Integer, java.lang.Integer> entry
           : internalGetInt32ToSint32Map().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.Integer, java.lang.Integer>
        int32ToSint32Map__ = Int32ToSint32MapDefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(104, int32ToSint32Map__);
      }
      for (java.util.Map.Entry<java.lang.Integer, java.lang.Long> entry
           : internalGetInt32ToSint64Map().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.Integer, java.lang.Long>
        int32ToSint64Map__ = Int32ToSint64MapDefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(105, int32ToSint64Map__);
      }
      for (java.util.Map.Entry<java.lang.Integer, java.lang.Integer> entry
           : internalGetInt32ToFixed32Map().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.Integer, java.lang.Integer>
        int32ToFixed32Map__ = Int32ToFixed32MapDefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(106, int32ToFixed32Map__);
      }
      for (java.util.Map.Entry<java.lang.Integer, java.lang.Long> entry
           : internalGetInt32ToFixed64Map().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.Integer, java.lang.Long>
        int32ToFixed64Map__ = Int32ToFixed64MapDefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(107, int32ToFixed64Map__);
      }
      for (java.util.Map.Entry<java.lang.Integer, java.lang.Integer> entry
           : internalGetInt32ToSfixed32Map().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.Integer, java.lang.Integer>
        int32ToSfixed32Map__ = Int32ToSfixed32MapDefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(108, int32ToSfixed32Map__);
      }
      for (java.util.Map.Entry<java.lang.Integer, java.lang.Long> entry
           : internalGetInt32ToSfixed64Map().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.Integer, java.lang.Long>
        int32ToSfixed64Map__ = Int32ToSfixed64MapDefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(109, int32ToSfixed64Map__);
      }
      for (java.util.Map.Entry<java.lang.Integer, java.lang.Float> entry
           : internalGetInt32ToFloatMap().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.Integer, java.lang.Float>
        int32ToFloatMap__ = Int32ToFloatMapDefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(110, int32ToFloatMap__);
      }
      for (java.util.Map.Entry<java.lang.Integer, java.lang.Double> entry
           : internalGetInt32ToDoubleMap().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.Integer, java.lang.Double>
        int32ToDoubleMap__ = Int32ToDoubleMapDefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(111, int32ToDoubleMap__);
      }
      for (java.util.Map.Entry<java.lang.Integer, java.lang.Boolean> entry
           : internalGetInt32ToBoolMap().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.Integer, java.lang.Boolean>
        int32ToBoolMap__ = Int32ToBoolMapDefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(112, int32ToBoolMap__);
      }
      for (java.util.Map.Entry<java.lang.Integer, java.lang.String> entry
           : internalGetInt32ToStringMap().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.Integer, java.lang.String>
        int32ToStringMap__ = Int32ToStringMapDefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(113, int32ToStringMap__);
      }
      for (java.util.Map.Entry<java.lang.Integer, com.google.protobuf.ByteString> entry
           : internalGetInt32ToBytesMap().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.Integer, com.google.protobuf.ByteString>
        int32ToBytesMap__ = Int32ToBytesMapDefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(114, int32ToBytesMap__);
      }
      for (java.util.Map.Entry<java.lang.Integer, com.google.protobuf.util.JsonTestProto.TestAllTypes.NestedMessage> entry
           : internalGetInt32ToMessageMap().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.Integer, com.google.protobuf.util.JsonTestProto.TestAllTypes.NestedMessage>
        int32ToMessageMap__ = Int32ToMessageMapDefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(115, int32ToMessageMap__);
      }
      for (java.util.Map.Entry<java.lang.Integer, java.lang.Integer> entry
           : internalGetInt32ToEnumMap().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.Integer, java.lang.Integer>
        int32ToEnumMap__ = Int32ToEnumMapDefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(116, int32ToEnumMap__);
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.google.protobuf.util.JsonTestProto.TestMap)) {
        return super.equals(obj);
      }
      com.google.protobuf.util.JsonTestProto.TestMap other = (com.google.protobuf.util.JsonTestProto.TestMap) obj;

      boolean result = true;
      result = result && internalGetInt32ToInt32Map().equals(
          other.internalGetInt32ToInt32Map());
      result = result && internalGetInt64ToInt32Map().equals(
          other.internalGetInt64ToInt32Map());
      result = result && internalGetUint32ToInt32Map().equals(
          other.internalGetUint32ToInt32Map());
      result = result && internalGetUint64ToInt32Map().equals(
          other.internalGetUint64ToInt32Map());
      result = result && internalGetSint32ToInt32Map().equals(
          other.internalGetSint32ToInt32Map());
      result = result && internalGetSint64ToInt32Map().equals(
          other.internalGetSint64ToInt32Map());
      result = result && internalGetFixed32ToInt32Map().equals(
          other.internalGetFixed32ToInt32Map());
      result = result && internalGetFixed64ToInt32Map().equals(
          other.internalGetFixed64ToInt32Map());
      result = result && internalGetSfixed32ToInt32Map().equals(
          other.internalGetSfixed32ToInt32Map());
      result = result && internalGetSfixed64ToInt32Map().equals(
          other.internalGetSfixed64ToInt32Map());
      result = result && internalGetBoolToInt32Map().equals(
          other.internalGetBoolToInt32Map());
      result = result && internalGetStringToInt32Map().equals(
          other.internalGetStringToInt32Map());
      result = result && internalGetInt32ToInt64Map().equals(
          other.internalGetInt32ToInt64Map());
      result = result && internalGetInt32ToUint32Map().equals(
          other.internalGetInt32ToUint32Map());
      result = result && internalGetInt32ToUint64Map().equals(
          other.internalGetInt32ToUint64Map());
      result = result && internalGetInt32ToSint32Map().equals(
          other.internalGetInt32ToSint32Map());
      result = result && internalGetInt32ToSint64Map().equals(
          other.internalGetInt32ToSint64Map());
      result = result && internalGetInt32ToFixed32Map().equals(
          other.internalGetInt32ToFixed32Map());
      result = result && internalGetInt32ToFixed64Map().equals(
          other.internalGetInt32ToFixed64Map());
      result = result && internalGetInt32ToSfixed32Map().equals(
          other.internalGetInt32ToSfixed32Map());
      result = result && internalGetInt32ToSfixed64Map().equals(
          other.internalGetInt32ToSfixed64Map());
      result = result && internalGetInt32ToFloatMap().equals(
          other.internalGetInt32ToFloatMap());
      result = result && internalGetInt32ToDoubleMap().equals(
          other.internalGetInt32ToDoubleMap());
      result = result && internalGetInt32ToBoolMap().equals(
          other.internalGetInt32ToBoolMap());
      result = result && internalGetInt32ToStringMap().equals(
          other.internalGetInt32ToStringMap());
      result = result && internalGetInt32ToBytesMap().equals(
          other.internalGetInt32ToBytesMap());
      result = result && internalGetInt32ToMessageMap().equals(
          other.internalGetInt32ToMessageMap());
      result = result && internalGetInt32ToEnumMap().equals(
          other.internalGetInt32ToEnumMap());
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (!internalGetInt32ToInt32Map().getMap().isEmpty()) {
        hash = (37 * hash) + INT32_TO_INT32_MAP_FIELD_NUMBER;
        hash = (53 * hash) + internalGetInt32ToInt32Map().hashCode();
      }
      if (!internalGetInt64ToInt32Map().getMap().isEmpty()) {
        hash = (37 * hash) + INT64_TO_INT32_MAP_FIELD_NUMBER;
        hash = (53 * hash) + internalGetInt64ToInt32Map().hashCode();
      }
      if (!internalGetUint32ToInt32Map().getMap().isEmpty()) {
        hash = (37 * hash) + UINT32_TO_INT32_MAP_FIELD_NUMBER;
        hash = (53 * hash) + internalGetUint32ToInt32Map().hashCode();
      }
      if (!internalGetUint64ToInt32Map().getMap().isEmpty()) {
        hash = (37 * hash) + UINT64_TO_INT32_MAP_FIELD_NUMBER;
        hash = (53 * hash) + internalGetUint64ToInt32Map().hashCode();
      }
      if (!internalGetSint32ToInt32Map().getMap().isEmpty()) {
        hash = (37 * hash) + SINT32_TO_INT32_MAP_FIELD_NUMBER;
        hash = (53 * hash) + internalGetSint32ToInt32Map().hashCode();
      }
      if (!internalGetSint64ToInt32Map().getMap().isEmpty()) {
        hash = (37 * hash) + SINT64_TO_INT32_MAP_FIELD_NUMBER;
        hash = (53 * hash) + internalGetSint64ToInt32Map().hashCode();
      }
      if (!internalGetFixed32ToInt32Map().getMap().isEmpty()) {
        hash = (37 * hash) + FIXED32_TO_INT32_MAP_FIELD_NUMBER;
        hash = (53 * hash) + internalGetFixed32ToInt32Map().hashCode();
      }
      if (!internalGetFixed64ToInt32Map().getMap().isEmpty()) {
        hash = (37 * hash) + FIXED64_TO_INT32_MAP_FIELD_NUMBER;
        hash = (53 * hash) + internalGetFixed64ToInt32Map().hashCode();
      }
      if (!internalGetSfixed32ToInt32Map().getMap().isEmpty()) {
        hash = (37 * hash) + SFIXED32_TO_INT32_MAP_FIELD_NUMBER;
        hash = (53 * hash) + internalGetSfixed32ToInt32Map().hashCode();
      }
      if (!internalGetSfixed64ToInt32Map().getMap().isEmpty()) {
        hash = (37 * hash) + SFIXED64_TO_INT32_MAP_FIELD_NUMBER;
        hash = (53 * hash) + internalGetSfixed64ToInt32Map().hashCode();
      }
      if (!internalGetBoolToInt32Map().getMap().isEmpty()) {
        hash = (37 * hash) + BOOL_TO_INT32_MAP_FIELD_NUMBER;
        hash = (53 * hash) + internalGetBoolToInt32Map().hashCode();
      }
      if (!internalGetStringToInt32Map().getMap().isEmpty()) {
        hash = (37 * hash) + STRING_TO_INT32_MAP_FIELD_NUMBER;
        hash = (53 * hash) + internalGetStringToInt32Map().hashCode();
      }
      if (!internalGetInt32ToInt64Map().getMap().isEmpty()) {
        hash = (37 * hash) + INT32_TO_INT64_MAP_FIELD_NUMBER;
        hash = (53 * hash) + internalGetInt32ToInt64Map().hashCode();
      }
      if (!internalGetInt32ToUint32Map().getMap().isEmpty()) {
        hash = (37 * hash) + INT32_TO_UINT32_MAP_FIELD_NUMBER;
        hash = (53 * hash) + internalGetInt32ToUint32Map().hashCode();
      }
      if (!internalGetInt32ToUint64Map().getMap().isEmpty()) {
        hash = (37 * hash) + INT32_TO_UINT64_MAP_FIELD_NUMBER;
        hash = (53 * hash) + internalGetInt32ToUint64Map().hashCode();
      }
      if (!internalGetInt32ToSint32Map().getMap().isEmpty()) {
        hash = (37 * hash) + INT32_TO_SINT32_MAP_FIELD_NUMBER;
        hash = (53 * hash) + internalGetInt32ToSint32Map().hashCode();
      }
      if (!internalGetInt32ToSint64Map().getMap().isEmpty()) {
        hash = (37 * hash) + INT32_TO_SINT64_MAP_FIELD_NUMBER;
        hash = (53 * hash) + internalGetInt32ToSint64Map().hashCode();
      }
      if (!internalGetInt32ToFixed32Map().getMap().isEmpty()) {
        hash = (37 * hash) + INT32_TO_FIXED32_MAP_FIELD_NUMBER;
        hash = (53 * hash) + internalGetInt32ToFixed32Map().hashCode();
      }
      if (!internalGetInt32ToFixed64Map().getMap().isEmpty()) {
        hash = (37 * hash) + INT32_TO_FIXED64_MAP_FIELD_NUMBER;
        hash = (53 * hash) + internalGetInt32ToFixed64Map().hashCode();
      }
      if (!internalGetInt32ToSfixed32Map().getMap().isEmpty()) {
        hash = (37 * hash) + INT32_TO_SFIXED32_MAP_FIELD_NUMBER;
        hash = (53 * hash) + internalGetInt32ToSfixed32Map().hashCode();
      }
      if (!internalGetInt32ToSfixed64Map().getMap().isEmpty()) {
        hash = (37 * hash) + INT32_TO_SFIXED64_MAP_FIELD_NUMBER;
        hash = (53 * hash) + internalGetInt32ToSfixed64Map().hashCode();
      }
      if (!internalGetInt32ToFloatMap().getMap().isEmpty()) {
        hash = (37 * hash) + INT32_TO_FLOAT_MAP_FIELD_NUMBER;
        hash = (53 * hash) + internalGetInt32ToFloatMap().hashCode();
      }
      if (!internalGetInt32ToDoubleMap().getMap().isEmpty()) {
        hash = (37 * hash) + INT32_TO_DOUBLE_MAP_FIELD_NUMBER;
        hash = (53 * hash) + internalGetInt32ToDoubleMap().hashCode();
      }
      if (!internalGetInt32ToBoolMap().getMap().isEmpty()) {
        hash = (37 * hash) + INT32_TO_BOOL_MAP_FIELD_NUMBER;
        hash = (53 * hash) + internalGetInt32ToBoolMap().hashCode();
      }
      if (!internalGetInt32ToStringMap().getMap().isEmpty()) {
        hash = (37 * hash) + INT32_TO_STRING_MAP_FIELD_NUMBER;
        hash = (53 * hash) + internalGetInt32ToStringMap().hashCode();
      }
      if (!internalGetInt32ToBytesMap().getMap().isEmpty()) {
        hash = (37 * hash) + INT32_TO_BYTES_MAP_FIELD_NUMBER;
        hash = (53 * hash) + internalGetInt32ToBytesMap().hashCode();
      }
      if (!internalGetInt32ToMessageMap().getMap().isEmpty()) {
        hash = (37 * hash) + INT32_TO_MESSAGE_MAP_FIELD_NUMBER;
        hash = (53 * hash) + internalGetInt32ToMessageMap().hashCode();
      }
      if (!internalGetInt32ToEnumMap().getMap().isEmpty()) {
        hash = (37 * hash) + INT32_TO_ENUM_MAP_FIELD_NUMBER;
        hash = (53 * hash) + internalGetInt32ToEnumMap().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.google.protobuf.util.JsonTestProto.TestMap parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.google.protobuf.util.JsonTestProto.TestMap parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.google.protobuf.util.JsonTestProto.TestMap parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.google.protobuf.util.JsonTestProto.TestMap parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.google.protobuf.util.JsonTestProto.TestMap parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.google.protobuf.util.JsonTestProto.TestMap parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.google.protobuf.util.JsonTestProto.TestMap parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.google.protobuf.util.JsonTestProto.TestMap parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.google.protobuf.util.JsonTestProto.TestMap parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.google.protobuf.util.JsonTestProto.TestMap parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.google.protobuf.util.JsonTestProto.TestMap parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.google.protobuf.util.JsonTestProto.TestMap parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.google.protobuf.util.JsonTestProto.TestMap prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code json_test.TestMap}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:json_test.TestMap)
        com.google.protobuf.util.JsonTestProto.TestMapOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.google.protobuf.util.JsonTestProto.internal_static_json_test_TestMap_descriptor;
      }

      @SuppressWarnings({"rawtypes"})
      protected com.google.protobuf.MapField internalGetMapField(
          int number) {
        switch (number) {
          case 1:
            return internalGetInt32ToInt32Map();
          case 2:
            return internalGetInt64ToInt32Map();
          case 3:
            return internalGetUint32ToInt32Map();
          case 4:
            return internalGetUint64ToInt32Map();
          case 5:
            return internalGetSint32ToInt32Map();
          case 6:
            return internalGetSint64ToInt32Map();
          case 7:
            return internalGetFixed32ToInt32Map();
          case 8:
            return internalGetFixed64ToInt32Map();
          case 9:
            return internalGetSfixed32ToInt32Map();
          case 10:
            return internalGetSfixed64ToInt32Map();
          case 11:
            return internalGetBoolToInt32Map();
          case 12:
            return internalGetStringToInt32Map();
          case 101:
            return internalGetInt32ToInt64Map();
          case 102:
            return internalGetInt32ToUint32Map();
          case 103:
            return internalGetInt32ToUint64Map();
          case 104:
            return internalGetInt32ToSint32Map();
          case 105:
            return internalGetInt32ToSint64Map();
          case 106:
            return internalGetInt32ToFixed32Map();
          case 107:
            return internalGetInt32ToFixed64Map();
          case 108:
            return internalGetInt32ToSfixed32Map();
          case 109:
            return internalGetInt32ToSfixed64Map();
          case 110:
            return internalGetInt32ToFloatMap();
          case 111:
            return internalGetInt32ToDoubleMap();
          case 112:
            return internalGetInt32ToBoolMap();
          case 113:
            return internalGetInt32ToStringMap();
          case 114:
            return internalGetInt32ToBytesMap();
          case 115:
            return internalGetInt32ToMessageMap();
          case 116:
            return internalGetInt32ToEnumMap();
          default:
            throw new RuntimeException(
                "Invalid map field number: " + number);
        }
      }
      @SuppressWarnings({"rawtypes"})
      protected com.google.protobuf.MapField internalGetMutableMapField(
          int number) {
        switch (number) {
          case 1:
            return internalGetMutableInt32ToInt32Map();
          case 2:
            return internalGetMutableInt64ToInt32Map();
          case 3:
            return internalGetMutableUint32ToInt32Map();
          case 4:
            return internalGetMutableUint64ToInt32Map();
          case 5:
            return internalGetMutableSint32ToInt32Map();
          case 6:
            return internalGetMutableSint64ToInt32Map();
          case 7:
            return internalGetMutableFixed32ToInt32Map();
          case 8:
            return internalGetMutableFixed64ToInt32Map();
          case 9:
            return internalGetMutableSfixed32ToInt32Map();
          case 10:
            return internalGetMutableSfixed64ToInt32Map();
          case 11:
            return internalGetMutableBoolToInt32Map();
          case 12:
            return internalGetMutableStringToInt32Map();
          case 101:
            return internalGetMutableInt32ToInt64Map();
          case 102:
            return internalGetMutableInt32ToUint32Map();
          case 103:
            return internalGetMutableInt32ToUint64Map();
          case 104:
            return internalGetMutableInt32ToSint32Map();
          case 105:
            return internalGetMutableInt32ToSint64Map();
          case 106:
            return internalGetMutableInt32ToFixed32Map();
          case 107:
            return internalGetMutableInt32ToFixed64Map();
          case 108:
            return internalGetMutableInt32ToSfixed32Map();
          case 109:
            return internalGetMutableInt32ToSfixed64Map();
          case 110:
            return internalGetMutableInt32ToFloatMap();
          case 111:
            return internalGetMutableInt32ToDoubleMap();
          case 112:
            return internalGetMutableInt32ToBoolMap();
          case 113:
            return internalGetMutableInt32ToStringMap();
          case 114:
            return internalGetMutableInt32ToBytesMap();
          case 115:
            return internalGetMutableInt32ToMessageMap();
          case 116:
            return internalGetMutableInt32ToEnumMap();
          default:
            throw new RuntimeException(
                "Invalid map field number: " + number);
        }
      }
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.google.protobuf.util.JsonTestProto.internal_static_json_test_TestMap_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.google.protobuf.util.JsonTestProto.TestMap.class, com.google.protobuf.util.JsonTestProto.TestMap.Builder.class);
      }

      // Construct using com.google.protobuf.util.JsonTestProto.TestMap.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        internalGetMutableInt32ToInt32Map().clear();
        internalGetMutableInt64ToInt32Map().clear();
        internalGetMutableUint32ToInt32Map().clear();
        internalGetMutableUint64ToInt32Map().clear();
        internalGetMutableSint32ToInt32Map().clear();
        internalGetMutableSint64ToInt32Map().clear();
        internalGetMutableFixed32ToInt32Map().clear();
        internalGetMutableFixed64ToInt32Map().clear();
        internalGetMutableSfixed32ToInt32Map().clear();
        internalGetMutableSfixed64ToInt32Map().clear();
        internalGetMutableBoolToInt32Map().clear();
        internalGetMutableStringToInt32Map().clear();
        internalGetMutableInt32ToInt64Map().clear();
        internalGetMutableInt32ToUint32Map().clear();
        internalGetMutableInt32ToUint64Map().clear();
        internalGetMutableInt32ToSint32Map().clear();
        internalGetMutableInt32ToSint64Map().clear();
        internalGetMutableInt32ToFixed32Map().clear();
        internalGetMutableInt32ToFixed64Map().clear();
        internalGetMutableInt32ToSfixed32Map().clear();
        internalGetMutableInt32ToSfixed64Map().clear();
        internalGetMutableInt32ToFloatMap().clear();
        internalGetMutableInt32ToDoubleMap().clear();
        internalGetMutableInt32ToBoolMap().clear();
        internalGetMutableInt32ToStringMap().clear();
        internalGetMutableInt32ToBytesMap().clear();
        internalGetMutableInt32ToMessageMap().clear();
        internalGetMutableInt32ToEnumMap().clear();
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.google.protobuf.util.JsonTestProto.internal_static_json_test_TestMap_descriptor;
      }

      public com.google.protobuf.util.JsonTestProto.TestMap getDefaultInstanceForType() {
        return com.google.protobuf.util.JsonTestProto.TestMap.getDefaultInstance();
      }

      public com.google.protobuf.util.JsonTestProto.TestMap build() {
        com.google.protobuf.util.JsonTestProto.TestMap result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.google.protobuf.util.JsonTestProto.TestMap buildPartial() {
        com.google.protobuf.util.JsonTestProto.TestMap result = new com.google.protobuf.util.JsonTestProto.TestMap(this);
        int from_bitField0_ = bitField0_;
        result.int32ToInt32Map_ = internalGetInt32ToInt32Map();
        result.int32ToInt32Map_.makeImmutable();
        result.int64ToInt32Map_ = internalGetInt64ToInt32Map();
        result.int64ToInt32Map_.makeImmutable();
        result.uint32ToInt32Map_ = internalGetUint32ToInt32Map();
        result.uint32ToInt32Map_.makeImmutable();
        result.uint64ToInt32Map_ = internalGetUint64ToInt32Map();
        result.uint64ToInt32Map_.makeImmutable();
        result.sint32ToInt32Map_ = internalGetSint32ToInt32Map();
        result.sint32ToInt32Map_.makeImmutable();
        result.sint64ToInt32Map_ = internalGetSint64ToInt32Map();
        result.sint64ToInt32Map_.makeImmutable();
        result.fixed32ToInt32Map_ = internalGetFixed32ToInt32Map();
        result.fixed32ToInt32Map_.makeImmutable();
        result.fixed64ToInt32Map_ = internalGetFixed64ToInt32Map();
        result.fixed64ToInt32Map_.makeImmutable();
        result.sfixed32ToInt32Map_ = internalGetSfixed32ToInt32Map();
        result.sfixed32ToInt32Map_.makeImmutable();
        result.sfixed64ToInt32Map_ = internalGetSfixed64ToInt32Map();
        result.sfixed64ToInt32Map_.makeImmutable();
        result.boolToInt32Map_ = internalGetBoolToInt32Map();
        result.boolToInt32Map_.makeImmutable();
        result.stringToInt32Map_ = internalGetStringToInt32Map();
        result.stringToInt32Map_.makeImmutable();
        result.int32ToInt64Map_ = internalGetInt32ToInt64Map();
        result.int32ToInt64Map_.makeImmutable();
        result.int32ToUint32Map_ = internalGetInt32ToUint32Map();
        result.int32ToUint32Map_.makeImmutable();
        result.int32ToUint64Map_ = internalGetInt32ToUint64Map();
        result.int32ToUint64Map_.makeImmutable();
        result.int32ToSint32Map_ = internalGetInt32ToSint32Map();
        result.int32ToSint32Map_.makeImmutable();
        result.int32ToSint64Map_ = internalGetInt32ToSint64Map();
        result.int32ToSint64Map_.makeImmutable();
        result.int32ToFixed32Map_ = internalGetInt32ToFixed32Map();
        result.int32ToFixed32Map_.makeImmutable();
        result.int32ToFixed64Map_ = internalGetInt32ToFixed64Map();
        result.int32ToFixed64Map_.makeImmutable();
        result.int32ToSfixed32Map_ = internalGetInt32ToSfixed32Map();
        result.int32ToSfixed32Map_.makeImmutable();
        result.int32ToSfixed64Map_ = internalGetInt32ToSfixed64Map();
        result.int32ToSfixed64Map_.makeImmutable();
        result.int32ToFloatMap_ = internalGetInt32ToFloatMap();
        result.int32ToFloatMap_.makeImmutable();
        result.int32ToDoubleMap_ = internalGetInt32ToDoubleMap();
        result.int32ToDoubleMap_.makeImmutable();
        result.int32ToBoolMap_ = internalGetInt32ToBoolMap();
        result.int32ToBoolMap_.makeImmutable();
        result.int32ToStringMap_ = internalGetInt32ToStringMap();
        result.int32ToStringMap_.makeImmutable();
        result.int32ToBytesMap_ = internalGetInt32ToBytesMap();
        result.int32ToBytesMap_.makeImmutable();
        result.int32ToMessageMap_ = internalGetInt32ToMessageMap();
        result.int32ToMessageMap_.makeImmutable();
        result.int32ToEnumMap_ = internalGetInt32ToEnumMap();
        result.int32ToEnumMap_.makeImmutable();
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.google.protobuf.util.JsonTestProto.TestMap) {
          return mergeFrom((com.google.protobuf.util.JsonTestProto.TestMap)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.google.protobuf.util.JsonTestProto.TestMap other) {
        if (other == com.google.protobuf.util.JsonTestProto.TestMap.getDefaultInstance()) return this;
        internalGetMutableInt32ToInt32Map().mergeFrom(
            other.internalGetInt32ToInt32Map());
        internalGetMutableInt64ToInt32Map().mergeFrom(
            other.internalGetInt64ToInt32Map());
        internalGetMutableUint32ToInt32Map().mergeFrom(
            other.internalGetUint32ToInt32Map());
        internalGetMutableUint64ToInt32Map().mergeFrom(
            other.internalGetUint64ToInt32Map());
        internalGetMutableSint32ToInt32Map().mergeFrom(
            other.internalGetSint32ToInt32Map());
        internalGetMutableSint64ToInt32Map().mergeFrom(
            other.internalGetSint64ToInt32Map());
        internalGetMutableFixed32ToInt32Map().mergeFrom(
            other.internalGetFixed32ToInt32Map());
        internalGetMutableFixed64ToInt32Map().mergeFrom(
            other.internalGetFixed64ToInt32Map());
        internalGetMutableSfixed32ToInt32Map().mergeFrom(
            other.internalGetSfixed32ToInt32Map());
        internalGetMutableSfixed64ToInt32Map().mergeFrom(
            other.internalGetSfixed64ToInt32Map());
        internalGetMutableBoolToInt32Map().mergeFrom(
            other.internalGetBoolToInt32Map());
        internalGetMutableStringToInt32Map().mergeFrom(
            other.internalGetStringToInt32Map());
        internalGetMutableInt32ToInt64Map().mergeFrom(
            other.internalGetInt32ToInt64Map());
        internalGetMutableInt32ToUint32Map().mergeFrom(
            other.internalGetInt32ToUint32Map());
        internalGetMutableInt32ToUint64Map().mergeFrom(
            other.internalGetInt32ToUint64Map());
        internalGetMutableInt32ToSint32Map().mergeFrom(
            other.internalGetInt32ToSint32Map());
        internalGetMutableInt32ToSint64Map().mergeFrom(
            other.internalGetInt32ToSint64Map());
        internalGetMutableInt32ToFixed32Map().mergeFrom(
            other.internalGetInt32ToFixed32Map());
        internalGetMutableInt32ToFixed64Map().mergeFrom(
            other.internalGetInt32ToFixed64Map());
        internalGetMutableInt32ToSfixed32Map().mergeFrom(
            other.internalGetInt32ToSfixed32Map());
        internalGetMutableInt32ToSfixed64Map().mergeFrom(
            other.internalGetInt32ToSfixed64Map());
        internalGetMutableInt32ToFloatMap().mergeFrom(
            other.internalGetInt32ToFloatMap());
        internalGetMutableInt32ToDoubleMap().mergeFrom(
            other.internalGetInt32ToDoubleMap());
        internalGetMutableInt32ToBoolMap().mergeFrom(
            other.internalGetInt32ToBoolMap());
        internalGetMutableInt32ToStringMap().mergeFrom(
            other.internalGetInt32ToStringMap());
        internalGetMutableInt32ToBytesMap().mergeFrom(
            other.internalGetInt32ToBytesMap());
        internalGetMutableInt32ToMessageMap().mergeFrom(
            other.internalGetInt32ToMessageMap());
        internalGetMutableInt32ToEnumMap().mergeFrom(
            other.internalGetInt32ToEnumMap());
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.util.JsonTestProto.TestMap parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.google.protobuf.util.JsonTestProto.TestMap) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private com.google.protobuf.MapField<
          java.lang.Integer, java.lang.Integer> int32ToInt32Map_;
      private com.google.protobuf.MapField<java.lang.Integer, java.lang.Integer>
      internalGetInt32ToInt32Map() {
        if (int32ToInt32Map_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              Int32ToInt32MapDefaultEntryHolder.defaultEntry);
        }
        return int32ToInt32Map_;
      }
      private com.google.protobuf.MapField<java.lang.Integer, java.lang.Integer>
      internalGetMutableInt32ToInt32Map() {
        onChanged();;
        if (int32ToInt32Map_ == null) {
          int32ToInt32Map_ = com.google.protobuf.MapField.newMapField(
              Int32ToInt32MapDefaultEntryHolder.defaultEntry);
        }
        if (!int32ToInt32Map_.isMutable()) {
          int32ToInt32Map_ = int32ToInt32Map_.copy();
        }
        return int32ToInt32Map_;
      }

      public int getInt32ToInt32MapCount() {
        return internalGetInt32ToInt32Map().getMap().size();
      }
      /**
       * <pre>
       * Instead of testing all combinations (too many), we only make sure all
       * valid types have been used at least in one field as key and in one
       * field as value.
       * </pre>
       *
       * <code>map&lt;int32, int32&gt; int32_to_int32_map = 1;</code>
       */

      public boolean containsInt32ToInt32Map(
          int key) {
        
        return internalGetInt32ToInt32Map().getMap().containsKey(key);
      }
      /**
       * Use {@link #getInt32ToInt32MapMap()} instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.Integer, java.lang.Integer> getInt32ToInt32Map() {
        return getInt32ToInt32MapMap();
      }
      /**
       * <pre>
       * Instead of testing all combinations (too many), we only make sure all
       * valid types have been used at least in one field as key and in one
       * field as value.
       * </pre>
       *
       * <code>map&lt;int32, int32&gt; int32_to_int32_map = 1;</code>
       */

      public java.util.Map<java.lang.Integer, java.lang.Integer> getInt32ToInt32MapMap() {
        return internalGetInt32ToInt32Map().getMap();
      }
      /**
       * <pre>
       * Instead of testing all combinations (too many), we only make sure all
       * valid types have been used at least in one field as key and in one
       * field as value.
       * </pre>
       *
       * <code>map&lt;int32, int32&gt; int32_to_int32_map = 1;</code>
       */

      public int getInt32ToInt32MapOrDefault(
          int key,
          int defaultValue) {
        
        java.util.Map<java.lang.Integer, java.lang.Integer> map =
            internalGetInt32ToInt32Map().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <pre>
       * Instead of testing all combinations (too many), we only make sure all
       * valid types have been used at least in one field as key and in one
       * field as value.
       * </pre>
       *
       * <code>map&lt;int32, int32&gt; int32_to_int32_map = 1;</code>
       */

      public int getInt32ToInt32MapOrThrow(
          int key) {
        
        java.util.Map<java.lang.Integer, java.lang.Integer> map =
            internalGetInt32ToInt32Map().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }

      public Builder clearInt32ToInt32Map() {
        internalGetMutableInt32ToInt32Map().getMutableMap()
            .clear();
        return this;
      }
      /**
       * <pre>
       * Instead of testing all combinations (too many), we only make sure all
       * valid types have been used at least in one field as key and in one
       * field as value.
       * </pre>
       *
       * <code>map&lt;int32, int32&gt; int32_to_int32_map = 1;</code>
       */

      public Builder removeInt32ToInt32Map(
          int key) {
        
        internalGetMutableInt32ToInt32Map().getMutableMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.Integer, java.lang.Integer>
      getMutableInt32ToInt32Map() {
        return internalGetMutableInt32ToInt32Map().getMutableMap();
      }
      /**
       * <pre>
       * Instead of testing all combinations (too many), we only make sure all
       * valid types have been used at least in one field as key and in one
       * field as value.
       * </pre>
       *
       * <code>map&lt;int32, int32&gt; int32_to_int32_map = 1;</code>
       */
      public Builder putInt32ToInt32Map(
          int key,
          int value) {
        
        
        internalGetMutableInt32ToInt32Map().getMutableMap()
            .put(key, value);
        return this;
      }
      /**
       * <pre>
       * Instead of testing all combinations (too many), we only make sure all
       * valid types have been used at least in one field as key and in one
       * field as value.
       * </pre>
       *
       * <code>map&lt;int32, int32&gt; int32_to_int32_map = 1;</code>
       */

      public Builder putAllInt32ToInt32Map(
          java.util.Map<java.lang.Integer, java.lang.Integer> values) {
        internalGetMutableInt32ToInt32Map().getMutableMap()
            .putAll(values);
        return this;
      }

      private com.google.protobuf.MapField<
          java.lang.Long, java.lang.Integer> int64ToInt32Map_;
      private com.google.protobuf.MapField<java.lang.Long, java.lang.Integer>
      internalGetInt64ToInt32Map() {
        if (int64ToInt32Map_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              Int64ToInt32MapDefaultEntryHolder.defaultEntry);
        }
        return int64ToInt32Map_;
      }
      private com.google.protobuf.MapField<java.lang.Long, java.lang.Integer>
      internalGetMutableInt64ToInt32Map() {
        onChanged();;
        if (int64ToInt32Map_ == null) {
          int64ToInt32Map_ = com.google.protobuf.MapField.newMapField(
              Int64ToInt32MapDefaultEntryHolder.defaultEntry);
        }
        if (!int64ToInt32Map_.isMutable()) {
          int64ToInt32Map_ = int64ToInt32Map_.copy();
        }
        return int64ToInt32Map_;
      }

      public int getInt64ToInt32MapCount() {
        return internalGetInt64ToInt32Map().getMap().size();
      }
      /**
       * <code>map&lt;int64, int32&gt; int64_to_int32_map = 2;</code>
       */

      public boolean containsInt64ToInt32Map(
          long key) {
        
        return internalGetInt64ToInt32Map().getMap().containsKey(key);
      }
      /**
       * Use {@link #getInt64ToInt32MapMap()} instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.Long, java.lang.Integer> getInt64ToInt32Map() {
        return getInt64ToInt32MapMap();
      }
      /**
       * <code>map&lt;int64, int32&gt; int64_to_int32_map = 2;</code>
       */

      public java.util.Map<java.lang.Long, java.lang.Integer> getInt64ToInt32MapMap() {
        return internalGetInt64ToInt32Map().getMap();
      }
      /**
       * <code>map&lt;int64, int32&gt; int64_to_int32_map = 2;</code>
       */

      public int getInt64ToInt32MapOrDefault(
          long key,
          int defaultValue) {
        
        java.util.Map<java.lang.Long, java.lang.Integer> map =
            internalGetInt64ToInt32Map().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <code>map&lt;int64, int32&gt; int64_to_int32_map = 2;</code>
       */

      public int getInt64ToInt32MapOrThrow(
          long key) {
        
        java.util.Map<java.lang.Long, java.lang.Integer> map =
            internalGetInt64ToInt32Map().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }

      public Builder clearInt64ToInt32Map() {
        internalGetMutableInt64ToInt32Map().getMutableMap()
            .clear();
        return this;
      }
      /**
       * <code>map&lt;int64, int32&gt; int64_to_int32_map = 2;</code>
       */

      public Builder removeInt64ToInt32Map(
          long key) {
        
        internalGetMutableInt64ToInt32Map().getMutableMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.Long, java.lang.Integer>
      getMutableInt64ToInt32Map() {
        return internalGetMutableInt64ToInt32Map().getMutableMap();
      }
      /**
       * <code>map&lt;int64, int32&gt; int64_to_int32_map = 2;</code>
       */
      public Builder putInt64ToInt32Map(
          long key,
          int value) {
        
        
        internalGetMutableInt64ToInt32Map().getMutableMap()
            .put(key, value);
        return this;
      }
      /**
       * <code>map&lt;int64, int32&gt; int64_to_int32_map = 2;</code>
       */

      public Builder putAllInt64ToInt32Map(
          java.util.Map<java.lang.Long, java.lang.Integer> values) {
        internalGetMutableInt64ToInt32Map().getMutableMap()
            .putAll(values);
        return this;
      }

      private com.google.protobuf.MapField<
          java.lang.Integer, java.lang.Integer> uint32ToInt32Map_;
      private com.google.protobuf.MapField<java.lang.Integer, java.lang.Integer>
      internalGetUint32ToInt32Map() {
        if (uint32ToInt32Map_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              Uint32ToInt32MapDefaultEntryHolder.defaultEntry);
        }
        return uint32ToInt32Map_;
      }
      private com.google.protobuf.MapField<java.lang.Integer, java.lang.Integer>
      internalGetMutableUint32ToInt32Map() {
        onChanged();;
        if (uint32ToInt32Map_ == null) {
          uint32ToInt32Map_ = com.google.protobuf.MapField.newMapField(
              Uint32ToInt32MapDefaultEntryHolder.defaultEntry);
        }
        if (!uint32ToInt32Map_.isMutable()) {
          uint32ToInt32Map_ = uint32ToInt32Map_.copy();
        }
        return uint32ToInt32Map_;
      }

      public int getUint32ToInt32MapCount() {
        return internalGetUint32ToInt32Map().getMap().size();
      }
      /**
       * <code>map&lt;uint32, int32&gt; uint32_to_int32_map = 3;</code>
       */

      public boolean containsUint32ToInt32Map(
          int key) {
        
        return internalGetUint32ToInt32Map().getMap().containsKey(key);
      }
      /**
       * Use {@link #getUint32ToInt32MapMap()} instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.Integer, java.lang.Integer> getUint32ToInt32Map() {
        return getUint32ToInt32MapMap();
      }
      /**
       * <code>map&lt;uint32, int32&gt; uint32_to_int32_map = 3;</code>
       */

      public java.util.Map<java.lang.Integer, java.lang.Integer> getUint32ToInt32MapMap() {
        return internalGetUint32ToInt32Map().getMap();
      }
      /**
       * <code>map&lt;uint32, int32&gt; uint32_to_int32_map = 3;</code>
       */

      public int getUint32ToInt32MapOrDefault(
          int key,
          int defaultValue) {
        
        java.util.Map<java.lang.Integer, java.lang.Integer> map =
            internalGetUint32ToInt32Map().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <code>map&lt;uint32, int32&gt; uint32_to_int32_map = 3;</code>
       */

      public int getUint32ToInt32MapOrThrow(
          int key) {
        
        java.util.Map<java.lang.Integer, java.lang.Integer> map =
            internalGetUint32ToInt32Map().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }

      public Builder clearUint32ToInt32Map() {
        internalGetMutableUint32ToInt32Map().getMutableMap()
            .clear();
        return this;
      }
      /**
       * <code>map&lt;uint32, int32&gt; uint32_to_int32_map = 3;</code>
       */

      public Builder removeUint32ToInt32Map(
          int key) {
        
        internalGetMutableUint32ToInt32Map().getMutableMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.Integer, java.lang.Integer>
      getMutableUint32ToInt32Map() {
        return internalGetMutableUint32ToInt32Map().getMutableMap();
      }
      /**
       * <code>map&lt;uint32, int32&gt; uint32_to_int32_map = 3;</code>
       */
      public Builder putUint32ToInt32Map(
          int key,
          int value) {
        
        
        internalGetMutableUint32ToInt32Map().getMutableMap()
            .put(key, value);
        return this;
      }
      /**
       * <code>map&lt;uint32, int32&gt; uint32_to_int32_map = 3;</code>
       */

      public Builder putAllUint32ToInt32Map(
          java.util.Map<java.lang.Integer, java.lang.Integer> values) {
        internalGetMutableUint32ToInt32Map().getMutableMap()
            .putAll(values);
        return this;
      }

      private com.google.protobuf.MapField<
          java.lang.Long, java.lang.Integer> uint64ToInt32Map_;
      private com.google.protobuf.MapField<java.lang.Long, java.lang.Integer>
      internalGetUint64ToInt32Map() {
        if (uint64ToInt32Map_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              Uint64ToInt32MapDefaultEntryHolder.defaultEntry);
        }
        return uint64ToInt32Map_;
      }
      private com.google.protobuf.MapField<java.lang.Long, java.lang.Integer>
      internalGetMutableUint64ToInt32Map() {
        onChanged();;
        if (uint64ToInt32Map_ == null) {
          uint64ToInt32Map_ = com.google.protobuf.MapField.newMapField(
              Uint64ToInt32MapDefaultEntryHolder.defaultEntry);
        }
        if (!uint64ToInt32Map_.isMutable()) {
          uint64ToInt32Map_ = uint64ToInt32Map_.copy();
        }
        return uint64ToInt32Map_;
      }

      public int getUint64ToInt32MapCount() {
        return internalGetUint64ToInt32Map().getMap().size();
      }
      /**
       * <code>map&lt;uint64, int32&gt; uint64_to_int32_map = 4;</code>
       */

      public boolean containsUint64ToInt32Map(
          long key) {
        
        return internalGetUint64ToInt32Map().getMap().containsKey(key);
      }
      /**
       * Use {@link #getUint64ToInt32MapMap()} instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.Long, java.lang.Integer> getUint64ToInt32Map() {
        return getUint64ToInt32MapMap();
      }
      /**
       * <code>map&lt;uint64, int32&gt; uint64_to_int32_map = 4;</code>
       */

      public java.util.Map<java.lang.Long, java.lang.Integer> getUint64ToInt32MapMap() {
        return internalGetUint64ToInt32Map().getMap();
      }
      /**
       * <code>map&lt;uint64, int32&gt; uint64_to_int32_map = 4;</code>
       */

      public int getUint64ToInt32MapOrDefault(
          long key,
          int defaultValue) {
        
        java.util.Map<java.lang.Long, java.lang.Integer> map =
            internalGetUint64ToInt32Map().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <code>map&lt;uint64, int32&gt; uint64_to_int32_map = 4;</code>
       */

      public int getUint64ToInt32MapOrThrow(
          long key) {
        
        java.util.Map<java.lang.Long, java.lang.Integer> map =
            internalGetUint64ToInt32Map().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }

      public Builder clearUint64ToInt32Map() {
        internalGetMutableUint64ToInt32Map().getMutableMap()
            .clear();
        return this;
      }
      /**
       * <code>map&lt;uint64, int32&gt; uint64_to_int32_map = 4;</code>
       */

      public Builder removeUint64ToInt32Map(
          long key) {
        
        internalGetMutableUint64ToInt32Map().getMutableMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.Long, java.lang.Integer>
      getMutableUint64ToInt32Map() {
        return internalGetMutableUint64ToInt32Map().getMutableMap();
      }
      /**
       * <code>map&lt;uint64, int32&gt; uint64_to_int32_map = 4;</code>
       */
      public Builder putUint64ToInt32Map(
          long key,
          int value) {
        
        
        internalGetMutableUint64ToInt32Map().getMutableMap()
            .put(key, value);
        return this;
      }
      /**
       * <code>map&lt;uint64, int32&gt; uint64_to_int32_map = 4;</code>
       */

      public Builder putAllUint64ToInt32Map(
          java.util.Map<java.lang.Long, java.lang.Integer> values) {
        internalGetMutableUint64ToInt32Map().getMutableMap()
            .putAll(values);
        return this;
      }

      private com.google.protobuf.MapField<
          java.lang.Integer, java.lang.Integer> sint32ToInt32Map_;
      private com.google.protobuf.MapField<java.lang.Integer, java.lang.Integer>
      internalGetSint32ToInt32Map() {
        if (sint32ToInt32Map_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              Sint32ToInt32MapDefaultEntryHolder.defaultEntry);
        }
        return sint32ToInt32Map_;
      }
      private com.google.protobuf.MapField<java.lang.Integer, java.lang.Integer>
      internalGetMutableSint32ToInt32Map() {
        onChanged();;
        if (sint32ToInt32Map_ == null) {
          sint32ToInt32Map_ = com.google.protobuf.MapField.newMapField(
              Sint32ToInt32MapDefaultEntryHolder.defaultEntry);
        }
        if (!sint32ToInt32Map_.isMutable()) {
          sint32ToInt32Map_ = sint32ToInt32Map_.copy();
        }
        return sint32ToInt32Map_;
      }

      public int getSint32ToInt32MapCount() {
        return internalGetSint32ToInt32Map().getMap().size();
      }
      /**
       * <code>map&lt;sint32, int32&gt; sint32_to_int32_map = 5;</code>
       */

      public boolean containsSint32ToInt32Map(
          int key) {
        
        return internalGetSint32ToInt32Map().getMap().containsKey(key);
      }
      /**
       * Use {@link #getSint32ToInt32MapMap()} instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.Integer, java.lang.Integer> getSint32ToInt32Map() {
        return getSint32ToInt32MapMap();
      }
      /**
       * <code>map&lt;sint32, int32&gt; sint32_to_int32_map = 5;</code>
       */

      public java.util.Map<java.lang.Integer, java.lang.Integer> getSint32ToInt32MapMap() {
        return internalGetSint32ToInt32Map().getMap();
      }
      /**
       * <code>map&lt;sint32, int32&gt; sint32_to_int32_map = 5;</code>
       */

      public int getSint32ToInt32MapOrDefault(
          int key,
          int defaultValue) {
        
        java.util.Map<java.lang.Integer, java.lang.Integer> map =
            internalGetSint32ToInt32Map().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <code>map&lt;sint32, int32&gt; sint32_to_int32_map = 5;</code>
       */

      public int getSint32ToInt32MapOrThrow(
          int key) {
        
        java.util.Map<java.lang.Integer, java.lang.Integer> map =
            internalGetSint32ToInt32Map().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }

      public Builder clearSint32ToInt32Map() {
        internalGetMutableSint32ToInt32Map().getMutableMap()
            .clear();
        return this;
      }
      /**
       * <code>map&lt;sint32, int32&gt; sint32_to_int32_map = 5;</code>
       */

      public Builder removeSint32ToInt32Map(
          int key) {
        
        internalGetMutableSint32ToInt32Map().getMutableMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.Integer, java.lang.Integer>
      getMutableSint32ToInt32Map() {
        return internalGetMutableSint32ToInt32Map().getMutableMap();
      }
      /**
       * <code>map&lt;sint32, int32&gt; sint32_to_int32_map = 5;</code>
       */
      public Builder putSint32ToInt32Map(
          int key,
          int value) {
        
        
        internalGetMutableSint32ToInt32Map().getMutableMap()
            .put(key, value);
        return this;
      }
      /**
       * <code>map&lt;sint32, int32&gt; sint32_to_int32_map = 5;</code>
       */

      public Builder putAllSint32ToInt32Map(
          java.util.Map<java.lang.Integer, java.lang.Integer> values) {
        internalGetMutableSint32ToInt32Map().getMutableMap()
            .putAll(values);
        return this;
      }

      private com.google.protobuf.MapField<
          java.lang.Long, java.lang.Integer> sint64ToInt32Map_;
      private com.google.protobuf.MapField<java.lang.Long, java.lang.Integer>
      internalGetSint64ToInt32Map() {
        if (sint64ToInt32Map_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              Sint64ToInt32MapDefaultEntryHolder.defaultEntry);
        }
        return sint64ToInt32Map_;
      }
      private com.google.protobuf.MapField<java.lang.Long, java.lang.Integer>
      internalGetMutableSint64ToInt32Map() {
        onChanged();;
        if (sint64ToInt32Map_ == null) {
          sint64ToInt32Map_ = com.google.protobuf.MapField.newMapField(
              Sint64ToInt32MapDefaultEntryHolder.defaultEntry);
        }
        if (!sint64ToInt32Map_.isMutable()) {
          sint64ToInt32Map_ = sint64ToInt32Map_.copy();
        }
        return sint64ToInt32Map_;
      }

      public int getSint64ToInt32MapCount() {
        return internalGetSint64ToInt32Map().getMap().size();
      }
      /**
       * <code>map&lt;sint64, int32&gt; sint64_to_int32_map = 6;</code>
       */

      public boolean containsSint64ToInt32Map(
          long key) {
        
        return internalGetSint64ToInt32Map().getMap().containsKey(key);
      }
      /**
       * Use {@link #getSint64ToInt32MapMap()} instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.Long, java.lang.Integer> getSint64ToInt32Map() {
        return getSint64ToInt32MapMap();
      }
      /**
       * <code>map&lt;sint64, int32&gt; sint64_to_int32_map = 6;</code>
       */

      public java.util.Map<java.lang.Long, java.lang.Integer> getSint64ToInt32MapMap() {
        return internalGetSint64ToInt32Map().getMap();
      }
      /**
       * <code>map&lt;sint64, int32&gt; sint64_to_int32_map = 6;</code>
       */

      public int getSint64ToInt32MapOrDefault(
          long key,
          int defaultValue) {
        
        java.util.Map<java.lang.Long, java.lang.Integer> map =
            internalGetSint64ToInt32Map().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <code>map&lt;sint64, int32&gt; sint64_to_int32_map = 6;</code>
       */

      public int getSint64ToInt32MapOrThrow(
          long key) {
        
        java.util.Map<java.lang.Long, java.lang.Integer> map =
            internalGetSint64ToInt32Map().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }

      public Builder clearSint64ToInt32Map() {
        internalGetMutableSint64ToInt32Map().getMutableMap()
            .clear();
        return this;
      }
      /**
       * <code>map&lt;sint64, int32&gt; sint64_to_int32_map = 6;</code>
       */

      public Builder removeSint64ToInt32Map(
          long key) {
        
        internalGetMutableSint64ToInt32Map().getMutableMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.Long, java.lang.Integer>
      getMutableSint64ToInt32Map() {
        return internalGetMutableSint64ToInt32Map().getMutableMap();
      }
      /**
       * <code>map&lt;sint64, int32&gt; sint64_to_int32_map = 6;</code>
       */
      public Builder putSint64ToInt32Map(
          long key,
          int value) {
        
        
        internalGetMutableSint64ToInt32Map().getMutableMap()
            .put(key, value);
        return this;
      }
      /**
       * <code>map&lt;sint64, int32&gt; sint64_to_int32_map = 6;</code>
       */

      public Builder putAllSint64ToInt32Map(
          java.util.Map<java.lang.Long, java.lang.Integer> values) {
        internalGetMutableSint64ToInt32Map().getMutableMap()
            .putAll(values);
        return this;
      }

      private com.google.protobuf.MapField<
          java.lang.Integer, java.lang.Integer> fixed32ToInt32Map_;
      private com.google.protobuf.MapField<java.lang.Integer, java.lang.Integer>
      internalGetFixed32ToInt32Map() {
        if (fixed32ToInt32Map_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              Fixed32ToInt32MapDefaultEntryHolder.defaultEntry);
        }
        return fixed32ToInt32Map_;
      }
      private com.google.protobuf.MapField<java.lang.Integer, java.lang.Integer>
      internalGetMutableFixed32ToInt32Map() {
        onChanged();;
        if (fixed32ToInt32Map_ == null) {
          fixed32ToInt32Map_ = com.google.protobuf.MapField.newMapField(
              Fixed32ToInt32MapDefaultEntryHolder.defaultEntry);
        }
        if (!fixed32ToInt32Map_.isMutable()) {
          fixed32ToInt32Map_ = fixed32ToInt32Map_.copy();
        }
        return fixed32ToInt32Map_;
      }

      public int getFixed32ToInt32MapCount() {
        return internalGetFixed32ToInt32Map().getMap().size();
      }
      /**
       * <code>map&lt;fixed32, int32&gt; fixed32_to_int32_map = 7;</code>
       */

      public boolean containsFixed32ToInt32Map(
          int key) {
        
        return internalGetFixed32ToInt32Map().getMap().containsKey(key);
      }
      /**
       * Use {@link #getFixed32ToInt32MapMap()} instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.Integer, java.lang.Integer> getFixed32ToInt32Map() {
        return getFixed32ToInt32MapMap();
      }
      /**
       * <code>map&lt;fixed32, int32&gt; fixed32_to_int32_map = 7;</code>
       */

      public java.util.Map<java.lang.Integer, java.lang.Integer> getFixed32ToInt32MapMap() {
        return internalGetFixed32ToInt32Map().getMap();
      }
      /**
       * <code>map&lt;fixed32, int32&gt; fixed32_to_int32_map = 7;</code>
       */

      public int getFixed32ToInt32MapOrDefault(
          int key,
          int defaultValue) {
        
        java.util.Map<java.lang.Integer, java.lang.Integer> map =
            internalGetFixed32ToInt32Map().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <code>map&lt;fixed32, int32&gt; fixed32_to_int32_map = 7;</code>
       */

      public int getFixed32ToInt32MapOrThrow(
          int key) {
        
        java.util.Map<java.lang.Integer, java.lang.Integer> map =
            internalGetFixed32ToInt32Map().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }

      public Builder clearFixed32ToInt32Map() {
        internalGetMutableFixed32ToInt32Map().getMutableMap()
            .clear();
        return this;
      }
      /**
       * <code>map&lt;fixed32, int32&gt; fixed32_to_int32_map = 7;</code>
       */

      public Builder removeFixed32ToInt32Map(
          int key) {
        
        internalGetMutableFixed32ToInt32Map().getMutableMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.Integer, java.lang.Integer>
      getMutableFixed32ToInt32Map() {
        return internalGetMutableFixed32ToInt32Map().getMutableMap();
      }
      /**
       * <code>map&lt;fixed32, int32&gt; fixed32_to_int32_map = 7;</code>
       */
      public Builder putFixed32ToInt32Map(
          int key,
          int value) {
        
        
        internalGetMutableFixed32ToInt32Map().getMutableMap()
            .put(key, value);
        return this;
      }
      /**
       * <code>map&lt;fixed32, int32&gt; fixed32_to_int32_map = 7;</code>
       */

      public Builder putAllFixed32ToInt32Map(
          java.util.Map<java.lang.Integer, java.lang.Integer> values) {
        internalGetMutableFixed32ToInt32Map().getMutableMap()
            .putAll(values);
        return this;
      }

      private com.google.protobuf.MapField<
          java.lang.Long, java.lang.Integer> fixed64ToInt32Map_;
      private com.google.protobuf.MapField<java.lang.Long, java.lang.Integer>
      internalGetFixed64ToInt32Map() {
        if (fixed64ToInt32Map_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              Fixed64ToInt32MapDefaultEntryHolder.defaultEntry);
        }
        return fixed64ToInt32Map_;
      }
      private com.google.protobuf.MapField<java.lang.Long, java.lang.Integer>
      internalGetMutableFixed64ToInt32Map() {
        onChanged();;
        if (fixed64ToInt32Map_ == null) {
          fixed64ToInt32Map_ = com.google.protobuf.MapField.newMapField(
              Fixed64ToInt32MapDefaultEntryHolder.defaultEntry);
        }
        if (!fixed64ToInt32Map_.isMutable()) {
          fixed64ToInt32Map_ = fixed64ToInt32Map_.copy();
        }
        return fixed64ToInt32Map_;
      }

      public int getFixed64ToInt32MapCount() {
        return internalGetFixed64ToInt32Map().getMap().size();
      }
      /**
       * <code>map&lt;fixed64, int32&gt; fixed64_to_int32_map = 8;</code>
       */

      public boolean containsFixed64ToInt32Map(
          long key) {
        
        return internalGetFixed64ToInt32Map().getMap().containsKey(key);
      }
      /**
       * Use {@link #getFixed64ToInt32MapMap()} instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.Long, java.lang.Integer> getFixed64ToInt32Map() {
        return getFixed64ToInt32MapMap();
      }
      /**
       * <code>map&lt;fixed64, int32&gt; fixed64_to_int32_map = 8;</code>
       */

      public java.util.Map<java.lang.Long, java.lang.Integer> getFixed64ToInt32MapMap() {
        return internalGetFixed64ToInt32Map().getMap();
      }
      /**
       * <code>map&lt;fixed64, int32&gt; fixed64_to_int32_map = 8;</code>
       */

      public int getFixed64ToInt32MapOrDefault(
          long key,
          int defaultValue) {
        
        java.util.Map<java.lang.Long, java.lang.Integer> map =
            internalGetFixed64ToInt32Map().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <code>map&lt;fixed64, int32&gt; fixed64_to_int32_map = 8;</code>
       */

      public int getFixed64ToInt32MapOrThrow(
          long key) {
        
        java.util.Map<java.lang.Long, java.lang.Integer> map =
            internalGetFixed64ToInt32Map().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }

      public Builder clearFixed64ToInt32Map() {
        internalGetMutableFixed64ToInt32Map().getMutableMap()
            .clear();
        return this;
      }
      /**
       * <code>map&lt;fixed64, int32&gt; fixed64_to_int32_map = 8;</code>
       */

      public Builder removeFixed64ToInt32Map(
          long key) {
        
        internalGetMutableFixed64ToInt32Map().getMutableMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.Long, java.lang.Integer>
      getMutableFixed64ToInt32Map() {
        return internalGetMutableFixed64ToInt32Map().getMutableMap();
      }
      /**
       * <code>map&lt;fixed64, int32&gt; fixed64_to_int32_map = 8;</code>
       */
      public Builder putFixed64ToInt32Map(
          long key,
          int value) {
        
        
        internalGetMutableFixed64ToInt32Map().getMutableMap()
            .put(key, value);
        return this;
      }
      /**
       * <code>map&lt;fixed64, int32&gt; fixed64_to_int32_map = 8;</code>
       */

      public Builder putAllFixed64ToInt32Map(
          java.util.Map<java.lang.Long, java.lang.Integer> values) {
        internalGetMutableFixed64ToInt32Map().getMutableMap()
            .putAll(values);
        return this;
      }

      private com.google.protobuf.MapField<
          java.lang.Integer, java.lang.Integer> sfixed32ToInt32Map_;
      private com.google.protobuf.MapField<java.lang.Integer, java.lang.Integer>
      internalGetSfixed32ToInt32Map() {
        if (sfixed32ToInt32Map_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              Sfixed32ToInt32MapDefaultEntryHolder.defaultEntry);
        }
        return sfixed32ToInt32Map_;
      }
      private com.google.protobuf.MapField<java.lang.Integer, java.lang.Integer>
      internalGetMutableSfixed32ToInt32Map() {
        onChanged();;
        if (sfixed32ToInt32Map_ == null) {
          sfixed32ToInt32Map_ = com.google.protobuf.MapField.newMapField(
              Sfixed32ToInt32MapDefaultEntryHolder.defaultEntry);
        }
        if (!sfixed32ToInt32Map_.isMutable()) {
          sfixed32ToInt32Map_ = sfixed32ToInt32Map_.copy();
        }
        return sfixed32ToInt32Map_;
      }

      public int getSfixed32ToInt32MapCount() {
        return internalGetSfixed32ToInt32Map().getMap().size();
      }
      /**
       * <code>map&lt;sfixed32, int32&gt; sfixed32_to_int32_map = 9;</code>
       */

      public boolean containsSfixed32ToInt32Map(
          int key) {
        
        return internalGetSfixed32ToInt32Map().getMap().containsKey(key);
      }
      /**
       * Use {@link #getSfixed32ToInt32MapMap()} instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.Integer, java.lang.Integer> getSfixed32ToInt32Map() {
        return getSfixed32ToInt32MapMap();
      }
      /**
       * <code>map&lt;sfixed32, int32&gt; sfixed32_to_int32_map = 9;</code>
       */

      public java.util.Map<java.lang.Integer, java.lang.Integer> getSfixed32ToInt32MapMap() {
        return internalGetSfixed32ToInt32Map().getMap();
      }
      /**
       * <code>map&lt;sfixed32, int32&gt; sfixed32_to_int32_map = 9;</code>
       */

      public int getSfixed32ToInt32MapOrDefault(
          int key,
          int defaultValue) {
        
        java.util.Map<java.lang.Integer, java.lang.Integer> map =
            internalGetSfixed32ToInt32Map().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <code>map&lt;sfixed32, int32&gt; sfixed32_to_int32_map = 9;</code>
       */

      public int getSfixed32ToInt32MapOrThrow(
          int key) {
        
        java.util.Map<java.lang.Integer, java.lang.Integer> map =
            internalGetSfixed32ToInt32Map().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }

      public Builder clearSfixed32ToInt32Map() {
        internalGetMutableSfixed32ToInt32Map().getMutableMap()
            .clear();
        return this;
      }
      /**
       * <code>map&lt;sfixed32, int32&gt; sfixed32_to_int32_map = 9;</code>
       */

      public Builder removeSfixed32ToInt32Map(
          int key) {
        
        internalGetMutableSfixed32ToInt32Map().getMutableMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.Integer, java.lang.Integer>
      getMutableSfixed32ToInt32Map() {
        return internalGetMutableSfixed32ToInt32Map().getMutableMap();
      }
      /**
       * <code>map&lt;sfixed32, int32&gt; sfixed32_to_int32_map = 9;</code>
       */
      public Builder putSfixed32ToInt32Map(
          int key,
          int value) {
        
        
        internalGetMutableSfixed32ToInt32Map().getMutableMap()
            .put(key, value);
        return this;
      }
      /**
       * <code>map&lt;sfixed32, int32&gt; sfixed32_to_int32_map = 9;</code>
       */

      public Builder putAllSfixed32ToInt32Map(
          java.util.Map<java.lang.Integer, java.lang.Integer> values) {
        internalGetMutableSfixed32ToInt32Map().getMutableMap()
            .putAll(values);
        return this;
      }

      private com.google.protobuf.MapField<
          java.lang.Long, java.lang.Integer> sfixed64ToInt32Map_;
      private com.google.protobuf.MapField<java.lang.Long, java.lang.Integer>
      internalGetSfixed64ToInt32Map() {
        if (sfixed64ToInt32Map_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              Sfixed64ToInt32MapDefaultEntryHolder.defaultEntry);
        }
        return sfixed64ToInt32Map_;
      }
      private com.google.protobuf.MapField<java.lang.Long, java.lang.Integer>
      internalGetMutableSfixed64ToInt32Map() {
        onChanged();;
        if (sfixed64ToInt32Map_ == null) {
          sfixed64ToInt32Map_ = com.google.protobuf.MapField.newMapField(
              Sfixed64ToInt32MapDefaultEntryHolder.defaultEntry);
        }
        if (!sfixed64ToInt32Map_.isMutable()) {
          sfixed64ToInt32Map_ = sfixed64ToInt32Map_.copy();
        }
        return sfixed64ToInt32Map_;
      }

      public int getSfixed64ToInt32MapCount() {
        return internalGetSfixed64ToInt32Map().getMap().size();
      }
      /**
       * <code>map&lt;sfixed64, int32&gt; sfixed64_to_int32_map = 10;</code>
       */

      public boolean containsSfixed64ToInt32Map(
          long key) {
        
        return internalGetSfixed64ToInt32Map().getMap().containsKey(key);
      }
      /**
       * Use {@link #getSfixed64ToInt32MapMap()} instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.Long, java.lang.Integer> getSfixed64ToInt32Map() {
        return getSfixed64ToInt32MapMap();
      }
      /**
       * <code>map&lt;sfixed64, int32&gt; sfixed64_to_int32_map = 10;</code>
       */

      public java.util.Map<java.lang.Long, java.lang.Integer> getSfixed64ToInt32MapMap() {
        return internalGetSfixed64ToInt32Map().getMap();
      }
      /**
       * <code>map&lt;sfixed64, int32&gt; sfixed64_to_int32_map = 10;</code>
       */

      public int getSfixed64ToInt32MapOrDefault(
          long key,
          int defaultValue) {
        
        java.util.Map<java.lang.Long, java.lang.Integer> map =
            internalGetSfixed64ToInt32Map().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <code>map&lt;sfixed64, int32&gt; sfixed64_to_int32_map = 10;</code>
       */

      public int getSfixed64ToInt32MapOrThrow(
          long key) {
        
        java.util.Map<java.lang.Long, java.lang.Integer> map =
            internalGetSfixed64ToInt32Map().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }

      public Builder clearSfixed64ToInt32Map() {
        internalGetMutableSfixed64ToInt32Map().getMutableMap()
            .clear();
        return this;
      }
      /**
       * <code>map&lt;sfixed64, int32&gt; sfixed64_to_int32_map = 10;</code>
       */

      public Builder removeSfixed64ToInt32Map(
          long key) {
        
        internalGetMutableSfixed64ToInt32Map().getMutableMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.Long, java.lang.Integer>
      getMutableSfixed64ToInt32Map() {
        return internalGetMutableSfixed64ToInt32Map().getMutableMap();
      }
      /**
       * <code>map&lt;sfixed64, int32&gt; sfixed64_to_int32_map = 10;</code>
       */
      public Builder putSfixed64ToInt32Map(
          long key,
          int value) {
        
        
        internalGetMutableSfixed64ToInt32Map().getMutableMap()
            .put(key, value);
        return this;
      }
      /**
       * <code>map&lt;sfixed64, int32&gt; sfixed64_to_int32_map = 10;</code>
       */

      public Builder putAllSfixed64ToInt32Map(
          java.util.Map<java.lang.Long, java.lang.Integer> values) {
        internalGetMutableSfixed64ToInt32Map().getMutableMap()
            .putAll(values);
        return this;
      }

      private com.google.protobuf.MapField<
          java.lang.Boolean, java.lang.Integer> boolToInt32Map_;
      private com.google.protobuf.MapField<java.lang.Boolean, java.lang.Integer>
      internalGetBoolToInt32Map() {
        if (boolToInt32Map_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              BoolToInt32MapDefaultEntryHolder.defaultEntry);
        }
        return boolToInt32Map_;
      }
      private com.google.protobuf.MapField<java.lang.Boolean, java.lang.Integer>
      internalGetMutableBoolToInt32Map() {
        onChanged();;
        if (boolToInt32Map_ == null) {
          boolToInt32Map_ = com.google.protobuf.MapField.newMapField(
              BoolToInt32MapDefaultEntryHolder.defaultEntry);
        }
        if (!boolToInt32Map_.isMutable()) {
          boolToInt32Map_ = boolToInt32Map_.copy();
        }
        return boolToInt32Map_;
      }

      public int getBoolToInt32MapCount() {
        return internalGetBoolToInt32Map().getMap().size();
      }
      /**
       * <code>map&lt;bool, int32&gt; bool_to_int32_map = 11;</code>
       */

      public boolean containsBoolToInt32Map(
          boolean key) {
        
        return internalGetBoolToInt32Map().getMap().containsKey(key);
      }
      /**
       * Use {@link #getBoolToInt32MapMap()} instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.Boolean, java.lang.Integer> getBoolToInt32Map() {
        return getBoolToInt32MapMap();
      }
      /**
       * <code>map&lt;bool, int32&gt; bool_to_int32_map = 11;</code>
       */

      public java.util.Map<java.lang.Boolean, java.lang.Integer> getBoolToInt32MapMap() {
        return internalGetBoolToInt32Map().getMap();
      }
      /**
       * <code>map&lt;bool, int32&gt; bool_to_int32_map = 11;</code>
       */

      public int getBoolToInt32MapOrDefault(
          boolean key,
          int defaultValue) {
        
        java.util.Map<java.lang.Boolean, java.lang.Integer> map =
            internalGetBoolToInt32Map().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <code>map&lt;bool, int32&gt; bool_to_int32_map = 11;</code>
       */

      public int getBoolToInt32MapOrThrow(
          boolean key) {
        
        java.util.Map<java.lang.Boolean, java.lang.Integer> map =
            internalGetBoolToInt32Map().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }

      public Builder clearBoolToInt32Map() {
        internalGetMutableBoolToInt32Map().getMutableMap()
            .clear();
        return this;
      }
      /**
       * <code>map&lt;bool, int32&gt; bool_to_int32_map = 11;</code>
       */

      public Builder removeBoolToInt32Map(
          boolean key) {
        
        internalGetMutableBoolToInt32Map().getMutableMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.Boolean, java.lang.Integer>
      getMutableBoolToInt32Map() {
        return internalGetMutableBoolToInt32Map().getMutableMap();
      }
      /**
       * <code>map&lt;bool, int32&gt; bool_to_int32_map = 11;</code>
       */
      public Builder putBoolToInt32Map(
          boolean key,
          int value) {
        
        
        internalGetMutableBoolToInt32Map().getMutableMap()
            .put(key, value);
        return this;
      }
      /**
       * <code>map&lt;bool, int32&gt; bool_to_int32_map = 11;</code>
       */

      public Builder putAllBoolToInt32Map(
          java.util.Map<java.lang.Boolean, java.lang.Integer> values) {
        internalGetMutableBoolToInt32Map().getMutableMap()
            .putAll(values);
        return this;
      }

      private com.google.protobuf.MapField<
          java.lang.String, java.lang.Integer> stringToInt32Map_;
      private com.google.protobuf.MapField<java.lang.String, java.lang.Integer>
      internalGetStringToInt32Map() {
        if (stringToInt32Map_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              StringToInt32MapDefaultEntryHolder.defaultEntry);
        }
        return stringToInt32Map_;
      }
      private com.google.protobuf.MapField<java.lang.String, java.lang.Integer>
      internalGetMutableStringToInt32Map() {
        onChanged();;
        if (stringToInt32Map_ == null) {
          stringToInt32Map_ = com.google.protobuf.MapField.newMapField(
              StringToInt32MapDefaultEntryHolder.defaultEntry);
        }
        if (!stringToInt32Map_.isMutable()) {
          stringToInt32Map_ = stringToInt32Map_.copy();
        }
        return stringToInt32Map_;
      }

      public int getStringToInt32MapCount() {
        return internalGetStringToInt32Map().getMap().size();
      }
      /**
       * <code>map&lt;string, int32&gt; string_to_int32_map = 12;</code>
       */

      public boolean containsStringToInt32Map(
          java.lang.String key) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        return internalGetStringToInt32Map().getMap().containsKey(key);
      }
      /**
       * Use {@link #getStringToInt32MapMap()} instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, java.lang.Integer> getStringToInt32Map() {
        return getStringToInt32MapMap();
      }
      /**
       * <code>map&lt;string, int32&gt; string_to_int32_map = 12;</code>
       */

      public java.util.Map<java.lang.String, java.lang.Integer> getStringToInt32MapMap() {
        return internalGetStringToInt32Map().getMap();
      }
      /**
       * <code>map&lt;string, int32&gt; string_to_int32_map = 12;</code>
       */

      public int getStringToInt32MapOrDefault(
          java.lang.String key,
          int defaultValue) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        java.util.Map<java.lang.String, java.lang.Integer> map =
            internalGetStringToInt32Map().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <code>map&lt;string, int32&gt; string_to_int32_map = 12;</code>
       */

      public int getStringToInt32MapOrThrow(
          java.lang.String key) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        java.util.Map<java.lang.String, java.lang.Integer> map =
            internalGetStringToInt32Map().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }

      public Builder clearStringToInt32Map() {
        internalGetMutableStringToInt32Map().getMutableMap()
            .clear();
        return this;
      }
      /**
       * <code>map&lt;string, int32&gt; string_to_int32_map = 12;</code>
       */

      public Builder removeStringToInt32Map(
          java.lang.String key) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        internalGetMutableStringToInt32Map().getMutableMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, java.lang.Integer>
      getMutableStringToInt32Map() {
        return internalGetMutableStringToInt32Map().getMutableMap();
      }
      /**
       * <code>map&lt;string, int32&gt; string_to_int32_map = 12;</code>
       */
      public Builder putStringToInt32Map(
          java.lang.String key,
          int value) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        
        internalGetMutableStringToInt32Map().getMutableMap()
            .put(key, value);
        return this;
      }
      /**
       * <code>map&lt;string, int32&gt; string_to_int32_map = 12;</code>
       */

      public Builder putAllStringToInt32Map(
          java.util.Map<java.lang.String, java.lang.Integer> values) {
        internalGetMutableStringToInt32Map().getMutableMap()
            .putAll(values);
        return this;
      }

      private com.google.protobuf.MapField<
          java.lang.Integer, java.lang.Long> int32ToInt64Map_;
      private com.google.protobuf.MapField<java.lang.Integer, java.lang.Long>
      internalGetInt32ToInt64Map() {
        if (int32ToInt64Map_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              Int32ToInt64MapDefaultEntryHolder.defaultEntry);
        }
        return int32ToInt64Map_;
      }
      private com.google.protobuf.MapField<java.lang.Integer, java.lang.Long>
      internalGetMutableInt32ToInt64Map() {
        onChanged();;
        if (int32ToInt64Map_ == null) {
          int32ToInt64Map_ = com.google.protobuf.MapField.newMapField(
              Int32ToInt64MapDefaultEntryHolder.defaultEntry);
        }
        if (!int32ToInt64Map_.isMutable()) {
          int32ToInt64Map_ = int32ToInt64Map_.copy();
        }
        return int32ToInt64Map_;
      }

      public int getInt32ToInt64MapCount() {
        return internalGetInt32ToInt64Map().getMap().size();
      }
      /**
       * <code>map&lt;int32, int64&gt; int32_to_int64_map = 101;</code>
       */

      public boolean containsInt32ToInt64Map(
          int key) {
        
        return internalGetInt32ToInt64Map().getMap().containsKey(key);
      }
      /**
       * Use {@link #getInt32ToInt64MapMap()} instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.Integer, java.lang.Long> getInt32ToInt64Map() {
        return getInt32ToInt64MapMap();
      }
      /**
       * <code>map&lt;int32, int64&gt; int32_to_int64_map = 101;</code>
       */

      public java.util.Map<java.lang.Integer, java.lang.Long> getInt32ToInt64MapMap() {
        return internalGetInt32ToInt64Map().getMap();
      }
      /**
       * <code>map&lt;int32, int64&gt; int32_to_int64_map = 101;</code>
       */

      public long getInt32ToInt64MapOrDefault(
          int key,
          long defaultValue) {
        
        java.util.Map<java.lang.Integer, java.lang.Long> map =
            internalGetInt32ToInt64Map().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <code>map&lt;int32, int64&gt; int32_to_int64_map = 101;</code>
       */

      public long getInt32ToInt64MapOrThrow(
          int key) {
        
        java.util.Map<java.lang.Integer, java.lang.Long> map =
            internalGetInt32ToInt64Map().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }

      public Builder clearInt32ToInt64Map() {
        internalGetMutableInt32ToInt64Map().getMutableMap()
            .clear();
        return this;
      }
      /**
       * <code>map&lt;int32, int64&gt; int32_to_int64_map = 101;</code>
       */

      public Builder removeInt32ToInt64Map(
          int key) {
        
        internalGetMutableInt32ToInt64Map().getMutableMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.Integer, java.lang.Long>
      getMutableInt32ToInt64Map() {
        return internalGetMutableInt32ToInt64Map().getMutableMap();
      }
      /**
       * <code>map&lt;int32, int64&gt; int32_to_int64_map = 101;</code>
       */
      public Builder putInt32ToInt64Map(
          int key,
          long value) {
        
        
        internalGetMutableInt32ToInt64Map().getMutableMap()
            .put(key, value);
        return this;
      }
      /**
       * <code>map&lt;int32, int64&gt; int32_to_int64_map = 101;</code>
       */

      public Builder putAllInt32ToInt64Map(
          java.util.Map<java.lang.Integer, java.lang.Long> values) {
        internalGetMutableInt32ToInt64Map().getMutableMap()
            .putAll(values);
        return this;
      }

      private com.google.protobuf.MapField<
          java.lang.Integer, java.lang.Integer> int32ToUint32Map_;
      private com.google.protobuf.MapField<java.lang.Integer, java.lang.Integer>
      internalGetInt32ToUint32Map() {
        if (int32ToUint32Map_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              Int32ToUint32MapDefaultEntryHolder.defaultEntry);
        }
        return int32ToUint32Map_;
      }
      private com.google.protobuf.MapField<java.lang.Integer, java.lang.Integer>
      internalGetMutableInt32ToUint32Map() {
        onChanged();;
        if (int32ToUint32Map_ == null) {
          int32ToUint32Map_ = com.google.protobuf.MapField.newMapField(
              Int32ToUint32MapDefaultEntryHolder.defaultEntry);
        }
        if (!int32ToUint32Map_.isMutable()) {
          int32ToUint32Map_ = int32ToUint32Map_.copy();
        }
        return int32ToUint32Map_;
      }

      public int getInt32ToUint32MapCount() {
        return internalGetInt32ToUint32Map().getMap().size();
      }
      /**
       * <code>map&lt;int32, uint32&gt; int32_to_uint32_map = 102;</code>
       */

      public boolean containsInt32ToUint32Map(
          int key) {
        
        return internalGetInt32ToUint32Map().getMap().containsKey(key);
      }
      /**
       * Use {@link #getInt32ToUint32MapMap()} instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.Integer, java.lang.Integer> getInt32ToUint32Map() {
        return getInt32ToUint32MapMap();
      }
      /**
       * <code>map&lt;int32, uint32&gt; int32_to_uint32_map = 102;</code>
       */

      public java.util.Map<java.lang.Integer, java.lang.Integer> getInt32ToUint32MapMap() {
        return internalGetInt32ToUint32Map().getMap();
      }
      /**
       * <code>map&lt;int32, uint32&gt; int32_to_uint32_map = 102;</code>
       */

      public int getInt32ToUint32MapOrDefault(
          int key,
          int defaultValue) {
        
        java.util.Map<java.lang.Integer, java.lang.Integer> map =
            internalGetInt32ToUint32Map().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <code>map&lt;int32, uint32&gt; int32_to_uint32_map = 102;</code>
       */

      public int getInt32ToUint32MapOrThrow(
          int key) {
        
        java.util.Map<java.lang.Integer, java.lang.Integer> map =
            internalGetInt32ToUint32Map().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }

      public Builder clearInt32ToUint32Map() {
        internalGetMutableInt32ToUint32Map().getMutableMap()
            .clear();
        return this;
      }
      /**
       * <code>map&lt;int32, uint32&gt; int32_to_uint32_map = 102;</code>
       */

      public Builder removeInt32ToUint32Map(
          int key) {
        
        internalGetMutableInt32ToUint32Map().getMutableMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.Integer, java.lang.Integer>
      getMutableInt32ToUint32Map() {
        return internalGetMutableInt32ToUint32Map().getMutableMap();
      }
      /**
       * <code>map&lt;int32, uint32&gt; int32_to_uint32_map = 102;</code>
       */
      public Builder putInt32ToUint32Map(
          int key,
          int value) {
        
        
        internalGetMutableInt32ToUint32Map().getMutableMap()
            .put(key, value);
        return this;
      }
      /**
       * <code>map&lt;int32, uint32&gt; int32_to_uint32_map = 102;</code>
       */

      public Builder putAllInt32ToUint32Map(
          java.util.Map<java.lang.Integer, java.lang.Integer> values) {
        internalGetMutableInt32ToUint32Map().getMutableMap()
            .putAll(values);
        return this;
      }

      private com.google.protobuf.MapField<
          java.lang.Integer, java.lang.Long> int32ToUint64Map_;
      private com.google.protobuf.MapField<java.lang.Integer, java.lang.Long>
      internalGetInt32ToUint64Map() {
        if (int32ToUint64Map_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              Int32ToUint64MapDefaultEntryHolder.defaultEntry);
        }
        return int32ToUint64Map_;
      }
      private com.google.protobuf.MapField<java.lang.Integer, java.lang.Long>
      internalGetMutableInt32ToUint64Map() {
        onChanged();;
        if (int32ToUint64Map_ == null) {
          int32ToUint64Map_ = com.google.protobuf.MapField.newMapField(
              Int32ToUint64MapDefaultEntryHolder.defaultEntry);
        }
        if (!int32ToUint64Map_.isMutable()) {
          int32ToUint64Map_ = int32ToUint64Map_.copy();
        }
        return int32ToUint64Map_;
      }

      public int getInt32ToUint64MapCount() {
        return internalGetInt32ToUint64Map().getMap().size();
      }
      /**
       * <code>map&lt;int32, uint64&gt; int32_to_uint64_map = 103;</code>
       */

      public boolean containsInt32ToUint64Map(
          int key) {
        
        return internalGetInt32ToUint64Map().getMap().containsKey(key);
      }
      /**
       * Use {@link #getInt32ToUint64MapMap()} instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.Integer, java.lang.Long> getInt32ToUint64Map() {
        return getInt32ToUint64MapMap();
      }
      /**
       * <code>map&lt;int32, uint64&gt; int32_to_uint64_map = 103;</code>
       */

      public java.util.Map<java.lang.Integer, java.lang.Long> getInt32ToUint64MapMap() {
        return internalGetInt32ToUint64Map().getMap();
      }
      /**
       * <code>map&lt;int32, uint64&gt; int32_to_uint64_map = 103;</code>
       */

      public long getInt32ToUint64MapOrDefault(
          int key,
          long defaultValue) {
        
        java.util.Map<java.lang.Integer, java.lang.Long> map =
            internalGetInt32ToUint64Map().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <code>map&lt;int32, uint64&gt; int32_to_uint64_map = 103;</code>
       */

      public long getInt32ToUint64MapOrThrow(
          int key) {
        
        java.util.Map<java.lang.Integer, java.lang.Long> map =
            internalGetInt32ToUint64Map().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }

      public Builder clearInt32ToUint64Map() {
        internalGetMutableInt32ToUint64Map().getMutableMap()
            .clear();
        return this;
      }
      /**
       * <code>map&lt;int32, uint64&gt; int32_to_uint64_map = 103;</code>
       */

      public Builder removeInt32ToUint64Map(
          int key) {
        
        internalGetMutableInt32ToUint64Map().getMutableMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.Integer, java.lang.Long>
      getMutableInt32ToUint64Map() {
        return internalGetMutableInt32ToUint64Map().getMutableMap();
      }
      /**
       * <code>map&lt;int32, uint64&gt; int32_to_uint64_map = 103;</code>
       */
      public Builder putInt32ToUint64Map(
          int key,
          long value) {
        
        
        internalGetMutableInt32ToUint64Map().getMutableMap()
            .put(key, value);
        return this;
      }
      /**
       * <code>map&lt;int32, uint64&gt; int32_to_uint64_map = 103;</code>
       */

      public Builder putAllInt32ToUint64Map(
          java.util.Map<java.lang.Integer, java.lang.Long> values) {
        internalGetMutableInt32ToUint64Map().getMutableMap()
            .putAll(values);
        return this;
      }

      private com.google.protobuf.MapField<
          java.lang.Integer, java.lang.Integer> int32ToSint32Map_;
      private com.google.protobuf.MapField<java.lang.Integer, java.lang.Integer>
      internalGetInt32ToSint32Map() {
        if (int32ToSint32Map_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              Int32ToSint32MapDefaultEntryHolder.defaultEntry);
        }
        return int32ToSint32Map_;
      }
      private com.google.protobuf.MapField<java.lang.Integer, java.lang.Integer>
      internalGetMutableInt32ToSint32Map() {
        onChanged();;
        if (int32ToSint32Map_ == null) {
          int32ToSint32Map_ = com.google.protobuf.MapField.newMapField(
              Int32ToSint32MapDefaultEntryHolder.defaultEntry);
        }
        if (!int32ToSint32Map_.isMutable()) {
          int32ToSint32Map_ = int32ToSint32Map_.copy();
        }
        return int32ToSint32Map_;
      }

      public int getInt32ToSint32MapCount() {
        return internalGetInt32ToSint32Map().getMap().size();
      }
      /**
       * <code>map&lt;int32, sint32&gt; int32_to_sint32_map = 104;</code>
       */

      public boolean containsInt32ToSint32Map(
          int key) {
        
        return internalGetInt32ToSint32Map().getMap().containsKey(key);
      }
      /**
       * Use {@link #getInt32ToSint32MapMap()} instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.Integer, java.lang.Integer> getInt32ToSint32Map() {
        return getInt32ToSint32MapMap();
      }
      /**
       * <code>map&lt;int32, sint32&gt; int32_to_sint32_map = 104;</code>
       */

      public java.util.Map<java.lang.Integer, java.lang.Integer> getInt32ToSint32MapMap() {
        return internalGetInt32ToSint32Map().getMap();
      }
      /**
       * <code>map&lt;int32, sint32&gt; int32_to_sint32_map = 104;</code>
       */

      public int getInt32ToSint32MapOrDefault(
          int key,
          int defaultValue) {
        
        java.util.Map<java.lang.Integer, java.lang.Integer> map =
            internalGetInt32ToSint32Map().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <code>map&lt;int32, sint32&gt; int32_to_sint32_map = 104;</code>
       */

      public int getInt32ToSint32MapOrThrow(
          int key) {
        
        java.util.Map<java.lang.Integer, java.lang.Integer> map =
            internalGetInt32ToSint32Map().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }

      public Builder clearInt32ToSint32Map() {
        internalGetMutableInt32ToSint32Map().getMutableMap()
            .clear();
        return this;
      }
      /**
       * <code>map&lt;int32, sint32&gt; int32_to_sint32_map = 104;</code>
       */

      public Builder removeInt32ToSint32Map(
          int key) {
        
        internalGetMutableInt32ToSint32Map().getMutableMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.Integer, java.lang.Integer>
      getMutableInt32ToSint32Map() {
        return internalGetMutableInt32ToSint32Map().getMutableMap();
      }
      /**
       * <code>map&lt;int32, sint32&gt; int32_to_sint32_map = 104;</code>
       */
      public Builder putInt32ToSint32Map(
          int key,
          int value) {
        
        
        internalGetMutableInt32ToSint32Map().getMutableMap()
            .put(key, value);
        return this;
      }
      /**
       * <code>map&lt;int32, sint32&gt; int32_to_sint32_map = 104;</code>
       */

      public Builder putAllInt32ToSint32Map(
          java.util.Map<java.lang.Integer, java.lang.Integer> values) {
        internalGetMutableInt32ToSint32Map().getMutableMap()
            .putAll(values);
        return this;
      }

      private com.google.protobuf.MapField<
          java.lang.Integer, java.lang.Long> int32ToSint64Map_;
      private com.google.protobuf.MapField<java.lang.Integer, java.lang.Long>
      internalGetInt32ToSint64Map() {
        if (int32ToSint64Map_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              Int32ToSint64MapDefaultEntryHolder.defaultEntry);
        }
        return int32ToSint64Map_;
      }
      private com.google.protobuf.MapField<java.lang.Integer, java.lang.Long>
      internalGetMutableInt32ToSint64Map() {
        onChanged();;
        if (int32ToSint64Map_ == null) {
          int32ToSint64Map_ = com.google.protobuf.MapField.newMapField(
              Int32ToSint64MapDefaultEntryHolder.defaultEntry);
        }
        if (!int32ToSint64Map_.isMutable()) {
          int32ToSint64Map_ = int32ToSint64Map_.copy();
        }
        return int32ToSint64Map_;
      }

      public int getInt32ToSint64MapCount() {
        return internalGetInt32ToSint64Map().getMap().size();
      }
      /**
       * <code>map&lt;int32, sint64&gt; int32_to_sint64_map = 105;</code>
       */

      public boolean containsInt32ToSint64Map(
          int key) {
        
        return internalGetInt32ToSint64Map().getMap().containsKey(key);
      }
      /**
       * Use {@link #getInt32ToSint64MapMap()} instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.Integer, java.lang.Long> getInt32ToSint64Map() {
        return getInt32ToSint64MapMap();
      }
      /**
       * <code>map&lt;int32, sint64&gt; int32_to_sint64_map = 105;</code>
       */

      public java.util.Map<java.lang.Integer, java.lang.Long> getInt32ToSint64MapMap() {
        return internalGetInt32ToSint64Map().getMap();
      }
      /**
       * <code>map&lt;int32, sint64&gt; int32_to_sint64_map = 105;</code>
       */

      public long getInt32ToSint64MapOrDefault(
          int key,
          long defaultValue) {
        
        java.util.Map<java.lang.Integer, java.lang.Long> map =
            internalGetInt32ToSint64Map().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <code>map&lt;int32, sint64&gt; int32_to_sint64_map = 105;</code>
       */

      public long getInt32ToSint64MapOrThrow(
          int key) {
        
        java.util.Map<java.lang.Integer, java.lang.Long> map =
            internalGetInt32ToSint64Map().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }

      public Builder clearInt32ToSint64Map() {
        internalGetMutableInt32ToSint64Map().getMutableMap()
            .clear();
        return this;
      }
      /**
       * <code>map&lt;int32, sint64&gt; int32_to_sint64_map = 105;</code>
       */

      public Builder removeInt32ToSint64Map(
          int key) {
        
        internalGetMutableInt32ToSint64Map().getMutableMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.Integer, java.lang.Long>
      getMutableInt32ToSint64Map() {
        return internalGetMutableInt32ToSint64Map().getMutableMap();
      }
      /**
       * <code>map&lt;int32, sint64&gt; int32_to_sint64_map = 105;</code>
       */
      public Builder putInt32ToSint64Map(
          int key,
          long value) {
        
        
        internalGetMutableInt32ToSint64Map().getMutableMap()
            .put(key, value);
        return this;
      }
      /**
       * <code>map&lt;int32, sint64&gt; int32_to_sint64_map = 105;</code>
       */

      public Builder putAllInt32ToSint64Map(
          java.util.Map<java.lang.Integer, java.lang.Long> values) {
        internalGetMutableInt32ToSint64Map().getMutableMap()
            .putAll(values);
        return this;
      }

      private com.google.protobuf.MapField<
          java.lang.Integer, java.lang.Integer> int32ToFixed32Map_;
      private com.google.protobuf.MapField<java.lang.Integer, java.lang.Integer>
      internalGetInt32ToFixed32Map() {
        if (int32ToFixed32Map_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              Int32ToFixed32MapDefaultEntryHolder.defaultEntry);
        }
        return int32ToFixed32Map_;
      }
      private com.google.protobuf.MapField<java.lang.Integer, java.lang.Integer>
      internalGetMutableInt32ToFixed32Map() {
        onChanged();;
        if (int32ToFixed32Map_ == null) {
          int32ToFixed32Map_ = com.google.protobuf.MapField.newMapField(
              Int32ToFixed32MapDefaultEntryHolder.defaultEntry);
        }
        if (!int32ToFixed32Map_.isMutable()) {
          int32ToFixed32Map_ = int32ToFixed32Map_.copy();
        }
        return int32ToFixed32Map_;
      }

      public int getInt32ToFixed32MapCount() {
        return internalGetInt32ToFixed32Map().getMap().size();
      }
      /**
       * <code>map&lt;int32, fixed32&gt; int32_to_fixed32_map = 106;</code>
       */

      public boolean containsInt32ToFixed32Map(
          int key) {
        
        return internalGetInt32ToFixed32Map().getMap().containsKey(key);
      }
      /**
       * Use {@link #getInt32ToFixed32MapMap()} instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.Integer, java.lang.Integer> getInt32ToFixed32Map() {
        return getInt32ToFixed32MapMap();
      }
      /**
       * <code>map&lt;int32, fixed32&gt; int32_to_fixed32_map = 106;</code>
       */

      public java.util.Map<java.lang.Integer, java.lang.Integer> getInt32ToFixed32MapMap() {
        return internalGetInt32ToFixed32Map().getMap();
      }
      /**
       * <code>map&lt;int32, fixed32&gt; int32_to_fixed32_map = 106;</code>
       */

      public int getInt32ToFixed32MapOrDefault(
          int key,
          int defaultValue) {
        
        java.util.Map<java.lang.Integer, java.lang.Integer> map =
            internalGetInt32ToFixed32Map().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <code>map&lt;int32, fixed32&gt; int32_to_fixed32_map = 106;</code>
       */

      public int getInt32ToFixed32MapOrThrow(
          int key) {
        
        java.util.Map<java.lang.Integer, java.lang.Integer> map =
            internalGetInt32ToFixed32Map().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }

      public Builder clearInt32ToFixed32Map() {
        internalGetMutableInt32ToFixed32Map().getMutableMap()
            .clear();
        return this;
      }
      /**
       * <code>map&lt;int32, fixed32&gt; int32_to_fixed32_map = 106;</code>
       */

      public Builder removeInt32ToFixed32Map(
          int key) {
        
        internalGetMutableInt32ToFixed32Map().getMutableMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.Integer, java.lang.Integer>
      getMutableInt32ToFixed32Map() {
        return internalGetMutableInt32ToFixed32Map().getMutableMap();
      }
      /**
       * <code>map&lt;int32, fixed32&gt; int32_to_fixed32_map = 106;</code>
       */
      public Builder putInt32ToFixed32Map(
          int key,
          int value) {
        
        
        internalGetMutableInt32ToFixed32Map().getMutableMap()
            .put(key, value);
        return this;
      }
      /**
       * <code>map&lt;int32, fixed32&gt; int32_to_fixed32_map = 106;</code>
       */

      public Builder putAllInt32ToFixed32Map(
          java.util.Map<java.lang.Integer, java.lang.Integer> values) {
        internalGetMutableInt32ToFixed32Map().getMutableMap()
            .putAll(values);
        return this;
      }

      private com.google.protobuf.MapField<
          java.lang.Integer, java.lang.Long> int32ToFixed64Map_;
      private com.google.protobuf.MapField<java.lang.Integer, java.lang.Long>
      internalGetInt32ToFixed64Map() {
        if (int32ToFixed64Map_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              Int32ToFixed64MapDefaultEntryHolder.defaultEntry);
        }
        return int32ToFixed64Map_;
      }
      private com.google.protobuf.MapField<java.lang.Integer, java.lang.Long>
      internalGetMutableInt32ToFixed64Map() {
        onChanged();;
        if (int32ToFixed64Map_ == null) {
          int32ToFixed64Map_ = com.google.protobuf.MapField.newMapField(
              Int32ToFixed64MapDefaultEntryHolder.defaultEntry);
        }
        if (!int32ToFixed64Map_.isMutable()) {
          int32ToFixed64Map_ = int32ToFixed64Map_.copy();
        }
        return int32ToFixed64Map_;
      }

      public int getInt32ToFixed64MapCount() {
        return internalGetInt32ToFixed64Map().getMap().size();
      }
      /**
       * <code>map&lt;int32, fixed64&gt; int32_to_fixed64_map = 107;</code>
       */

      public boolean containsInt32ToFixed64Map(
          int key) {
        
        return internalGetInt32ToFixed64Map().getMap().containsKey(key);
      }
      /**
       * Use {@link #getInt32ToFixed64MapMap()} instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.Integer, java.lang.Long> getInt32ToFixed64Map() {
        return getInt32ToFixed64MapMap();
      }
      /**
       * <code>map&lt;int32, fixed64&gt; int32_to_fixed64_map = 107;</code>
       */

      public java.util.Map<java.lang.Integer, java.lang.Long> getInt32ToFixed64MapMap() {
        return internalGetInt32ToFixed64Map().getMap();
      }
      /**
       * <code>map&lt;int32, fixed64&gt; int32_to_fixed64_map = 107;</code>
       */

      public long getInt32ToFixed64MapOrDefault(
          int key,
          long defaultValue) {
        
        java.util.Map<java.lang.Integer, java.lang.Long> map =
            internalGetInt32ToFixed64Map().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <code>map&lt;int32, fixed64&gt; int32_to_fixed64_map = 107;</code>
       */

      public long getInt32ToFixed64MapOrThrow(
          int key) {
        
        java.util.Map<java.lang.Integer, java.lang.Long> map =
            internalGetInt32ToFixed64Map().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }

      public Builder clearInt32ToFixed64Map() {
        internalGetMutableInt32ToFixed64Map().getMutableMap()
            .clear();
        return this;
      }
      /**
       * <code>map&lt;int32, fixed64&gt; int32_to_fixed64_map = 107;</code>
       */

      public Builder removeInt32ToFixed64Map(
          int key) {
        
        internalGetMutableInt32ToFixed64Map().getMutableMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.Integer, java.lang.Long>
      getMutableInt32ToFixed64Map() {
        return internalGetMutableInt32ToFixed64Map().getMutableMap();
      }
      /**
       * <code>map&lt;int32, fixed64&gt; int32_to_fixed64_map = 107;</code>
       */
      public Builder putInt32ToFixed64Map(
          int key,
          long value) {
        
        
        internalGetMutableInt32ToFixed64Map().getMutableMap()
            .put(key, value);
        return this;
      }
      /**
       * <code>map&lt;int32, fixed64&gt; int32_to_fixed64_map = 107;</code>
       */

      public Builder putAllInt32ToFixed64Map(
          java.util.Map<java.lang.Integer, java.lang.Long> values) {
        internalGetMutableInt32ToFixed64Map().getMutableMap()
            .putAll(values);
        return this;
      }

      private com.google.protobuf.MapField<
          java.lang.Integer, java.lang.Integer> int32ToSfixed32Map_;
      private com.google.protobuf.MapField<java.lang.Integer, java.lang.Integer>
      internalGetInt32ToSfixed32Map() {
        if (int32ToSfixed32Map_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              Int32ToSfixed32MapDefaultEntryHolder.defaultEntry);
        }
        return int32ToSfixed32Map_;
      }
      private com.google.protobuf.MapField<java.lang.Integer, java.lang.Integer>
      internalGetMutableInt32ToSfixed32Map() {
        onChanged();;
        if (int32ToSfixed32Map_ == null) {
          int32ToSfixed32Map_ = com.google.protobuf.MapField.newMapField(
              Int32ToSfixed32MapDefaultEntryHolder.defaultEntry);
        }
        if (!int32ToSfixed32Map_.isMutable()) {
          int32ToSfixed32Map_ = int32ToSfixed32Map_.copy();
        }
        return int32ToSfixed32Map_;
      }

      public int getInt32ToSfixed32MapCount() {
        return internalGetInt32ToSfixed32Map().getMap().size();
      }
      /**
       * <code>map&lt;int32, sfixed32&gt; int32_to_sfixed32_map = 108;</code>
       */

      public boolean containsInt32ToSfixed32Map(
          int key) {
        
        return internalGetInt32ToSfixed32Map().getMap().containsKey(key);
      }
      /**
       * Use {@link #getInt32ToSfixed32MapMap()} instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.Integer, java.lang.Integer> getInt32ToSfixed32Map() {
        return getInt32ToSfixed32MapMap();
      }
      /**
       * <code>map&lt;int32, sfixed32&gt; int32_to_sfixed32_map = 108;</code>
       */

      public java.util.Map<java.lang.Integer, java.lang.Integer> getInt32ToSfixed32MapMap() {
        return internalGetInt32ToSfixed32Map().getMap();
      }
      /**
       * <code>map&lt;int32, sfixed32&gt; int32_to_sfixed32_map = 108;</code>
       */

      public int getInt32ToSfixed32MapOrDefault(
          int key,
          int defaultValue) {
        
        java.util.Map<java.lang.Integer, java.lang.Integer> map =
            internalGetInt32ToSfixed32Map().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <code>map&lt;int32, sfixed32&gt; int32_to_sfixed32_map = 108;</code>
       */

      public int getInt32ToSfixed32MapOrThrow(
          int key) {
        
        java.util.Map<java.lang.Integer, java.lang.Integer> map =
            internalGetInt32ToSfixed32Map().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }

      public Builder clearInt32ToSfixed32Map() {
        internalGetMutableInt32ToSfixed32Map().getMutableMap()
            .clear();
        return this;
      }
      /**
       * <code>map&lt;int32, sfixed32&gt; int32_to_sfixed32_map = 108;</code>
       */

      public Builder removeInt32ToSfixed32Map(
          int key) {
        
        internalGetMutableInt32ToSfixed32Map().getMutableMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.Integer, java.lang.Integer>
      getMutableInt32ToSfixed32Map() {
        return internalGetMutableInt32ToSfixed32Map().getMutableMap();
      }
      /**
       * <code>map&lt;int32, sfixed32&gt; int32_to_sfixed32_map = 108;</code>
       */
      public Builder putInt32ToSfixed32Map(
          int key,
          int value) {
        
        
        internalGetMutableInt32ToSfixed32Map().getMutableMap()
            .put(key, value);
        return this;
      }
      /**
       * <code>map&lt;int32, sfixed32&gt; int32_to_sfixed32_map = 108;</code>
       */

      public Builder putAllInt32ToSfixed32Map(
          java.util.Map<java.lang.Integer, java.lang.Integer> values) {
        internalGetMutableInt32ToSfixed32Map().getMutableMap()
            .putAll(values);
        return this;
      }

      private com.google.protobuf.MapField<
          java.lang.Integer, java.lang.Long> int32ToSfixed64Map_;
      private com.google.protobuf.MapField<java.lang.Integer, java.lang.Long>
      internalGetInt32ToSfixed64Map() {
        if (int32ToSfixed64Map_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              Int32ToSfixed64MapDefaultEntryHolder.defaultEntry);
        }
        return int32ToSfixed64Map_;
      }
      private com.google.protobuf.MapField<java.lang.Integer, java.lang.Long>
      internalGetMutableInt32ToSfixed64Map() {
        onChanged();;
        if (int32ToSfixed64Map_ == null) {
          int32ToSfixed64Map_ = com.google.protobuf.MapField.newMapField(
              Int32ToSfixed64MapDefaultEntryHolder.defaultEntry);
        }
        if (!int32ToSfixed64Map_.isMutable()) {
          int32ToSfixed64Map_ = int32ToSfixed64Map_.copy();
        }
        return int32ToSfixed64Map_;
      }

      public int getInt32ToSfixed64MapCount() {
        return internalGetInt32ToSfixed64Map().getMap().size();
      }
      /**
       * <code>map&lt;int32, sfixed64&gt; int32_to_sfixed64_map = 109;</code>
       */

      public boolean containsInt32ToSfixed64Map(
          int key) {
        
        return internalGetInt32ToSfixed64Map().getMap().containsKey(key);
      }
      /**
       * Use {@link #getInt32ToSfixed64MapMap()} instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.Integer, java.lang.Long> getInt32ToSfixed64Map() {
        return getInt32ToSfixed64MapMap();
      }
      /**
       * <code>map&lt;int32, sfixed64&gt; int32_to_sfixed64_map = 109;</code>
       */

      public java.util.Map<java.lang.Integer, java.lang.Long> getInt32ToSfixed64MapMap() {
        return internalGetInt32ToSfixed64Map().getMap();
      }
      /**
       * <code>map&lt;int32, sfixed64&gt; int32_to_sfixed64_map = 109;</code>
       */

      public long getInt32ToSfixed64MapOrDefault(
          int key,
          long defaultValue) {
        
        java.util.Map<java.lang.Integer, java.lang.Long> map =
            internalGetInt32ToSfixed64Map().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <code>map&lt;int32, sfixed64&gt; int32_to_sfixed64_map = 109;</code>
       */

      public long getInt32ToSfixed64MapOrThrow(
          int key) {
        
        java.util.Map<java.lang.Integer, java.lang.Long> map =
            internalGetInt32ToSfixed64Map().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }

      public Builder clearInt32ToSfixed64Map() {
        internalGetMutableInt32ToSfixed64Map().getMutableMap()
            .clear();
        return this;
      }
      /**
       * <code>map&lt;int32, sfixed64&gt; int32_to_sfixed64_map = 109;</code>
       */

      public Builder removeInt32ToSfixed64Map(
          int key) {
        
        internalGetMutableInt32ToSfixed64Map().getMutableMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.Integer, java.lang.Long>
      getMutableInt32ToSfixed64Map() {
        return internalGetMutableInt32ToSfixed64Map().getMutableMap();
      }
      /**
       * <code>map&lt;int32, sfixed64&gt; int32_to_sfixed64_map = 109;</code>
       */
      public Builder putInt32ToSfixed64Map(
          int key,
          long value) {
        
        
        internalGetMutableInt32ToSfixed64Map().getMutableMap()
            .put(key, value);
        return this;
      }
      /**
       * <code>map&lt;int32, sfixed64&gt; int32_to_sfixed64_map = 109;</code>
       */

      public Builder putAllInt32ToSfixed64Map(
          java.util.Map<java.lang.Integer, java.lang.Long> values) {
        internalGetMutableInt32ToSfixed64Map().getMutableMap()
            .putAll(values);
        return this;
      }

      private com.google.protobuf.MapField<
          java.lang.Integer, java.lang.Float> int32ToFloatMap_;
      private com.google.protobuf.MapField<java.lang.Integer, java.lang.Float>
      internalGetInt32ToFloatMap() {
        if (int32ToFloatMap_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              Int32ToFloatMapDefaultEntryHolder.defaultEntry);
        }
        return int32ToFloatMap_;
      }
      private com.google.protobuf.MapField<java.lang.Integer, java.lang.Float>
      internalGetMutableInt32ToFloatMap() {
        onChanged();;
        if (int32ToFloatMap_ == null) {
          int32ToFloatMap_ = com.google.protobuf.MapField.newMapField(
              Int32ToFloatMapDefaultEntryHolder.defaultEntry);
        }
        if (!int32ToFloatMap_.isMutable()) {
          int32ToFloatMap_ = int32ToFloatMap_.copy();
        }
        return int32ToFloatMap_;
      }

      public int getInt32ToFloatMapCount() {
        return internalGetInt32ToFloatMap().getMap().size();
      }
      /**
       * <code>map&lt;int32, float&gt; int32_to_float_map = 110;</code>
       */

      public boolean containsInt32ToFloatMap(
          int key) {
        
        return internalGetInt32ToFloatMap().getMap().containsKey(key);
      }
      /**
       * Use {@link #getInt32ToFloatMapMap()} instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.Integer, java.lang.Float> getInt32ToFloatMap() {
        return getInt32ToFloatMapMap();
      }
      /**
       * <code>map&lt;int32, float&gt; int32_to_float_map = 110;</code>
       */

      public java.util.Map<java.lang.Integer, java.lang.Float> getInt32ToFloatMapMap() {
        return internalGetInt32ToFloatMap().getMap();
      }
      /**
       * <code>map&lt;int32, float&gt; int32_to_float_map = 110;</code>
       */

      public float getInt32ToFloatMapOrDefault(
          int key,
          float defaultValue) {
        
        java.util.Map<java.lang.Integer, java.lang.Float> map =
            internalGetInt32ToFloatMap().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <code>map&lt;int32, float&gt; int32_to_float_map = 110;</code>
       */

      public float getInt32ToFloatMapOrThrow(
          int key) {
        
        java.util.Map<java.lang.Integer, java.lang.Float> map =
            internalGetInt32ToFloatMap().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }

      public Builder clearInt32ToFloatMap() {
        internalGetMutableInt32ToFloatMap().getMutableMap()
            .clear();
        return this;
      }
      /**
       * <code>map&lt;int32, float&gt; int32_to_float_map = 110;</code>
       */

      public Builder removeInt32ToFloatMap(
          int key) {
        
        internalGetMutableInt32ToFloatMap().getMutableMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.Integer, java.lang.Float>
      getMutableInt32ToFloatMap() {
        return internalGetMutableInt32ToFloatMap().getMutableMap();
      }
      /**
       * <code>map&lt;int32, float&gt; int32_to_float_map = 110;</code>
       */
      public Builder putInt32ToFloatMap(
          int key,
          float value) {
        
        
        internalGetMutableInt32ToFloatMap().getMutableMap()
            .put(key, value);
        return this;
      }
      /**
       * <code>map&lt;int32, float&gt; int32_to_float_map = 110;</code>
       */

      public Builder putAllInt32ToFloatMap(
          java.util.Map<java.lang.Integer, java.lang.Float> values) {
        internalGetMutableInt32ToFloatMap().getMutableMap()
            .putAll(values);
        return this;
      }

      private com.google.protobuf.MapField<
          java.lang.Integer, java.lang.Double> int32ToDoubleMap_;
      private com.google.protobuf.MapField<java.lang.Integer, java.lang.Double>
      internalGetInt32ToDoubleMap() {
        if (int32ToDoubleMap_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              Int32ToDoubleMapDefaultEntryHolder.defaultEntry);
        }
        return int32ToDoubleMap_;
      }
      private com.google.protobuf.MapField<java.lang.Integer, java.lang.Double>
      internalGetMutableInt32ToDoubleMap() {
        onChanged();;
        if (int32ToDoubleMap_ == null) {
          int32ToDoubleMap_ = com.google.protobuf.MapField.newMapField(
              Int32ToDoubleMapDefaultEntryHolder.defaultEntry);
        }
        if (!int32ToDoubleMap_.isMutable()) {
          int32ToDoubleMap_ = int32ToDoubleMap_.copy();
        }
        return int32ToDoubleMap_;
      }

      public int getInt32ToDoubleMapCount() {
        return internalGetInt32ToDoubleMap().getMap().size();
      }
      /**
       * <code>map&lt;int32, double&gt; int32_to_double_map = 111;</code>
       */

      public boolean containsInt32ToDoubleMap(
          int key) {
        
        return internalGetInt32ToDoubleMap().getMap().containsKey(key);
      }
      /**
       * Use {@link #getInt32ToDoubleMapMap()} instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.Integer, java.lang.Double> getInt32ToDoubleMap() {
        return getInt32ToDoubleMapMap();
      }
      /**
       * <code>map&lt;int32, double&gt; int32_to_double_map = 111;</code>
       */

      public java.util.Map<java.lang.Integer, java.lang.Double> getInt32ToDoubleMapMap() {
        return internalGetInt32ToDoubleMap().getMap();
      }
      /**
       * <code>map&lt;int32, double&gt; int32_to_double_map = 111;</code>
       */

      public double getInt32ToDoubleMapOrDefault(
          int key,
          double defaultValue) {
        
        java.util.Map<java.lang.Integer, java.lang.Double> map =
            internalGetInt32ToDoubleMap().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <code>map&lt;int32, double&gt; int32_to_double_map = 111;</code>
       */

      public double getInt32ToDoubleMapOrThrow(
          int key) {
        
        java.util.Map<java.lang.Integer, java.lang.Double> map =
            internalGetInt32ToDoubleMap().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }

      public Builder clearInt32ToDoubleMap() {
        internalGetMutableInt32ToDoubleMap().getMutableMap()
            .clear();
        return this;
      }
      /**
       * <code>map&lt;int32, double&gt; int32_to_double_map = 111;</code>
       */

      public Builder removeInt32ToDoubleMap(
          int key) {
        
        internalGetMutableInt32ToDoubleMap().getMutableMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.Integer, java.lang.Double>
      getMutableInt32ToDoubleMap() {
        return internalGetMutableInt32ToDoubleMap().getMutableMap();
      }
      /**
       * <code>map&lt;int32, double&gt; int32_to_double_map = 111;</code>
       */
      public Builder putInt32ToDoubleMap(
          int key,
          double value) {
        
        
        internalGetMutableInt32ToDoubleMap().getMutableMap()
            .put(key, value);
        return this;
      }
      /**
       * <code>map&lt;int32, double&gt; int32_to_double_map = 111;</code>
       */

      public Builder putAllInt32ToDoubleMap(
          java.util.Map<java.lang.Integer, java.lang.Double> values) {
        internalGetMutableInt32ToDoubleMap().getMutableMap()
            .putAll(values);
        return this;
      }

      private com.google.protobuf.MapField<
          java.lang.Integer, java.lang.Boolean> int32ToBoolMap_;
      private com.google.protobuf.MapField<java.lang.Integer, java.lang.Boolean>
      internalGetInt32ToBoolMap() {
        if (int32ToBoolMap_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              Int32ToBoolMapDefaultEntryHolder.defaultEntry);
        }
        return int32ToBoolMap_;
      }
      private com.google.protobuf.MapField<java.lang.Integer, java.lang.Boolean>
      internalGetMutableInt32ToBoolMap() {
        onChanged();;
        if (int32ToBoolMap_ == null) {
          int32ToBoolMap_ = com.google.protobuf.MapField.newMapField(
              Int32ToBoolMapDefaultEntryHolder.defaultEntry);
        }
        if (!int32ToBoolMap_.isMutable()) {
          int32ToBoolMap_ = int32ToBoolMap_.copy();
        }
        return int32ToBoolMap_;
      }

      public int getInt32ToBoolMapCount() {
        return internalGetInt32ToBoolMap().getMap().size();
      }
      /**
       * <code>map&lt;int32, bool&gt; int32_to_bool_map = 112;</code>
       */

      public boolean containsInt32ToBoolMap(
          int key) {
        
        return internalGetInt32ToBoolMap().getMap().containsKey(key);
      }
      /**
       * Use {@link #getInt32ToBoolMapMap()} instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.Integer, java.lang.Boolean> getInt32ToBoolMap() {
        return getInt32ToBoolMapMap();
      }
      /**
       * <code>map&lt;int32, bool&gt; int32_to_bool_map = 112;</code>
       */

      public java.util.Map<java.lang.Integer, java.lang.Boolean> getInt32ToBoolMapMap() {
        return internalGetInt32ToBoolMap().getMap();
      }
      /**
       * <code>map&lt;int32, bool&gt; int32_to_bool_map = 112;</code>
       */

      public boolean getInt32ToBoolMapOrDefault(
          int key,
          boolean defaultValue) {
        
        java.util.Map<java.lang.Integer, java.lang.Boolean> map =
            internalGetInt32ToBoolMap().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <code>map&lt;int32, bool&gt; int32_to_bool_map = 112;</code>
       */

      public boolean getInt32ToBoolMapOrThrow(
          int key) {
        
        java.util.Map<java.lang.Integer, java.lang.Boolean> map =
            internalGetInt32ToBoolMap().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }

      public Builder clearInt32ToBoolMap() {
        internalGetMutableInt32ToBoolMap().getMutableMap()
            .clear();
        return this;
      }
      /**
       * <code>map&lt;int32, bool&gt; int32_to_bool_map = 112;</code>
       */

      public Builder removeInt32ToBoolMap(
          int key) {
        
        internalGetMutableInt32ToBoolMap().getMutableMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.Integer, java.lang.Boolean>
      getMutableInt32ToBoolMap() {
        return internalGetMutableInt32ToBoolMap().getMutableMap();
      }
      /**
       * <code>map&lt;int32, bool&gt; int32_to_bool_map = 112;</code>
       */
      public Builder putInt32ToBoolMap(
          int key,
          boolean value) {
        
        
        internalGetMutableInt32ToBoolMap().getMutableMap()
            .put(key, value);
        return this;
      }
      /**
       * <code>map&lt;int32, bool&gt; int32_to_bool_map = 112;</code>
       */

      public Builder putAllInt32ToBoolMap(
          java.util.Map<java.lang.Integer, java.lang.Boolean> values) {
        internalGetMutableInt32ToBoolMap().getMutableMap()
            .putAll(values);
        return this;
      }

      private com.google.protobuf.MapField<
          java.lang.Integer, java.lang.String> int32ToStringMap_;
      private com.google.protobuf.MapField<java.lang.Integer, java.lang.String>
      internalGetInt32ToStringMap() {
        if (int32ToStringMap_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              Int32ToStringMapDefaultEntryHolder.defaultEntry);
        }
        return int32ToStringMap_;
      }
      private com.google.protobuf.MapField<java.lang.Integer, java.lang.String>
      internalGetMutableInt32ToStringMap() {
        onChanged();;
        if (int32ToStringMap_ == null) {
          int32ToStringMap_ = com.google.protobuf.MapField.newMapField(
              Int32ToStringMapDefaultEntryHolder.defaultEntry);
        }
        if (!int32ToStringMap_.isMutable()) {
          int32ToStringMap_ = int32ToStringMap_.copy();
        }
        return int32ToStringMap_;
      }

      public int getInt32ToStringMapCount() {
        return internalGetInt32ToStringMap().getMap().size();
      }
      /**
       * <code>map&lt;int32, string&gt; int32_to_string_map = 113;</code>
       */

      public boolean containsInt32ToStringMap(
          int key) {
        
        return internalGetInt32ToStringMap().getMap().containsKey(key);
      }
      /**
       * Use {@link #getInt32ToStringMapMap()} instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.Integer, java.lang.String> getInt32ToStringMap() {
        return getInt32ToStringMapMap();
      }
      /**
       * <code>map&lt;int32, string&gt; int32_to_string_map = 113;</code>
       */

      public java.util.Map<java.lang.Integer, java.lang.String> getInt32ToStringMapMap() {
        return internalGetInt32ToStringMap().getMap();
      }
      /**
       * <code>map&lt;int32, string&gt; int32_to_string_map = 113;</code>
       */

      public java.lang.String getInt32ToStringMapOrDefault(
          int key,
          java.lang.String defaultValue) {
        
        java.util.Map<java.lang.Integer, java.lang.String> map =
            internalGetInt32ToStringMap().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <code>map&lt;int32, string&gt; int32_to_string_map = 113;</code>
       */

      public java.lang.String getInt32ToStringMapOrThrow(
          int key) {
        
        java.util.Map<java.lang.Integer, java.lang.String> map =
            internalGetInt32ToStringMap().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }

      public Builder clearInt32ToStringMap() {
        internalGetMutableInt32ToStringMap().getMutableMap()
            .clear();
        return this;
      }
      /**
       * <code>map&lt;int32, string&gt; int32_to_string_map = 113;</code>
       */

      public Builder removeInt32ToStringMap(
          int key) {
        
        internalGetMutableInt32ToStringMap().getMutableMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.Integer, java.lang.String>
      getMutableInt32ToStringMap() {
        return internalGetMutableInt32ToStringMap().getMutableMap();
      }
      /**
       * <code>map&lt;int32, string&gt; int32_to_string_map = 113;</code>
       */
      public Builder putInt32ToStringMap(
          int key,
          java.lang.String value) {
        
        if (value == null) { throw new java.lang.NullPointerException(); }
        internalGetMutableInt32ToStringMap().getMutableMap()
            .put(key, value);
        return this;
      }
      /**
       * <code>map&lt;int32, string&gt; int32_to_string_map = 113;</code>
       */

      public Builder putAllInt32ToStringMap(
          java.util.Map<java.lang.Integer, java.lang.String> values) {
        internalGetMutableInt32ToStringMap().getMutableMap()
            .putAll(values);
        return this;
      }

      private com.google.protobuf.MapField<
          java.lang.Integer, com.google.protobuf.ByteString> int32ToBytesMap_;
      private com.google.protobuf.MapField<java.lang.Integer, com.google.protobuf.ByteString>
      internalGetInt32ToBytesMap() {
        if (int32ToBytesMap_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              Int32ToBytesMapDefaultEntryHolder.defaultEntry);
        }
        return int32ToBytesMap_;
      }
      private com.google.protobuf.MapField<java.lang.Integer, com.google.protobuf.ByteString>
      internalGetMutableInt32ToBytesMap() {
        onChanged();;
        if (int32ToBytesMap_ == null) {
          int32ToBytesMap_ = com.google.protobuf.MapField.newMapField(
              Int32ToBytesMapDefaultEntryHolder.defaultEntry);
        }
        if (!int32ToBytesMap_.isMutable()) {
          int32ToBytesMap_ = int32ToBytesMap_.copy();
        }
        return int32ToBytesMap_;
      }

      public int getInt32ToBytesMapCount() {
        return internalGetInt32ToBytesMap().getMap().size();
      }
      /**
       * <code>map&lt;int32, bytes&gt; int32_to_bytes_map = 114;</code>
       */

      public boolean containsInt32ToBytesMap(
          int key) {
        
        return internalGetInt32ToBytesMap().getMap().containsKey(key);
      }
      /**
       * Use {@link #getInt32ToBytesMapMap()} instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.Integer, com.google.protobuf.ByteString> getInt32ToBytesMap() {
        return getInt32ToBytesMapMap();
      }
      /**
       * <code>map&lt;int32, bytes&gt; int32_to_bytes_map = 114;</code>
       */

      public java.util.Map<java.lang.Integer, com.google.protobuf.ByteString> getInt32ToBytesMapMap() {
        return internalGetInt32ToBytesMap().getMap();
      }
      /**
       * <code>map&lt;int32, bytes&gt; int32_to_bytes_map = 114;</code>
       */

      public com.google.protobuf.ByteString getInt32ToBytesMapOrDefault(
          int key,
          com.google.protobuf.ByteString defaultValue) {
        
        java.util.Map<java.lang.Integer, com.google.protobuf.ByteString> map =
            internalGetInt32ToBytesMap().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <code>map&lt;int32, bytes&gt; int32_to_bytes_map = 114;</code>
       */

      public com.google.protobuf.ByteString getInt32ToBytesMapOrThrow(
          int key) {
        
        java.util.Map<java.lang.Integer, com.google.protobuf.ByteString> map =
            internalGetInt32ToBytesMap().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }

      public Builder clearInt32ToBytesMap() {
        internalGetMutableInt32ToBytesMap().getMutableMap()
            .clear();
        return this;
      }
      /**
       * <code>map&lt;int32, bytes&gt; int32_to_bytes_map = 114;</code>
       */

      public Builder removeInt32ToBytesMap(
          int key) {
        
        internalGetMutableInt32ToBytesMap().getMutableMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.Integer, com.google.protobuf.ByteString>
      getMutableInt32ToBytesMap() {
        return internalGetMutableInt32ToBytesMap().getMutableMap();
      }
      /**
       * <code>map&lt;int32, bytes&gt; int32_to_bytes_map = 114;</code>
       */
      public Builder putInt32ToBytesMap(
          int key,
          com.google.protobuf.ByteString value) {
        
        if (value == null) { throw new java.lang.NullPointerException(); }
        internalGetMutableInt32ToBytesMap().getMutableMap()
            .put(key, value);
        return this;
      }
      /**
       * <code>map&lt;int32, bytes&gt; int32_to_bytes_map = 114;</code>
       */

      public Builder putAllInt32ToBytesMap(
          java.util.Map<java.lang.Integer, com.google.protobuf.ByteString> values) {
        internalGetMutableInt32ToBytesMap().getMutableMap()
            .putAll(values);
        return this;
      }

      private com.google.protobuf.MapField<
          java.lang.Integer, com.google.protobuf.util.JsonTestProto.TestAllTypes.NestedMessage> int32ToMessageMap_;
      private com.google.protobuf.MapField<java.lang.Integer, com.google.protobuf.util.JsonTestProto.TestAllTypes.NestedMessage>
      internalGetInt32ToMessageMap() {
        if (int32ToMessageMap_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              Int32ToMessageMapDefaultEntryHolder.defaultEntry);
        }
        return int32ToMessageMap_;
      }
      private com.google.protobuf.MapField<java.lang.Integer, com.google.protobuf.util.JsonTestProto.TestAllTypes.NestedMessage>
      internalGetMutableInt32ToMessageMap() {
        onChanged();;
        if (int32ToMessageMap_ == null) {
          int32ToMessageMap_ = com.google.protobuf.MapField.newMapField(
              Int32ToMessageMapDefaultEntryHolder.defaultEntry);
        }
        if (!int32ToMessageMap_.isMutable()) {
          int32ToMessageMap_ = int32ToMessageMap_.copy();
        }
        return int32ToMessageMap_;
      }

      public int getInt32ToMessageMapCount() {
        return internalGetInt32ToMessageMap().getMap().size();
      }
      /**
       * <code>map&lt;int32, .json_test.TestAllTypes.NestedMessage&gt; int32_to_message_map = 115;</code>
       */

      public boolean containsInt32ToMessageMap(
          int key) {
        
        return internalGetInt32ToMessageMap().getMap().containsKey(key);
      }
      /**
       * Use {@link #getInt32ToMessageMapMap()} instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.Integer, com.google.protobuf.util.JsonTestProto.TestAllTypes.NestedMessage> getInt32ToMessageMap() {
        return getInt32ToMessageMapMap();
      }
      /**
       * <code>map&lt;int32, .json_test.TestAllTypes.NestedMessage&gt; int32_to_message_map = 115;</code>
       */

      public java.util.Map<java.lang.Integer, com.google.protobuf.util.JsonTestProto.TestAllTypes.NestedMessage> getInt32ToMessageMapMap() {
        return internalGetInt32ToMessageMap().getMap();
      }
      /**
       * <code>map&lt;int32, .json_test.TestAllTypes.NestedMessage&gt; int32_to_message_map = 115;</code>
       */

      public com.google.protobuf.util.JsonTestProto.TestAllTypes.NestedMessage getInt32ToMessageMapOrDefault(
          int key,
          com.google.protobuf.util.JsonTestProto.TestAllTypes.NestedMessage defaultValue) {
        
        java.util.Map<java.lang.Integer, com.google.protobuf.util.JsonTestProto.TestAllTypes.NestedMessage> map =
            internalGetInt32ToMessageMap().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <code>map&lt;int32, .json_test.TestAllTypes.NestedMessage&gt; int32_to_message_map = 115;</code>
       */

      public com.google.protobuf.util.JsonTestProto.TestAllTypes.NestedMessage getInt32ToMessageMapOrThrow(
          int key) {
        
        java.util.Map<java.lang.Integer, com.google.protobuf.util.JsonTestProto.TestAllTypes.NestedMessage> map =
            internalGetInt32ToMessageMap().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }

      public Builder clearInt32ToMessageMap() {
        internalGetMutableInt32ToMessageMap().getMutableMap()
            .clear();
        return this;
      }
      /**
       * <code>map&lt;int32, .json_test.TestAllTypes.NestedMessage&gt; int32_to_message_map = 115;</code>
       */

      public Builder removeInt32ToMessageMap(
          int key) {
        
        internalGetMutableInt32ToMessageMap().getMutableMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.Integer, com.google.protobuf.util.JsonTestProto.TestAllTypes.NestedMessage>
      getMutableInt32ToMessageMap() {
        return internalGetMutableInt32ToMessageMap().getMutableMap();
      }
      /**
       * <code>map&lt;int32, .json_test.TestAllTypes.NestedMessage&gt; int32_to_message_map = 115;</code>
       */
      public Builder putInt32ToMessageMap(
          int key,
          com.google.protobuf.util.JsonTestProto.TestAllTypes.NestedMessage value) {
        
        if (value == null) { throw new java.lang.NullPointerException(); }
        internalGetMutableInt32ToMessageMap().getMutableMap()
            .put(key, value);
        return this;
      }
      /**
       * <code>map&lt;int32, .json_test.TestAllTypes.NestedMessage&gt; int32_to_message_map = 115;</code>
       */

      public Builder putAllInt32ToMessageMap(
          java.util.Map<java.lang.Integer, com.google.protobuf.util.JsonTestProto.TestAllTypes.NestedMessage> values) {
        internalGetMutableInt32ToMessageMap().getMutableMap()
            .putAll(values);
        return this;
      }

      private com.google.protobuf.MapField<
          java.lang.Integer, java.lang.Integer> int32ToEnumMap_;
      private com.google.protobuf.MapField<java.lang.Integer, java.lang.Integer>
      internalGetInt32ToEnumMap() {
        if (int32ToEnumMap_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              Int32ToEnumMapDefaultEntryHolder.defaultEntry);
        }
        return int32ToEnumMap_;
      }
      private com.google.protobuf.MapField<java.lang.Integer, java.lang.Integer>
      internalGetMutableInt32ToEnumMap() {
        onChanged();;
        if (int32ToEnumMap_ == null) {
          int32ToEnumMap_ = com.google.protobuf.MapField.newMapField(
              Int32ToEnumMapDefaultEntryHolder.defaultEntry);
        }
        if (!int32ToEnumMap_.isMutable()) {
          int32ToEnumMap_ = int32ToEnumMap_.copy();
        }
        return int32ToEnumMap_;
      }

      public int getInt32ToEnumMapCount() {
        return internalGetInt32ToEnumMap().getMap().size();
      }
      /**
       * <code>map&lt;int32, .json_test.TestAllTypes.NestedEnum&gt; int32_to_enum_map = 116;</code>
       */

      public boolean containsInt32ToEnumMap(
          int key) {
        
        return internalGetInt32ToEnumMap().getMap().containsKey(key);
      }
      /**
       * Use {@link #getInt32ToEnumMapMap()} instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.Integer, com.google.protobuf.util.JsonTestProto.TestAllTypes.NestedEnum>
      getInt32ToEnumMap() {
        return getInt32ToEnumMapMap();
      }
      /**
       * <code>map&lt;int32, .json_test.TestAllTypes.NestedEnum&gt; int32_to_enum_map = 116;</code>
       */

      public java.util.Map<java.lang.Integer, com.google.protobuf.util.JsonTestProto.TestAllTypes.NestedEnum>
      getInt32ToEnumMapMap() {
        return internalGetAdaptedInt32ToEnumMapMap(
            internalGetInt32ToEnumMap().getMap());}
      /**
       * <code>map&lt;int32, .json_test.TestAllTypes.NestedEnum&gt; int32_to_enum_map = 116;</code>
       */

      public com.google.protobuf.util.JsonTestProto.TestAllTypes.NestedEnum getInt32ToEnumMapOrDefault(
          int key,
          com.google.protobuf.util.JsonTestProto.TestAllTypes.NestedEnum defaultValue) {
        
        java.util.Map<java.lang.Integer, java.lang.Integer> map =
            internalGetInt32ToEnumMap().getMap();
        return map.containsKey(key)
               ? int32ToEnumMapValueConverter.doForward(map.get(key))
               : defaultValue;
      }
      /**
       * <code>map&lt;int32, .json_test.TestAllTypes.NestedEnum&gt; int32_to_enum_map = 116;</code>
       */

      public com.google.protobuf.util.JsonTestProto.TestAllTypes.NestedEnum getInt32ToEnumMapOrThrow(
          int key) {
        
        java.util.Map<java.lang.Integer, java.lang.Integer> map =
            internalGetInt32ToEnumMap().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return int32ToEnumMapValueConverter.doForward(map.get(key));
      }
      /**
       * Use {@link #getInt32ToEnumMapValueMap()} instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.Integer, java.lang.Integer>
      getInt32ToEnumMapValue() {
        return getInt32ToEnumMapValueMap();
      }
      /**
       * <code>map&lt;int32, .json_test.TestAllTypes.NestedEnum&gt; int32_to_enum_map = 116;</code>
       */

      public java.util.Map<java.lang.Integer, java.lang.Integer>
      getInt32ToEnumMapValueMap() {
        return internalGetInt32ToEnumMap().getMap();
      }
      /**
       * <code>map&lt;int32, .json_test.TestAllTypes.NestedEnum&gt; int32_to_enum_map = 116;</code>
       */

      public int getInt32ToEnumMapValueOrDefault(
          int key,
          int defaultValue) {
        
        java.util.Map<java.lang.Integer, java.lang.Integer> map =
            internalGetInt32ToEnumMap().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <code>map&lt;int32, .json_test.TestAllTypes.NestedEnum&gt; int32_to_enum_map = 116;</code>
       */

      public int getInt32ToEnumMapValueOrThrow(
          int key) {
        
        java.util.Map<java.lang.Integer, java.lang.Integer> map =
            internalGetInt32ToEnumMap().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }

      public Builder clearInt32ToEnumMap() {
        internalGetMutableInt32ToEnumMap().getMutableMap()
            .clear();
        return this;
      }
      /**
       * <code>map&lt;int32, .json_test.TestAllTypes.NestedEnum&gt; int32_to_enum_map = 116;</code>
       */

      public Builder removeInt32ToEnumMap(
          int key) {
        
        internalGetMutableInt32ToEnumMap().getMutableMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.Integer, com.google.protobuf.util.JsonTestProto.TestAllTypes.NestedEnum>
      getMutableInt32ToEnumMap() {
        return internalGetAdaptedInt32ToEnumMapMap(
             internalGetMutableInt32ToEnumMap().getMutableMap());
      }
      /**
       * <code>map&lt;int32, .json_test.TestAllTypes.NestedEnum&gt; int32_to_enum_map = 116;</code>
       */
      public Builder putInt32ToEnumMap(
          int key,
          com.google.protobuf.util.JsonTestProto.TestAllTypes.NestedEnum value) {
        
        if (value == null) { throw new java.lang.NullPointerException(); }
        internalGetMutableInt32ToEnumMap().getMutableMap()
            .put(key, int32ToEnumMapValueConverter.doBackward(value));
        return this;
      }
      /**
       * <code>map&lt;int32, .json_test.TestAllTypes.NestedEnum&gt; int32_to_enum_map = 116;</code>
       */
      public Builder putAllInt32ToEnumMap(
          java.util.Map<java.lang.Integer, com.google.protobuf.util.JsonTestProto.TestAllTypes.NestedEnum> values) {
        internalGetAdaptedInt32ToEnumMapMap(
            internalGetMutableInt32ToEnumMap().getMutableMap())
                .putAll(values);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.Integer, java.lang.Integer>
      getMutableInt32ToEnumMapValue() {
        return internalGetMutableInt32ToEnumMap().getMutableMap();
      }
      /**
       * <code>map&lt;int32, .json_test.TestAllTypes.NestedEnum&gt; int32_to_enum_map = 116;</code>
       */
      public Builder putInt32ToEnumMapValue(
          int key,
          int value) {
        
        if (com.google.protobuf.util.JsonTestProto.TestAllTypes.NestedEnum.forNumber(value) == null) {
          throw new java.lang.IllegalArgumentException();
        }
        internalGetMutableInt32ToEnumMap().getMutableMap()
            .put(key, value);
        return this;
      }
      /**
       * <code>map&lt;int32, .json_test.TestAllTypes.NestedEnum&gt; int32_to_enum_map = 116;</code>
       */
      public Builder putAllInt32ToEnumMapValue(
          java.util.Map<java.lang.Integer, java.lang.Integer> values) {
        internalGetMutableInt32ToEnumMap().getMutableMap()
            .putAll(values);
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:json_test.TestMap)
    }

    // @@protoc_insertion_point(class_scope:json_test.TestMap)
    private static final com.google.protobuf.util.JsonTestProto.TestMap DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.google.protobuf.util.JsonTestProto.TestMap();
    }

    public static com.google.protobuf.util.JsonTestProto.TestMap getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<TestMap>
        PARSER = new com.google.protobuf.AbstractParser<TestMap>() {
      public TestMap parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new TestMap(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<TestMap> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<TestMap> getParserForType() {
      return PARSER;
    }

    public com.google.protobuf.util.JsonTestProto.TestMap getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface TestWrappersOrBuilder extends
      // @@protoc_insertion_point(interface_extends:json_test.TestWrappers)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>.google.protobuf.Int32Value int32_value = 1;</code>
     */
    boolean hasInt32Value();
    /**
     * <code>.google.protobuf.Int32Value int32_value = 1;</code>
     */
    com.google.protobuf.Int32Value getInt32Value();
    /**
     * <code>.google.protobuf.Int32Value int32_value = 1;</code>
     */
    com.google.protobuf.Int32ValueOrBuilder getInt32ValueOrBuilder();

    /**
     * <code>.google.protobuf.UInt32Value uint32_value = 2;</code>
     */
    boolean hasUint32Value();
    /**
     * <code>.google.protobuf.UInt32Value uint32_value = 2;</code>
     */
    com.google.protobuf.UInt32Value getUint32Value();
    /**
     * <code>.google.protobuf.UInt32Value uint32_value = 2;</code>
     */
    com.google.protobuf.UInt32ValueOrBuilder getUint32ValueOrBuilder();

    /**
     * <code>.google.protobuf.Int64Value int64_value = 3;</code>
     */
    boolean hasInt64Value();
    /**
     * <code>.google.protobuf.Int64Value int64_value = 3;</code>
     */
    com.google.protobuf.Int64Value getInt64Value();
    /**
     * <code>.google.protobuf.Int64Value int64_value = 3;</code>
     */
    com.google.protobuf.Int64ValueOrBuilder getInt64ValueOrBuilder();

    /**
     * <code>.google.protobuf.UInt64Value uint64_value = 4;</code>
     */
    boolean hasUint64Value();
    /**
     * <code>.google.protobuf.UInt64Value uint64_value = 4;</code>
     */
    com.google.protobuf.UInt64Value getUint64Value();
    /**
     * <code>.google.protobuf.UInt64Value uint64_value = 4;</code>
     */
    com.google.protobuf.UInt64ValueOrBuilder getUint64ValueOrBuilder();

    /**
     * <code>.google.protobuf.FloatValue float_value = 5;</code>
     */
    boolean hasFloatValue();
    /**
     * <code>.google.protobuf.FloatValue float_value = 5;</code>
     */
    com.google.protobuf.FloatValue getFloatValue();
    /**
     * <code>.google.protobuf.FloatValue float_value = 5;</code>
     */
    com.google.protobuf.FloatValueOrBuilder getFloatValueOrBuilder();

    /**
     * <code>.google.protobuf.DoubleValue double_value = 6;</code>
     */
    boolean hasDoubleValue();
    /**
     * <code>.google.protobuf.DoubleValue double_value = 6;</code>
     */
    com.google.protobuf.DoubleValue getDoubleValue();
    /**
     * <code>.google.protobuf.DoubleValue double_value = 6;</code>
     */
    com.google.protobuf.DoubleValueOrBuilder getDoubleValueOrBuilder();

    /**
     * <code>.google.protobuf.BoolValue bool_value = 7;</code>
     */
    boolean hasBoolValue();
    /**
     * <code>.google.protobuf.BoolValue bool_value = 7;</code>
     */
    com.google.protobuf.BoolValue getBoolValue();
    /**
     * <code>.google.protobuf.BoolValue bool_value = 7;</code>
     */
    com.google.protobuf.BoolValueOrBuilder getBoolValueOrBuilder();

    /**
     * <code>.google.protobuf.StringValue string_value = 8;</code>
     */
    boolean hasStringValue();
    /**
     * <code>.google.protobuf.StringValue string_value = 8;</code>
     */
    com.google.protobuf.StringValue getStringValue();
    /**
     * <code>.google.protobuf.StringValue string_value = 8;</code>
     */
    com.google.protobuf.StringValueOrBuilder getStringValueOrBuilder();

    /**
     * <code>.google.protobuf.BytesValue bytes_value = 9;</code>
     */
    boolean hasBytesValue();
    /**
     * <code>.google.protobuf.BytesValue bytes_value = 9;</code>
     */
    com.google.protobuf.BytesValue getBytesValue();
    /**
     * <code>.google.protobuf.BytesValue bytes_value = 9;</code>
     */
    com.google.protobuf.BytesValueOrBuilder getBytesValueOrBuilder();
  }
  /**
   * Protobuf type {@code json_test.TestWrappers}
   */
  public  static final class TestWrappers extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:json_test.TestWrappers)
      TestWrappersOrBuilder {
    // Use TestWrappers.newBuilder() to construct.
    private TestWrappers(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private TestWrappers() {
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private TestWrappers(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              com.google.protobuf.Int32Value.Builder subBuilder = null;
              if (int32Value_ != null) {
                subBuilder = int32Value_.toBuilder();
              }
              int32Value_ = input.readMessage(com.google.protobuf.Int32Value.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(int32Value_);
                int32Value_ = subBuilder.buildPartial();
              }

              break;
            }
            case 18: {
              com.google.protobuf.UInt32Value.Builder subBuilder = null;
              if (uint32Value_ != null) {
                subBuilder = uint32Value_.toBuilder();
              }
              uint32Value_ = input.readMessage(com.google.protobuf.UInt32Value.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(uint32Value_);
                uint32Value_ = subBuilder.buildPartial();
              }

              break;
            }
            case 26: {
              com.google.protobuf.Int64Value.Builder subBuilder = null;
              if (int64Value_ != null) {
                subBuilder = int64Value_.toBuilder();
              }
              int64Value_ = input.readMessage(com.google.protobuf.Int64Value.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(int64Value_);
                int64Value_ = subBuilder.buildPartial();
              }

              break;
            }
            case 34: {
              com.google.protobuf.UInt64Value.Builder subBuilder = null;
              if (uint64Value_ != null) {
                subBuilder = uint64Value_.toBuilder();
              }
              uint64Value_ = input.readMessage(com.google.protobuf.UInt64Value.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(uint64Value_);
                uint64Value_ = subBuilder.buildPartial();
              }

              break;
            }
            case 42: {
              com.google.protobuf.FloatValue.Builder subBuilder = null;
              if (floatValue_ != null) {
                subBuilder = floatValue_.toBuilder();
              }
              floatValue_ = input.readMessage(com.google.protobuf.FloatValue.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(floatValue_);
                floatValue_ = subBuilder.buildPartial();
              }

              break;
            }
            case 50: {
              com.google.protobuf.DoubleValue.Builder subBuilder = null;
              if (doubleValue_ != null) {
                subBuilder = doubleValue_.toBuilder();
              }
              doubleValue_ = input.readMessage(com.google.protobuf.DoubleValue.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(doubleValue_);
                doubleValue_ = subBuilder.buildPartial();
              }

              break;
            }
            case 58: {
              com.google.protobuf.BoolValue.Builder subBuilder = null;
              if (boolValue_ != null) {
                subBuilder = boolValue_.toBuilder();
              }
              boolValue_ = input.readMessage(com.google.protobuf.BoolValue.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(boolValue_);
                boolValue_ = subBuilder.buildPartial();
              }

              break;
            }
            case 66: {
              com.google.protobuf.StringValue.Builder subBuilder = null;
              if (stringValue_ != null) {
                subBuilder = stringValue_.toBuilder();
              }
              stringValue_ = input.readMessage(com.google.protobuf.StringValue.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(stringValue_);
                stringValue_ = subBuilder.buildPartial();
              }

              break;
            }
            case 74: {
              com.google.protobuf.BytesValue.Builder subBuilder = null;
              if (bytesValue_ != null) {
                subBuilder = bytesValue_.toBuilder();
              }
              bytesValue_ = input.readMessage(com.google.protobuf.BytesValue.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(bytesValue_);
                bytesValue_ = subBuilder.buildPartial();
              }

              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.google.protobuf.util.JsonTestProto.internal_static_json_test_TestWrappers_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.protobuf.util.JsonTestProto.internal_static_json_test_TestWrappers_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.protobuf.util.JsonTestProto.TestWrappers.class, com.google.protobuf.util.JsonTestProto.TestWrappers.Builder.class);
    }

    public static final int INT32_VALUE_FIELD_NUMBER = 1;
    private com.google.protobuf.Int32Value int32Value_;
    /**
     * <code>.google.protobuf.Int32Value int32_value = 1;</code>
     */
    public boolean hasInt32Value() {
      return int32Value_ != null;
    }
    /**
     * <code>.google.protobuf.Int32Value int32_value = 1;</code>
     */
    public com.google.protobuf.Int32Value getInt32Value() {
      return int32Value_ == null ? com.google.protobuf.Int32Value.getDefaultInstance() : int32Value_;
    }
    /**
     * <code>.google.protobuf.Int32Value int32_value = 1;</code>
     */
    public com.google.protobuf.Int32ValueOrBuilder getInt32ValueOrBuilder() {
      return getInt32Value();
    }

    public static final int UINT32_VALUE_FIELD_NUMBER = 2;
    private com.google.protobuf.UInt32Value uint32Value_;
    /**
     * <code>.google.protobuf.UInt32Value uint32_value = 2;</code>
     */
    public boolean hasUint32Value() {
      return uint32Value_ != null;
    }
    /**
     * <code>.google.protobuf.UInt32Value uint32_value = 2;</code>
     */
    public com.google.protobuf.UInt32Value getUint32Value() {
      return uint32Value_ == null ? com.google.protobuf.UInt32Value.getDefaultInstance() : uint32Value_;
    }
    /**
     * <code>.google.protobuf.UInt32Value uint32_value = 2;</code>
     */
    public com.google.protobuf.UInt32ValueOrBuilder getUint32ValueOrBuilder() {
      return getUint32Value();
    }

    public static final int INT64_VALUE_FIELD_NUMBER = 3;
    private com.google.protobuf.Int64Value int64Value_;
    /**
     * <code>.google.protobuf.Int64Value int64_value = 3;</code>
     */
    public boolean hasInt64Value() {
      return int64Value_ != null;
    }
    /**
     * <code>.google.protobuf.Int64Value int64_value = 3;</code>
     */
    public com.google.protobuf.Int64Value getInt64Value() {
      return int64Value_ == null ? com.google.protobuf.Int64Value.getDefaultInstance() : int64Value_;
    }
    /**
     * <code>.google.protobuf.Int64Value int64_value = 3;</code>
     */
    public com.google.protobuf.Int64ValueOrBuilder getInt64ValueOrBuilder() {
      return getInt64Value();
    }

    public static final int UINT64_VALUE_FIELD_NUMBER = 4;
    private com.google.protobuf.UInt64Value uint64Value_;
    /**
     * <code>.google.protobuf.UInt64Value uint64_value = 4;</code>
     */
    public boolean hasUint64Value() {
      return uint64Value_ != null;
    }
    /**
     * <code>.google.protobuf.UInt64Value uint64_value = 4;</code>
     */
    public com.google.protobuf.UInt64Value getUint64Value() {
      return uint64Value_ == null ? com.google.protobuf.UInt64Value.getDefaultInstance() : uint64Value_;
    }
    /**
     * <code>.google.protobuf.UInt64Value uint64_value = 4;</code>
     */
    public com.google.protobuf.UInt64ValueOrBuilder getUint64ValueOrBuilder() {
      return getUint64Value();
    }

    public static final int FLOAT_VALUE_FIELD_NUMBER = 5;
    private com.google.protobuf.FloatValue floatValue_;
    /**
     * <code>.google.protobuf.FloatValue float_value = 5;</code>
     */
    public boolean hasFloatValue() {
      return floatValue_ != null;
    }
    /**
     * <code>.google.protobuf.FloatValue float_value = 5;</code>
     */
    public com.google.protobuf.FloatValue getFloatValue() {
      return floatValue_ == null ? com.google.protobuf.FloatValue.getDefaultInstance() : floatValue_;
    }
    /**
     * <code>.google.protobuf.FloatValue float_value = 5;</code>
     */
    public com.google.protobuf.FloatValueOrBuilder getFloatValueOrBuilder() {
      return getFloatValue();
    }

    public static final int DOUBLE_VALUE_FIELD_NUMBER = 6;
    private com.google.protobuf.DoubleValue doubleValue_;
    /**
     * <code>.google.protobuf.DoubleValue double_value = 6;</code>
     */
    public boolean hasDoubleValue() {
      return doubleValue_ != null;
    }
    /**
     * <code>.google.protobuf.DoubleValue double_value = 6;</code>
     */
    public com.google.protobuf.DoubleValue getDoubleValue() {
      return doubleValue_ == null ? com.google.protobuf.DoubleValue.getDefaultInstance() : doubleValue_;
    }
    /**
     * <code>.google.protobuf.DoubleValue double_value = 6;</code>
     */
    public com.google.protobuf.DoubleValueOrBuilder getDoubleValueOrBuilder() {
      return getDoubleValue();
    }

    public static final int BOOL_VALUE_FIELD_NUMBER = 7;
    private com.google.protobuf.BoolValue boolValue_;
    /**
     * <code>.google.protobuf.BoolValue bool_value = 7;</code>
     */
    public boolean hasBoolValue() {
      return boolValue_ != null;
    }
    /**
     * <code>.google.protobuf.BoolValue bool_value = 7;</code>
     */
    public com.google.protobuf.BoolValue getBoolValue() {
      return boolValue_ == null ? com.google.protobuf.BoolValue.getDefaultInstance() : boolValue_;
    }
    /**
     * <code>.google.protobuf.BoolValue bool_value = 7;</code>
     */
    public com.google.protobuf.BoolValueOrBuilder getBoolValueOrBuilder() {
      return getBoolValue();
    }

    public static final int STRING_VALUE_FIELD_NUMBER = 8;
    private com.google.protobuf.StringValue stringValue_;
    /**
     * <code>.google.protobuf.StringValue string_value = 8;</code>
     */
    public boolean hasStringValue() {
      return stringValue_ != null;
    }
    /**
     * <code>.google.protobuf.StringValue string_value = 8;</code>
     */
    public com.google.protobuf.StringValue getStringValue() {
      return stringValue_ == null ? com.google.protobuf.StringValue.getDefaultInstance() : stringValue_;
    }
    /**
     * <code>.google.protobuf.StringValue string_value = 8;</code>
     */
    public com.google.protobuf.StringValueOrBuilder getStringValueOrBuilder() {
      return getStringValue();
    }

    public static final int BYTES_VALUE_FIELD_NUMBER = 9;
    private com.google.protobuf.BytesValue bytesValue_;
    /**
     * <code>.google.protobuf.BytesValue bytes_value = 9;</code>
     */
    public boolean hasBytesValue() {
      return bytesValue_ != null;
    }
    /**
     * <code>.google.protobuf.BytesValue bytes_value = 9;</code>
     */
    public com.google.protobuf.BytesValue getBytesValue() {
      return bytesValue_ == null ? com.google.protobuf.BytesValue.getDefaultInstance() : bytesValue_;
    }
    /**
     * <code>.google.protobuf.BytesValue bytes_value = 9;</code>
     */
    public com.google.protobuf.BytesValueOrBuilder getBytesValueOrBuilder() {
      return getBytesValue();
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (int32Value_ != null) {
        output.writeMessage(1, getInt32Value());
      }
      if (uint32Value_ != null) {
        output.writeMessage(2, getUint32Value());
      }
      if (int64Value_ != null) {
        output.writeMessage(3, getInt64Value());
      }
      if (uint64Value_ != null) {
        output.writeMessage(4, getUint64Value());
      }
      if (floatValue_ != null) {
        output.writeMessage(5, getFloatValue());
      }
      if (doubleValue_ != null) {
        output.writeMessage(6, getDoubleValue());
      }
      if (boolValue_ != null) {
        output.writeMessage(7, getBoolValue());
      }
      if (stringValue_ != null) {
        output.writeMessage(8, getStringValue());
      }
      if (bytesValue_ != null) {
        output.writeMessage(9, getBytesValue());
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (int32Value_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getInt32Value());
      }
      if (uint32Value_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getUint32Value());
      }
      if (int64Value_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getInt64Value());
      }
      if (uint64Value_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, getUint64Value());
      }
      if (floatValue_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, getFloatValue());
      }
      if (doubleValue_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(6, getDoubleValue());
      }
      if (boolValue_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(7, getBoolValue());
      }
      if (stringValue_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(8, getStringValue());
      }
      if (bytesValue_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(9, getBytesValue());
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.google.protobuf.util.JsonTestProto.TestWrappers)) {
        return super.equals(obj);
      }
      com.google.protobuf.util.JsonTestProto.TestWrappers other = (com.google.protobuf.util.JsonTestProto.TestWrappers) obj;

      boolean result = true;
      result = result && (hasInt32Value() == other.hasInt32Value());
      if (hasInt32Value()) {
        result = result && getInt32Value()
            .equals(other.getInt32Value());
      }
      result = result && (hasUint32Value() == other.hasUint32Value());
      if (hasUint32Value()) {
        result = result && getUint32Value()
            .equals(other.getUint32Value());
      }
      result = result && (hasInt64Value() == other.hasInt64Value());
      if (hasInt64Value()) {
        result = result && getInt64Value()
            .equals(other.getInt64Value());
      }
      result = result && (hasUint64Value() == other.hasUint64Value());
      if (hasUint64Value()) {
        result = result && getUint64Value()
            .equals(other.getUint64Value());
      }
      result = result && (hasFloatValue() == other.hasFloatValue());
      if (hasFloatValue()) {
        result = result && getFloatValue()
            .equals(other.getFloatValue());
      }
      result = result && (hasDoubleValue() == other.hasDoubleValue());
      if (hasDoubleValue()) {
        result = result && getDoubleValue()
            .equals(other.getDoubleValue());
      }
      result = result && (hasBoolValue() == other.hasBoolValue());
      if (hasBoolValue()) {
        result = result && getBoolValue()
            .equals(other.getBoolValue());
      }
      result = result && (hasStringValue() == other.hasStringValue());
      if (hasStringValue()) {
        result = result && getStringValue()
            .equals(other.getStringValue());
      }
      result = result && (hasBytesValue() == other.hasBytesValue());
      if (hasBytesValue()) {
        result = result && getBytesValue()
            .equals(other.getBytesValue());
      }
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasInt32Value()) {
        hash = (37 * hash) + INT32_VALUE_FIELD_NUMBER;
        hash = (53 * hash) + getInt32Value().hashCode();
      }
      if (hasUint32Value()) {
        hash = (37 * hash) + UINT32_VALUE_FIELD_NUMBER;
        hash = (53 * hash) + getUint32Value().hashCode();
      }
      if (hasInt64Value()) {
        hash = (37 * hash) + INT64_VALUE_FIELD_NUMBER;
        hash = (53 * hash) + getInt64Value().hashCode();
      }
      if (hasUint64Value()) {
        hash = (37 * hash) + UINT64_VALUE_FIELD_NUMBER;
        hash = (53 * hash) + getUint64Value().hashCode();
      }
      if (hasFloatValue()) {
        hash = (37 * hash) + FLOAT_VALUE_FIELD_NUMBER;
        hash = (53 * hash) + getFloatValue().hashCode();
      }
      if (hasDoubleValue()) {
        hash = (37 * hash) + DOUBLE_VALUE_FIELD_NUMBER;
        hash = (53 * hash) + getDoubleValue().hashCode();
      }
      if (hasBoolValue()) {
        hash = (37 * hash) + BOOL_VALUE_FIELD_NUMBER;
        hash = (53 * hash) + getBoolValue().hashCode();
      }
      if (hasStringValue()) {
        hash = (37 * hash) + STRING_VALUE_FIELD_NUMBER;
        hash = (53 * hash) + getStringValue().hashCode();
      }
      if (hasBytesValue()) {
        hash = (37 * hash) + BYTES_VALUE_FIELD_NUMBER;
        hash = (53 * hash) + getBytesValue().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.google.protobuf.util.JsonTestProto.TestWrappers parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.google.protobuf.util.JsonTestProto.TestWrappers parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.google.protobuf.util.JsonTestProto.TestWrappers parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.google.protobuf.util.JsonTestProto.TestWrappers parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.google.protobuf.util.JsonTestProto.TestWrappers parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.google.protobuf.util.JsonTestProto.TestWrappers parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.google.protobuf.util.JsonTestProto.TestWrappers parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.google.protobuf.util.JsonTestProto.TestWrappers parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.google.protobuf.util.JsonTestProto.TestWrappers parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.google.protobuf.util.JsonTestProto.TestWrappers parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.google.protobuf.util.JsonTestProto.TestWrappers parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.google.protobuf.util.JsonTestProto.TestWrappers parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.google.protobuf.util.JsonTestProto.TestWrappers prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code json_test.TestWrappers}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:json_test.TestWrappers)
        com.google.protobuf.util.JsonTestProto.TestWrappersOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.google.protobuf.util.JsonTestProto.internal_static_json_test_TestWrappers_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.google.protobuf.util.JsonTestProto.internal_static_json_test_TestWrappers_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.google.protobuf.util.JsonTestProto.TestWrappers.class, com.google.protobuf.util.JsonTestProto.TestWrappers.Builder.class);
      }

      // Construct using com.google.protobuf.util.JsonTestProto.TestWrappers.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        if (int32ValueBuilder_ == null) {
          int32Value_ = null;
        } else {
          int32Value_ = null;
          int32ValueBuilder_ = null;
        }
        if (uint32ValueBuilder_ == null) {
          uint32Value_ = null;
        } else {
          uint32Value_ = null;
          uint32ValueBuilder_ = null;
        }
        if (int64ValueBuilder_ == null) {
          int64Value_ = null;
        } else {
          int64Value_ = null;
          int64ValueBuilder_ = null;
        }
        if (uint64ValueBuilder_ == null) {
          uint64Value_ = null;
        } else {
          uint64Value_ = null;
          uint64ValueBuilder_ = null;
        }
        if (floatValueBuilder_ == null) {
          floatValue_ = null;
        } else {
          floatValue_ = null;
          floatValueBuilder_ = null;
        }
        if (doubleValueBuilder_ == null) {
          doubleValue_ = null;
        } else {
          doubleValue_ = null;
          doubleValueBuilder_ = null;
        }
        if (boolValueBuilder_ == null) {
          boolValue_ = null;
        } else {
          boolValue_ = null;
          boolValueBuilder_ = null;
        }
        if (stringValueBuilder_ == null) {
          stringValue_ = null;
        } else {
          stringValue_ = null;
          stringValueBuilder_ = null;
        }
        if (bytesValueBuilder_ == null) {
          bytesValue_ = null;
        } else {
          bytesValue_ = null;
          bytesValueBuilder_ = null;
        }
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.google.protobuf.util.JsonTestProto.internal_static_json_test_TestWrappers_descriptor;
      }

      public com.google.protobuf.util.JsonTestProto.TestWrappers getDefaultInstanceForType() {
        return com.google.protobuf.util.JsonTestProto.TestWrappers.getDefaultInstance();
      }

      public com.google.protobuf.util.JsonTestProto.TestWrappers build() {
        com.google.protobuf.util.JsonTestProto.TestWrappers result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.google.protobuf.util.JsonTestProto.TestWrappers buildPartial() {
        com.google.protobuf.util.JsonTestProto.TestWrappers result = new com.google.protobuf.util.JsonTestProto.TestWrappers(this);
        if (int32ValueBuilder_ == null) {
          result.int32Value_ = int32Value_;
        } else {
          result.int32Value_ = int32ValueBuilder_.build();
        }
        if (uint32ValueBuilder_ == null) {
          result.uint32Value_ = uint32Value_;
        } else {
          result.uint32Value_ = uint32ValueBuilder_.build();
        }
        if (int64ValueBuilder_ == null) {
          result.int64Value_ = int64Value_;
        } else {
          result.int64Value_ = int64ValueBuilder_.build();
        }
        if (uint64ValueBuilder_ == null) {
          result.uint64Value_ = uint64Value_;
        } else {
          result.uint64Value_ = uint64ValueBuilder_.build();
        }
        if (floatValueBuilder_ == null) {
          result.floatValue_ = floatValue_;
        } else {
          result.floatValue_ = floatValueBuilder_.build();
        }
        if (doubleValueBuilder_ == null) {
          result.doubleValue_ = doubleValue_;
        } else {
          result.doubleValue_ = doubleValueBuilder_.build();
        }
        if (boolValueBuilder_ == null) {
          result.boolValue_ = boolValue_;
        } else {
          result.boolValue_ = boolValueBuilder_.build();
        }
        if (stringValueBuilder_ == null) {
          result.stringValue_ = stringValue_;
        } else {
          result.stringValue_ = stringValueBuilder_.build();
        }
        if (bytesValueBuilder_ == null) {
          result.bytesValue_ = bytesValue_;
        } else {
          result.bytesValue_ = bytesValueBuilder_.build();
        }
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.google.protobuf.util.JsonTestProto.TestWrappers) {
          return mergeFrom((com.google.protobuf.util.JsonTestProto.TestWrappers)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.google.protobuf.util.JsonTestProto.TestWrappers other) {
        if (other == com.google.protobuf.util.JsonTestProto.TestWrappers.getDefaultInstance()) return this;
        if (other.hasInt32Value()) {
          mergeInt32Value(other.getInt32Value());
        }
        if (other.hasUint32Value()) {
          mergeUint32Value(other.getUint32Value());
        }
        if (other.hasInt64Value()) {
          mergeInt64Value(other.getInt64Value());
        }
        if (other.hasUint64Value()) {
          mergeUint64Value(other.getUint64Value());
        }
        if (other.hasFloatValue()) {
          mergeFloatValue(other.getFloatValue());
        }
        if (other.hasDoubleValue()) {
          mergeDoubleValue(other.getDoubleValue());
        }
        if (other.hasBoolValue()) {
          mergeBoolValue(other.getBoolValue());
        }
        if (other.hasStringValue()) {
          mergeStringValue(other.getStringValue());
        }
        if (other.hasBytesValue()) {
          mergeBytesValue(other.getBytesValue());
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.util.JsonTestProto.TestWrappers parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.google.protobuf.util.JsonTestProto.TestWrappers) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private com.google.protobuf.Int32Value int32Value_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Int32Value, com.google.protobuf.Int32Value.Builder, com.google.protobuf.Int32ValueOrBuilder> int32ValueBuilder_;
      /**
       * <code>.google.protobuf.Int32Value int32_value = 1;</code>
       */
      public boolean hasInt32Value() {
        return int32ValueBuilder_ != null || int32Value_ != null;
      }
      /**
       * <code>.google.protobuf.Int32Value int32_value = 1;</code>
       */
      public com.google.protobuf.Int32Value getInt32Value() {
        if (int32ValueBuilder_ == null) {
          return int32Value_ == null ? com.google.protobuf.Int32Value.getDefaultInstance() : int32Value_;
        } else {
          return int32ValueBuilder_.getMessage();
        }
      }
      /**
       * <code>.google.protobuf.Int32Value int32_value = 1;</code>
       */
      public Builder setInt32Value(com.google.protobuf.Int32Value value) {
        if (int32ValueBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          int32Value_ = value;
          onChanged();
        } else {
          int32ValueBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.google.protobuf.Int32Value int32_value = 1;</code>
       */
      public Builder setInt32Value(
          com.google.protobuf.Int32Value.Builder builderForValue) {
        if (int32ValueBuilder_ == null) {
          int32Value_ = builderForValue.build();
          onChanged();
        } else {
          int32ValueBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.google.protobuf.Int32Value int32_value = 1;</code>
       */
      public Builder mergeInt32Value(com.google.protobuf.Int32Value value) {
        if (int32ValueBuilder_ == null) {
          if (int32Value_ != null) {
            int32Value_ =
              com.google.protobuf.Int32Value.newBuilder(int32Value_).mergeFrom(value).buildPartial();
          } else {
            int32Value_ = value;
          }
          onChanged();
        } else {
          int32ValueBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.google.protobuf.Int32Value int32_value = 1;</code>
       */
      public Builder clearInt32Value() {
        if (int32ValueBuilder_ == null) {
          int32Value_ = null;
          onChanged();
        } else {
          int32Value_ = null;
          int32ValueBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.google.protobuf.Int32Value int32_value = 1;</code>
       */
      public com.google.protobuf.Int32Value.Builder getInt32ValueBuilder() {
        
        onChanged();
        return getInt32ValueFieldBuilder().getBuilder();
      }
      /**
       * <code>.google.protobuf.Int32Value int32_value = 1;</code>
       */
      public com.google.protobuf.Int32ValueOrBuilder getInt32ValueOrBuilder() {
        if (int32ValueBuilder_ != null) {
          return int32ValueBuilder_.getMessageOrBuilder();
        } else {
          return int32Value_ == null ?
              com.google.protobuf.Int32Value.getDefaultInstance() : int32Value_;
        }
      }
      /**
       * <code>.google.protobuf.Int32Value int32_value = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Int32Value, com.google.protobuf.Int32Value.Builder, com.google.protobuf.Int32ValueOrBuilder> 
          getInt32ValueFieldBuilder() {
        if (int32ValueBuilder_ == null) {
          int32ValueBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.Int32Value, com.google.protobuf.Int32Value.Builder, com.google.protobuf.Int32ValueOrBuilder>(
                  getInt32Value(),
                  getParentForChildren(),
                  isClean());
          int32Value_ = null;
        }
        return int32ValueBuilder_;
      }

      private com.google.protobuf.UInt32Value uint32Value_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.UInt32Value, com.google.protobuf.UInt32Value.Builder, com.google.protobuf.UInt32ValueOrBuilder> uint32ValueBuilder_;
      /**
       * <code>.google.protobuf.UInt32Value uint32_value = 2;</code>
       */
      public boolean hasUint32Value() {
        return uint32ValueBuilder_ != null || uint32Value_ != null;
      }
      /**
       * <code>.google.protobuf.UInt32Value uint32_value = 2;</code>
       */
      public com.google.protobuf.UInt32Value getUint32Value() {
        if (uint32ValueBuilder_ == null) {
          return uint32Value_ == null ? com.google.protobuf.UInt32Value.getDefaultInstance() : uint32Value_;
        } else {
          return uint32ValueBuilder_.getMessage();
        }
      }
      /**
       * <code>.google.protobuf.UInt32Value uint32_value = 2;</code>
       */
      public Builder setUint32Value(com.google.protobuf.UInt32Value value) {
        if (uint32ValueBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          uint32Value_ = value;
          onChanged();
        } else {
          uint32ValueBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.google.protobuf.UInt32Value uint32_value = 2;</code>
       */
      public Builder setUint32Value(
          com.google.protobuf.UInt32Value.Builder builderForValue) {
        if (uint32ValueBuilder_ == null) {
          uint32Value_ = builderForValue.build();
          onChanged();
        } else {
          uint32ValueBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.google.protobuf.UInt32Value uint32_value = 2;</code>
       */
      public Builder mergeUint32Value(com.google.protobuf.UInt32Value value) {
        if (uint32ValueBuilder_ == null) {
          if (uint32Value_ != null) {
            uint32Value_ =
              com.google.protobuf.UInt32Value.newBuilder(uint32Value_).mergeFrom(value).buildPartial();
          } else {
            uint32Value_ = value;
          }
          onChanged();
        } else {
          uint32ValueBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.google.protobuf.UInt32Value uint32_value = 2;</code>
       */
      public Builder clearUint32Value() {
        if (uint32ValueBuilder_ == null) {
          uint32Value_ = null;
          onChanged();
        } else {
          uint32Value_ = null;
          uint32ValueBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.google.protobuf.UInt32Value uint32_value = 2;</code>
       */
      public com.google.protobuf.UInt32Value.Builder getUint32ValueBuilder() {
        
        onChanged();
        return getUint32ValueFieldBuilder().getBuilder();
      }
      /**
       * <code>.google.protobuf.UInt32Value uint32_value = 2;</code>
       */
      public com.google.protobuf.UInt32ValueOrBuilder getUint32ValueOrBuilder() {
        if (uint32ValueBuilder_ != null) {
          return uint32ValueBuilder_.getMessageOrBuilder();
        } else {
          return uint32Value_ == null ?
              com.google.protobuf.UInt32Value.getDefaultInstance() : uint32Value_;
        }
      }
      /**
       * <code>.google.protobuf.UInt32Value uint32_value = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.UInt32Value, com.google.protobuf.UInt32Value.Builder, com.google.protobuf.UInt32ValueOrBuilder> 
          getUint32ValueFieldBuilder() {
        if (uint32ValueBuilder_ == null) {
          uint32ValueBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.UInt32Value, com.google.protobuf.UInt32Value.Builder, com.google.protobuf.UInt32ValueOrBuilder>(
                  getUint32Value(),
                  getParentForChildren(),
                  isClean());
          uint32Value_ = null;
        }
        return uint32ValueBuilder_;
      }

      private com.google.protobuf.Int64Value int64Value_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder> int64ValueBuilder_;
      /**
       * <code>.google.protobuf.Int64Value int64_value = 3;</code>
       */
      public boolean hasInt64Value() {
        return int64ValueBuilder_ != null || int64Value_ != null;
      }
      /**
       * <code>.google.protobuf.Int64Value int64_value = 3;</code>
       */
      public com.google.protobuf.Int64Value getInt64Value() {
        if (int64ValueBuilder_ == null) {
          return int64Value_ == null ? com.google.protobuf.Int64Value.getDefaultInstance() : int64Value_;
        } else {
          return int64ValueBuilder_.getMessage();
        }
      }
      /**
       * <code>.google.protobuf.Int64Value int64_value = 3;</code>
       */
      public Builder setInt64Value(com.google.protobuf.Int64Value value) {
        if (int64ValueBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          int64Value_ = value;
          onChanged();
        } else {
          int64ValueBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.google.protobuf.Int64Value int64_value = 3;</code>
       */
      public Builder setInt64Value(
          com.google.protobuf.Int64Value.Builder builderForValue) {
        if (int64ValueBuilder_ == null) {
          int64Value_ = builderForValue.build();
          onChanged();
        } else {
          int64ValueBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.google.protobuf.Int64Value int64_value = 3;</code>
       */
      public Builder mergeInt64Value(com.google.protobuf.Int64Value value) {
        if (int64ValueBuilder_ == null) {
          if (int64Value_ != null) {
            int64Value_ =
              com.google.protobuf.Int64Value.newBuilder(int64Value_).mergeFrom(value).buildPartial();
          } else {
            int64Value_ = value;
          }
          onChanged();
        } else {
          int64ValueBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.google.protobuf.Int64Value int64_value = 3;</code>
       */
      public Builder clearInt64Value() {
        if (int64ValueBuilder_ == null) {
          int64Value_ = null;
          onChanged();
        } else {
          int64Value_ = null;
          int64ValueBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.google.protobuf.Int64Value int64_value = 3;</code>
       */
      public com.google.protobuf.Int64Value.Builder getInt64ValueBuilder() {
        
        onChanged();
        return getInt64ValueFieldBuilder().getBuilder();
      }
      /**
       * <code>.google.protobuf.Int64Value int64_value = 3;</code>
       */
      public com.google.protobuf.Int64ValueOrBuilder getInt64ValueOrBuilder() {
        if (int64ValueBuilder_ != null) {
          return int64ValueBuilder_.getMessageOrBuilder();
        } else {
          return int64Value_ == null ?
              com.google.protobuf.Int64Value.getDefaultInstance() : int64Value_;
        }
      }
      /**
       * <code>.google.protobuf.Int64Value int64_value = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder> 
          getInt64ValueFieldBuilder() {
        if (int64ValueBuilder_ == null) {
          int64ValueBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder>(
                  getInt64Value(),
                  getParentForChildren(),
                  isClean());
          int64Value_ = null;
        }
        return int64ValueBuilder_;
      }

      private com.google.protobuf.UInt64Value uint64Value_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.UInt64Value, com.google.protobuf.UInt64Value.Builder, com.google.protobuf.UInt64ValueOrBuilder> uint64ValueBuilder_;
      /**
       * <code>.google.protobuf.UInt64Value uint64_value = 4;</code>
       */
      public boolean hasUint64Value() {
        return uint64ValueBuilder_ != null || uint64Value_ != null;
      }
      /**
       * <code>.google.protobuf.UInt64Value uint64_value = 4;</code>
       */
      public com.google.protobuf.UInt64Value getUint64Value() {
        if (uint64ValueBuilder_ == null) {
          return uint64Value_ == null ? com.google.protobuf.UInt64Value.getDefaultInstance() : uint64Value_;
        } else {
          return uint64ValueBuilder_.getMessage();
        }
      }
      /**
       * <code>.google.protobuf.UInt64Value uint64_value = 4;</code>
       */
      public Builder setUint64Value(com.google.protobuf.UInt64Value value) {
        if (uint64ValueBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          uint64Value_ = value;
          onChanged();
        } else {
          uint64ValueBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.google.protobuf.UInt64Value uint64_value = 4;</code>
       */
      public Builder setUint64Value(
          com.google.protobuf.UInt64Value.Builder builderForValue) {
        if (uint64ValueBuilder_ == null) {
          uint64Value_ = builderForValue.build();
          onChanged();
        } else {
          uint64ValueBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.google.protobuf.UInt64Value uint64_value = 4;</code>
       */
      public Builder mergeUint64Value(com.google.protobuf.UInt64Value value) {
        if (uint64ValueBuilder_ == null) {
          if (uint64Value_ != null) {
            uint64Value_ =
              com.google.protobuf.UInt64Value.newBuilder(uint64Value_).mergeFrom(value).buildPartial();
          } else {
            uint64Value_ = value;
          }
          onChanged();
        } else {
          uint64ValueBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.google.protobuf.UInt64Value uint64_value = 4;</code>
       */
      public Builder clearUint64Value() {
        if (uint64ValueBuilder_ == null) {
          uint64Value_ = null;
          onChanged();
        } else {
          uint64Value_ = null;
          uint64ValueBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.google.protobuf.UInt64Value uint64_value = 4;</code>
       */
      public com.google.protobuf.UInt64Value.Builder getUint64ValueBuilder() {
        
        onChanged();
        return getUint64ValueFieldBuilder().getBuilder();
      }
      /**
       * <code>.google.protobuf.UInt64Value uint64_value = 4;</code>
       */
      public com.google.protobuf.UInt64ValueOrBuilder getUint64ValueOrBuilder() {
        if (uint64ValueBuilder_ != null) {
          return uint64ValueBuilder_.getMessageOrBuilder();
        } else {
          return uint64Value_ == null ?
              com.google.protobuf.UInt64Value.getDefaultInstance() : uint64Value_;
        }
      }
      /**
       * <code>.google.protobuf.UInt64Value uint64_value = 4;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.UInt64Value, com.google.protobuf.UInt64Value.Builder, com.google.protobuf.UInt64ValueOrBuilder> 
          getUint64ValueFieldBuilder() {
        if (uint64ValueBuilder_ == null) {
          uint64ValueBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.UInt64Value, com.google.protobuf.UInt64Value.Builder, com.google.protobuf.UInt64ValueOrBuilder>(
                  getUint64Value(),
                  getParentForChildren(),
                  isClean());
          uint64Value_ = null;
        }
        return uint64ValueBuilder_;
      }

      private com.google.protobuf.FloatValue floatValue_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.FloatValue, com.google.protobuf.FloatValue.Builder, com.google.protobuf.FloatValueOrBuilder> floatValueBuilder_;
      /**
       * <code>.google.protobuf.FloatValue float_value = 5;</code>
       */
      public boolean hasFloatValue() {
        return floatValueBuilder_ != null || floatValue_ != null;
      }
      /**
       * <code>.google.protobuf.FloatValue float_value = 5;</code>
       */
      public com.google.protobuf.FloatValue getFloatValue() {
        if (floatValueBuilder_ == null) {
          return floatValue_ == null ? com.google.protobuf.FloatValue.getDefaultInstance() : floatValue_;
        } else {
          return floatValueBuilder_.getMessage();
        }
      }
      /**
       * <code>.google.protobuf.FloatValue float_value = 5;</code>
       */
      public Builder setFloatValue(com.google.protobuf.FloatValue value) {
        if (floatValueBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          floatValue_ = value;
          onChanged();
        } else {
          floatValueBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.google.protobuf.FloatValue float_value = 5;</code>
       */
      public Builder setFloatValue(
          com.google.protobuf.FloatValue.Builder builderForValue) {
        if (floatValueBuilder_ == null) {
          floatValue_ = builderForValue.build();
          onChanged();
        } else {
          floatValueBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.google.protobuf.FloatValue float_value = 5;</code>
       */
      public Builder mergeFloatValue(com.google.protobuf.FloatValue value) {
        if (floatValueBuilder_ == null) {
          if (floatValue_ != null) {
            floatValue_ =
              com.google.protobuf.FloatValue.newBuilder(floatValue_).mergeFrom(value).buildPartial();
          } else {
            floatValue_ = value;
          }
          onChanged();
        } else {
          floatValueBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.google.protobuf.FloatValue float_value = 5;</code>
       */
      public Builder clearFloatValue() {
        if (floatValueBuilder_ == null) {
          floatValue_ = null;
          onChanged();
        } else {
          floatValue_ = null;
          floatValueBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.google.protobuf.FloatValue float_value = 5;</code>
       */
      public com.google.protobuf.FloatValue.Builder getFloatValueBuilder() {
        
        onChanged();
        return getFloatValueFieldBuilder().getBuilder();
      }
      /**
       * <code>.google.protobuf.FloatValue float_value = 5;</code>
       */
      public com.google.protobuf.FloatValueOrBuilder getFloatValueOrBuilder() {
        if (floatValueBuilder_ != null) {
          return floatValueBuilder_.getMessageOrBuilder();
        } else {
          return floatValue_ == null ?
              com.google.protobuf.FloatValue.getDefaultInstance() : floatValue_;
        }
      }
      /**
       * <code>.google.protobuf.FloatValue float_value = 5;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.FloatValue, com.google.protobuf.FloatValue.Builder, com.google.protobuf.FloatValueOrBuilder> 
          getFloatValueFieldBuilder() {
        if (floatValueBuilder_ == null) {
          floatValueBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.FloatValue, com.google.protobuf.FloatValue.Builder, com.google.protobuf.FloatValueOrBuilder>(
                  getFloatValue(),
                  getParentForChildren(),
                  isClean());
          floatValue_ = null;
        }
        return floatValueBuilder_;
      }

      private com.google.protobuf.DoubleValue doubleValue_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.DoubleValue, com.google.protobuf.DoubleValue.Builder, com.google.protobuf.DoubleValueOrBuilder> doubleValueBuilder_;
      /**
       * <code>.google.protobuf.DoubleValue double_value = 6;</code>
       */
      public boolean hasDoubleValue() {
        return doubleValueBuilder_ != null || doubleValue_ != null;
      }
      /**
       * <code>.google.protobuf.DoubleValue double_value = 6;</code>
       */
      public com.google.protobuf.DoubleValue getDoubleValue() {
        if (doubleValueBuilder_ == null) {
          return doubleValue_ == null ? com.google.protobuf.DoubleValue.getDefaultInstance() : doubleValue_;
        } else {
          return doubleValueBuilder_.getMessage();
        }
      }
      /**
       * <code>.google.protobuf.DoubleValue double_value = 6;</code>
       */
      public Builder setDoubleValue(com.google.protobuf.DoubleValue value) {
        if (doubleValueBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          doubleValue_ = value;
          onChanged();
        } else {
          doubleValueBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.google.protobuf.DoubleValue double_value = 6;</code>
       */
      public Builder setDoubleValue(
          com.google.protobuf.DoubleValue.Builder builderForValue) {
        if (doubleValueBuilder_ == null) {
          doubleValue_ = builderForValue.build();
          onChanged();
        } else {
          doubleValueBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.google.protobuf.DoubleValue double_value = 6;</code>
       */
      public Builder mergeDoubleValue(com.google.protobuf.DoubleValue value) {
        if (doubleValueBuilder_ == null) {
          if (doubleValue_ != null) {
            doubleValue_ =
              com.google.protobuf.DoubleValue.newBuilder(doubleValue_).mergeFrom(value).buildPartial();
          } else {
            doubleValue_ = value;
          }
          onChanged();
        } else {
          doubleValueBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.google.protobuf.DoubleValue double_value = 6;</code>
       */
      public Builder clearDoubleValue() {
        if (doubleValueBuilder_ == null) {
          doubleValue_ = null;
          onChanged();
        } else {
          doubleValue_ = null;
          doubleValueBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.google.protobuf.DoubleValue double_value = 6;</code>
       */
      public com.google.protobuf.DoubleValue.Builder getDoubleValueBuilder() {
        
        onChanged();
        return getDoubleValueFieldBuilder().getBuilder();
      }
      /**
       * <code>.google.protobuf.DoubleValue double_value = 6;</code>
       */
      public com.google.protobuf.DoubleValueOrBuilder getDoubleValueOrBuilder() {
        if (doubleValueBuilder_ != null) {
          return doubleValueBuilder_.getMessageOrBuilder();
        } else {
          return doubleValue_ == null ?
              com.google.protobuf.DoubleValue.getDefaultInstance() : doubleValue_;
        }
      }
      /**
       * <code>.google.protobuf.DoubleValue double_value = 6;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.DoubleValue, com.google.protobuf.DoubleValue.Builder, com.google.protobuf.DoubleValueOrBuilder> 
          getDoubleValueFieldBuilder() {
        if (doubleValueBuilder_ == null) {
          doubleValueBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.DoubleValue, com.google.protobuf.DoubleValue.Builder, com.google.protobuf.DoubleValueOrBuilder>(
                  getDoubleValue(),
                  getParentForChildren(),
                  isClean());
          doubleValue_ = null;
        }
        return doubleValueBuilder_;
      }

      private com.google.protobuf.BoolValue boolValue_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.BoolValue, com.google.protobuf.BoolValue.Builder, com.google.protobuf.BoolValueOrBuilder> boolValueBuilder_;
      /**
       * <code>.google.protobuf.BoolValue bool_value = 7;</code>
       */
      public boolean hasBoolValue() {
        return boolValueBuilder_ != null || boolValue_ != null;
      }
      /**
       * <code>.google.protobuf.BoolValue bool_value = 7;</code>
       */
      public com.google.protobuf.BoolValue getBoolValue() {
        if (boolValueBuilder_ == null) {
          return boolValue_ == null ? com.google.protobuf.BoolValue.getDefaultInstance() : boolValue_;
        } else {
          return boolValueBuilder_.getMessage();
        }
      }
      /**
       * <code>.google.protobuf.BoolValue bool_value = 7;</code>
       */
      public Builder setBoolValue(com.google.protobuf.BoolValue value) {
        if (boolValueBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          boolValue_ = value;
          onChanged();
        } else {
          boolValueBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.google.protobuf.BoolValue bool_value = 7;</code>
       */
      public Builder setBoolValue(
          com.google.protobuf.BoolValue.Builder builderForValue) {
        if (boolValueBuilder_ == null) {
          boolValue_ = builderForValue.build();
          onChanged();
        } else {
          boolValueBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.google.protobuf.BoolValue bool_value = 7;</code>
       */
      public Builder mergeBoolValue(com.google.protobuf.BoolValue value) {
        if (boolValueBuilder_ == null) {
          if (boolValue_ != null) {
            boolValue_ =
              com.google.protobuf.BoolValue.newBuilder(boolValue_).mergeFrom(value).buildPartial();
          } else {
            boolValue_ = value;
          }
          onChanged();
        } else {
          boolValueBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.google.protobuf.BoolValue bool_value = 7;</code>
       */
      public Builder clearBoolValue() {
        if (boolValueBuilder_ == null) {
          boolValue_ = null;
          onChanged();
        } else {
          boolValue_ = null;
          boolValueBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.google.protobuf.BoolValue bool_value = 7;</code>
       */
      public com.google.protobuf.BoolValue.Builder getBoolValueBuilder() {
        
        onChanged();
        return getBoolValueFieldBuilder().getBuilder();
      }
      /**
       * <code>.google.protobuf.BoolValue bool_value = 7;</code>
       */
      public com.google.protobuf.BoolValueOrBuilder getBoolValueOrBuilder() {
        if (boolValueBuilder_ != null) {
          return boolValueBuilder_.getMessageOrBuilder();
        } else {
          return boolValue_ == null ?
              com.google.protobuf.BoolValue.getDefaultInstance() : boolValue_;
        }
      }
      /**
       * <code>.google.protobuf.BoolValue bool_value = 7;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.BoolValue, com.google.protobuf.BoolValue.Builder, com.google.protobuf.BoolValueOrBuilder> 
          getBoolValueFieldBuilder() {
        if (boolValueBuilder_ == null) {
          boolValueBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.BoolValue, com.google.protobuf.BoolValue.Builder, com.google.protobuf.BoolValueOrBuilder>(
                  getBoolValue(),
                  getParentForChildren(),
                  isClean());
          boolValue_ = null;
        }
        return boolValueBuilder_;
      }

      private com.google.protobuf.StringValue stringValue_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.StringValue, com.google.protobuf.StringValue.Builder, com.google.protobuf.StringValueOrBuilder> stringValueBuilder_;
      /**
       * <code>.google.protobuf.StringValue string_value = 8;</code>
       */
      public boolean hasStringValue() {
        return stringValueBuilder_ != null || stringValue_ != null;
      }
      /**
       * <code>.google.protobuf.StringValue string_value = 8;</code>
       */
      public com.google.protobuf.StringValue getStringValue() {
        if (stringValueBuilder_ == null) {
          return stringValue_ == null ? com.google.protobuf.StringValue.getDefaultInstance() : stringValue_;
        } else {
          return stringValueBuilder_.getMessage();
        }
      }
      /**
       * <code>.google.protobuf.StringValue string_value = 8;</code>
       */
      public Builder setStringValue(com.google.protobuf.StringValue value) {
        if (stringValueBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          stringValue_ = value;
          onChanged();
        } else {
          stringValueBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.google.protobuf.StringValue string_value = 8;</code>
       */
      public Builder setStringValue(
          com.google.protobuf.StringValue.Builder builderForValue) {
        if (stringValueBuilder_ == null) {
          stringValue_ = builderForValue.build();
          onChanged();
        } else {
          stringValueBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.google.protobuf.StringValue string_value = 8;</code>
       */
      public Builder mergeStringValue(com.google.protobuf.StringValue value) {
        if (stringValueBuilder_ == null) {
          if (stringValue_ != null) {
            stringValue_ =
              com.google.protobuf.StringValue.newBuilder(stringValue_).mergeFrom(value).buildPartial();
          } else {
            stringValue_ = value;
          }
          onChanged();
        } else {
          stringValueBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.google.protobuf.StringValue string_value = 8;</code>
       */
      public Builder clearStringValue() {
        if (stringValueBuilder_ == null) {
          stringValue_ = null;
          onChanged();
        } else {
          stringValue_ = null;
          stringValueBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.google.protobuf.StringValue string_value = 8;</code>
       */
      public com.google.protobuf.StringValue.Builder getStringValueBuilder() {
        
        onChanged();
        return getStringValueFieldBuilder().getBuilder();
      }
      /**
       * <code>.google.protobuf.StringValue string_value = 8;</code>
       */
      public com.google.protobuf.StringValueOrBuilder getStringValueOrBuilder() {
        if (stringValueBuilder_ != null) {
          return stringValueBuilder_.getMessageOrBuilder();
        } else {
          return stringValue_ == null ?
              com.google.protobuf.StringValue.getDefaultInstance() : stringValue_;
        }
      }
      /**
       * <code>.google.protobuf.StringValue string_value = 8;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.StringValue, com.google.protobuf.StringValue.Builder, com.google.protobuf.StringValueOrBuilder> 
          getStringValueFieldBuilder() {
        if (stringValueBuilder_ == null) {
          stringValueBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.StringValue, com.google.protobuf.StringValue.Builder, com.google.protobuf.StringValueOrBuilder>(
                  getStringValue(),
                  getParentForChildren(),
                  isClean());
          stringValue_ = null;
        }
        return stringValueBuilder_;
      }

      private com.google.protobuf.BytesValue bytesValue_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.BytesValue, com.google.protobuf.BytesValue.Builder, com.google.protobuf.BytesValueOrBuilder> bytesValueBuilder_;
      /**
       * <code>.google.protobuf.BytesValue bytes_value = 9;</code>
       */
      public boolean hasBytesValue() {
        return bytesValueBuilder_ != null || bytesValue_ != null;
      }
      /**
       * <code>.google.protobuf.BytesValue bytes_value = 9;</code>
       */
      public com.google.protobuf.BytesValue getBytesValue() {
        if (bytesValueBuilder_ == null) {
          return bytesValue_ == null ? com.google.protobuf.BytesValue.getDefaultInstance() : bytesValue_;
        } else {
          return bytesValueBuilder_.getMessage();
        }
      }
      /**
       * <code>.google.protobuf.BytesValue bytes_value = 9;</code>
       */
      public Builder setBytesValue(com.google.protobuf.BytesValue value) {
        if (bytesValueBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          bytesValue_ = value;
          onChanged();
        } else {
          bytesValueBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.google.protobuf.BytesValue bytes_value = 9;</code>
       */
      public Builder setBytesValue(
          com.google.protobuf.BytesValue.Builder builderForValue) {
        if (bytesValueBuilder_ == null) {
          bytesValue_ = builderForValue.build();
          onChanged();
        } else {
          bytesValueBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.google.protobuf.BytesValue bytes_value = 9;</code>
       */
      public Builder mergeBytesValue(com.google.protobuf.BytesValue value) {
        if (bytesValueBuilder_ == null) {
          if (bytesValue_ != null) {
            bytesValue_ =
              com.google.protobuf.BytesValue.newBuilder(bytesValue_).mergeFrom(value).buildPartial();
          } else {
            bytesValue_ = value;
          }
          onChanged();
        } else {
          bytesValueBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.google.protobuf.BytesValue bytes_value = 9;</code>
       */
      public Builder clearBytesValue() {
        if (bytesValueBuilder_ == null) {
          bytesValue_ = null;
          onChanged();
        } else {
          bytesValue_ = null;
          bytesValueBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.google.protobuf.BytesValue bytes_value = 9;</code>
       */
      public com.google.protobuf.BytesValue.Builder getBytesValueBuilder() {
        
        onChanged();
        return getBytesValueFieldBuilder().getBuilder();
      }
      /**
       * <code>.google.protobuf.BytesValue bytes_value = 9;</code>
       */
      public com.google.protobuf.BytesValueOrBuilder getBytesValueOrBuilder() {
        if (bytesValueBuilder_ != null) {
          return bytesValueBuilder_.getMessageOrBuilder();
        } else {
          return bytesValue_ == null ?
              com.google.protobuf.BytesValue.getDefaultInstance() : bytesValue_;
        }
      }
      /**
       * <code>.google.protobuf.BytesValue bytes_value = 9;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.BytesValue, com.google.protobuf.BytesValue.Builder, com.google.protobuf.BytesValueOrBuilder> 
          getBytesValueFieldBuilder() {
        if (bytesValueBuilder_ == null) {
          bytesValueBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.BytesValue, com.google.protobuf.BytesValue.Builder, com.google.protobuf.BytesValueOrBuilder>(
                  getBytesValue(),
                  getParentForChildren(),
                  isClean());
          bytesValue_ = null;
        }
        return bytesValueBuilder_;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:json_test.TestWrappers)
    }

    // @@protoc_insertion_point(class_scope:json_test.TestWrappers)
    private static final com.google.protobuf.util.JsonTestProto.TestWrappers DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.google.protobuf.util.JsonTestProto.TestWrappers();
    }

    public static com.google.protobuf.util.JsonTestProto.TestWrappers getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<TestWrappers>
        PARSER = new com.google.protobuf.AbstractParser<TestWrappers>() {
      public TestWrappers parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new TestWrappers(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<TestWrappers> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<TestWrappers> getParserForType() {
      return PARSER;
    }

    public com.google.protobuf.util.JsonTestProto.TestWrappers getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface TestTimestampOrBuilder extends
      // @@protoc_insertion_point(interface_extends:json_test.TestTimestamp)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>.google.protobuf.Timestamp timestamp_value = 1;</code>
     */
    boolean hasTimestampValue();
    /**
     * <code>.google.protobuf.Timestamp timestamp_value = 1;</code>
     */
    com.google.protobuf.Timestamp getTimestampValue();
    /**
     * <code>.google.protobuf.Timestamp timestamp_value = 1;</code>
     */
    com.google.protobuf.TimestampOrBuilder getTimestampValueOrBuilder();
  }
  /**
   * Protobuf type {@code json_test.TestTimestamp}
   */
  public  static final class TestTimestamp extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:json_test.TestTimestamp)
      TestTimestampOrBuilder {
    // Use TestTimestamp.newBuilder() to construct.
    private TestTimestamp(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private TestTimestamp() {
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private TestTimestamp(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              com.google.protobuf.Timestamp.Builder subBuilder = null;
              if (timestampValue_ != null) {
                subBuilder = timestampValue_.toBuilder();
              }
              timestampValue_ = input.readMessage(com.google.protobuf.Timestamp.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(timestampValue_);
                timestampValue_ = subBuilder.buildPartial();
              }

              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.google.protobuf.util.JsonTestProto.internal_static_json_test_TestTimestamp_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.protobuf.util.JsonTestProto.internal_static_json_test_TestTimestamp_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.protobuf.util.JsonTestProto.TestTimestamp.class, com.google.protobuf.util.JsonTestProto.TestTimestamp.Builder.class);
    }

    public static final int TIMESTAMP_VALUE_FIELD_NUMBER = 1;
    private com.google.protobuf.Timestamp timestampValue_;
    /**
     * <code>.google.protobuf.Timestamp timestamp_value = 1;</code>
     */
    public boolean hasTimestampValue() {
      return timestampValue_ != null;
    }
    /**
     * <code>.google.protobuf.Timestamp timestamp_value = 1;</code>
     */
    public com.google.protobuf.Timestamp getTimestampValue() {
      return timestampValue_ == null ? com.google.protobuf.Timestamp.getDefaultInstance() : timestampValue_;
    }
    /**
     * <code>.google.protobuf.Timestamp timestamp_value = 1;</code>
     */
    public com.google.protobuf.TimestampOrBuilder getTimestampValueOrBuilder() {
      return getTimestampValue();
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (timestampValue_ != null) {
        output.writeMessage(1, getTimestampValue());
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (timestampValue_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getTimestampValue());
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.google.protobuf.util.JsonTestProto.TestTimestamp)) {
        return super.equals(obj);
      }
      com.google.protobuf.util.JsonTestProto.TestTimestamp other = (com.google.protobuf.util.JsonTestProto.TestTimestamp) obj;

      boolean result = true;
      result = result && (hasTimestampValue() == other.hasTimestampValue());
      if (hasTimestampValue()) {
        result = result && getTimestampValue()
            .equals(other.getTimestampValue());
      }
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasTimestampValue()) {
        hash = (37 * hash) + TIMESTAMP_VALUE_FIELD_NUMBER;
        hash = (53 * hash) + getTimestampValue().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.google.protobuf.util.JsonTestProto.TestTimestamp parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.google.protobuf.util.JsonTestProto.TestTimestamp parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.google.protobuf.util.JsonTestProto.TestTimestamp parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.google.protobuf.util.JsonTestProto.TestTimestamp parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.google.protobuf.util.JsonTestProto.TestTimestamp parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.google.protobuf.util.JsonTestProto.TestTimestamp parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.google.protobuf.util.JsonTestProto.TestTimestamp parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.google.protobuf.util.JsonTestProto.TestTimestamp parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.google.protobuf.util.JsonTestProto.TestTimestamp parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.google.protobuf.util.JsonTestProto.TestTimestamp parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.google.protobuf.util.JsonTestProto.TestTimestamp parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.google.protobuf.util.JsonTestProto.TestTimestamp parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.google.protobuf.util.JsonTestProto.TestTimestamp prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code json_test.TestTimestamp}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:json_test.TestTimestamp)
        com.google.protobuf.util.JsonTestProto.TestTimestampOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.google.protobuf.util.JsonTestProto.internal_static_json_test_TestTimestamp_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.google.protobuf.util.JsonTestProto.internal_static_json_test_TestTimestamp_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.google.protobuf.util.JsonTestProto.TestTimestamp.class, com.google.protobuf.util.JsonTestProto.TestTimestamp.Builder.class);
      }

      // Construct using com.google.protobuf.util.JsonTestProto.TestTimestamp.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        if (timestampValueBuilder_ == null) {
          timestampValue_ = null;
        } else {
          timestampValue_ = null;
          timestampValueBuilder_ = null;
        }
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.google.protobuf.util.JsonTestProto.internal_static_json_test_TestTimestamp_descriptor;
      }

      public com.google.protobuf.util.JsonTestProto.TestTimestamp getDefaultInstanceForType() {
        return com.google.protobuf.util.JsonTestProto.TestTimestamp.getDefaultInstance();
      }

      public com.google.protobuf.util.JsonTestProto.TestTimestamp build() {
        com.google.protobuf.util.JsonTestProto.TestTimestamp result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.google.protobuf.util.JsonTestProto.TestTimestamp buildPartial() {
        com.google.protobuf.util.JsonTestProto.TestTimestamp result = new com.google.protobuf.util.JsonTestProto.TestTimestamp(this);
        if (timestampValueBuilder_ == null) {
          result.timestampValue_ = timestampValue_;
        } else {
          result.timestampValue_ = timestampValueBuilder_.build();
        }
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.google.protobuf.util.JsonTestProto.TestTimestamp) {
          return mergeFrom((com.google.protobuf.util.JsonTestProto.TestTimestamp)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.google.protobuf.util.JsonTestProto.TestTimestamp other) {
        if (other == com.google.protobuf.util.JsonTestProto.TestTimestamp.getDefaultInstance()) return this;
        if (other.hasTimestampValue()) {
          mergeTimestampValue(other.getTimestampValue());
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.util.JsonTestProto.TestTimestamp parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.google.protobuf.util.JsonTestProto.TestTimestamp) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private com.google.protobuf.Timestamp timestampValue_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder> timestampValueBuilder_;
      /**
       * <code>.google.protobuf.Timestamp timestamp_value = 1;</code>
       */
      public boolean hasTimestampValue() {
        return timestampValueBuilder_ != null || timestampValue_ != null;
      }
      /**
       * <code>.google.protobuf.Timestamp timestamp_value = 1;</code>
       */
      public com.google.protobuf.Timestamp getTimestampValue() {
        if (timestampValueBuilder_ == null) {
          return timestampValue_ == null ? com.google.protobuf.Timestamp.getDefaultInstance() : timestampValue_;
        } else {
          return timestampValueBuilder_.getMessage();
        }
      }
      /**
       * <code>.google.protobuf.Timestamp timestamp_value = 1;</code>
       */
      public Builder setTimestampValue(com.google.protobuf.Timestamp value) {
        if (timestampValueBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          timestampValue_ = value;
          onChanged();
        } else {
          timestampValueBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.google.protobuf.Timestamp timestamp_value = 1;</code>
       */
      public Builder setTimestampValue(
          com.google.protobuf.Timestamp.Builder builderForValue) {
        if (timestampValueBuilder_ == null) {
          timestampValue_ = builderForValue.build();
          onChanged();
        } else {
          timestampValueBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.google.protobuf.Timestamp timestamp_value = 1;</code>
       */
      public Builder mergeTimestampValue(com.google.protobuf.Timestamp value) {
        if (timestampValueBuilder_ == null) {
          if (timestampValue_ != null) {
            timestampValue_ =
              com.google.protobuf.Timestamp.newBuilder(timestampValue_).mergeFrom(value).buildPartial();
          } else {
            timestampValue_ = value;
          }
          onChanged();
        } else {
          timestampValueBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.google.protobuf.Timestamp timestamp_value = 1;</code>
       */
      public Builder clearTimestampValue() {
        if (timestampValueBuilder_ == null) {
          timestampValue_ = null;
          onChanged();
        } else {
          timestampValue_ = null;
          timestampValueBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.google.protobuf.Timestamp timestamp_value = 1;</code>
       */
      public com.google.protobuf.Timestamp.Builder getTimestampValueBuilder() {
        
        onChanged();
        return getTimestampValueFieldBuilder().getBuilder();
      }
      /**
       * <code>.google.protobuf.Timestamp timestamp_value = 1;</code>
       */
      public com.google.protobuf.TimestampOrBuilder getTimestampValueOrBuilder() {
        if (timestampValueBuilder_ != null) {
          return timestampValueBuilder_.getMessageOrBuilder();
        } else {
          return timestampValue_ == null ?
              com.google.protobuf.Timestamp.getDefaultInstance() : timestampValue_;
        }
      }
      /**
       * <code>.google.protobuf.Timestamp timestamp_value = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder> 
          getTimestampValueFieldBuilder() {
        if (timestampValueBuilder_ == null) {
          timestampValueBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder>(
                  getTimestampValue(),
                  getParentForChildren(),
                  isClean());
          timestampValue_ = null;
        }
        return timestampValueBuilder_;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:json_test.TestTimestamp)
    }

    // @@protoc_insertion_point(class_scope:json_test.TestTimestamp)
    private static final com.google.protobuf.util.JsonTestProto.TestTimestamp DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.google.protobuf.util.JsonTestProto.TestTimestamp();
    }

    public static com.google.protobuf.util.JsonTestProto.TestTimestamp getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<TestTimestamp>
        PARSER = new com.google.protobuf.AbstractParser<TestTimestamp>() {
      public TestTimestamp parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new TestTimestamp(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<TestTimestamp> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<TestTimestamp> getParserForType() {
      return PARSER;
    }

    public com.google.protobuf.util.JsonTestProto.TestTimestamp getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface TestDurationOrBuilder extends
      // @@protoc_insertion_point(interface_extends:json_test.TestDuration)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>.google.protobuf.Duration duration_value = 1;</code>
     */
    boolean hasDurationValue();
    /**
     * <code>.google.protobuf.Duration duration_value = 1;</code>
     */
    com.google.protobuf.Duration getDurationValue();
    /**
     * <code>.google.protobuf.Duration duration_value = 1;</code>
     */
    com.google.protobuf.DurationOrBuilder getDurationValueOrBuilder();
  }
  /**
   * Protobuf type {@code json_test.TestDuration}
   */
  public  static final class TestDuration extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:json_test.TestDuration)
      TestDurationOrBuilder {
    // Use TestDuration.newBuilder() to construct.
    private TestDuration(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private TestDuration() {
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private TestDuration(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              com.google.protobuf.Duration.Builder subBuilder = null;
              if (durationValue_ != null) {
                subBuilder = durationValue_.toBuilder();
              }
              durationValue_ = input.readMessage(com.google.protobuf.Duration.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(durationValue_);
                durationValue_ = subBuilder.buildPartial();
              }

              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.google.protobuf.util.JsonTestProto.internal_static_json_test_TestDuration_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.protobuf.util.JsonTestProto.internal_static_json_test_TestDuration_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.protobuf.util.JsonTestProto.TestDuration.class, com.google.protobuf.util.JsonTestProto.TestDuration.Builder.class);
    }

    public static final int DURATION_VALUE_FIELD_NUMBER = 1;
    private com.google.protobuf.Duration durationValue_;
    /**
     * <code>.google.protobuf.Duration duration_value = 1;</code>
     */
    public boolean hasDurationValue() {
      return durationValue_ != null;
    }
    /**
     * <code>.google.protobuf.Duration duration_value = 1;</code>
     */
    public com.google.protobuf.Duration getDurationValue() {
      return durationValue_ == null ? com.google.protobuf.Duration.getDefaultInstance() : durationValue_;
    }
    /**
     * <code>.google.protobuf.Duration duration_value = 1;</code>
     */
    public com.google.protobuf.DurationOrBuilder getDurationValueOrBuilder() {
      return getDurationValue();
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (durationValue_ != null) {
        output.writeMessage(1, getDurationValue());
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (durationValue_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getDurationValue());
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.google.protobuf.util.JsonTestProto.TestDuration)) {
        return super.equals(obj);
      }
      com.google.protobuf.util.JsonTestProto.TestDuration other = (com.google.protobuf.util.JsonTestProto.TestDuration) obj;

      boolean result = true;
      result = result && (hasDurationValue() == other.hasDurationValue());
      if (hasDurationValue()) {
        result = result && getDurationValue()
            .equals(other.getDurationValue());
      }
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasDurationValue()) {
        hash = (37 * hash) + DURATION_VALUE_FIELD_NUMBER;
        hash = (53 * hash) + getDurationValue().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.google.protobuf.util.JsonTestProto.TestDuration parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.google.protobuf.util.JsonTestProto.TestDuration parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.google.protobuf.util.JsonTestProto.TestDuration parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.google.protobuf.util.JsonTestProto.TestDuration parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.google.protobuf.util.JsonTestProto.TestDuration parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.google.protobuf.util.JsonTestProto.TestDuration parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.google.protobuf.util.JsonTestProto.TestDuration parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.google.protobuf.util.JsonTestProto.TestDuration parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.google.protobuf.util.JsonTestProto.TestDuration parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.google.protobuf.util.JsonTestProto.TestDuration parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.google.protobuf.util.JsonTestProto.TestDuration parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.google.protobuf.util.JsonTestProto.TestDuration parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.google.protobuf.util.JsonTestProto.TestDuration prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code json_test.TestDuration}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:json_test.TestDuration)
        com.google.protobuf.util.JsonTestProto.TestDurationOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.google.protobuf.util.JsonTestProto.internal_static_json_test_TestDuration_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.google.protobuf.util.JsonTestProto.internal_static_json_test_TestDuration_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.google.protobuf.util.JsonTestProto.TestDuration.class, com.google.protobuf.util.JsonTestProto.TestDuration.Builder.class);
      }

      // Construct using com.google.protobuf.util.JsonTestProto.TestDuration.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        if (durationValueBuilder_ == null) {
          durationValue_ = null;
        } else {
          durationValue_ = null;
          durationValueBuilder_ = null;
        }
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.google.protobuf.util.JsonTestProto.internal_static_json_test_TestDuration_descriptor;
      }

      public com.google.protobuf.util.JsonTestProto.TestDuration getDefaultInstanceForType() {
        return com.google.protobuf.util.JsonTestProto.TestDuration.getDefaultInstance();
      }

      public com.google.protobuf.util.JsonTestProto.TestDuration build() {
        com.google.protobuf.util.JsonTestProto.TestDuration result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.google.protobuf.util.JsonTestProto.TestDuration buildPartial() {
        com.google.protobuf.util.JsonTestProto.TestDuration result = new com.google.protobuf.util.JsonTestProto.TestDuration(this);
        if (durationValueBuilder_ == null) {
          result.durationValue_ = durationValue_;
        } else {
          result.durationValue_ = durationValueBuilder_.build();
        }
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.google.protobuf.util.JsonTestProto.TestDuration) {
          return mergeFrom((com.google.protobuf.util.JsonTestProto.TestDuration)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.google.protobuf.util.JsonTestProto.TestDuration other) {
        if (other == com.google.protobuf.util.JsonTestProto.TestDuration.getDefaultInstance()) return this;
        if (other.hasDurationValue()) {
          mergeDurationValue(other.getDurationValue());
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.util.JsonTestProto.TestDuration parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.google.protobuf.util.JsonTestProto.TestDuration) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private com.google.protobuf.Duration durationValue_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Duration, com.google.protobuf.Duration.Builder, com.google.protobuf.DurationOrBuilder> durationValueBuilder_;
      /**
       * <code>.google.protobuf.Duration duration_value = 1;</code>
       */
      public boolean hasDurationValue() {
        return durationValueBuilder_ != null || durationValue_ != null;
      }
      /**
       * <code>.google.protobuf.Duration duration_value = 1;</code>
       */
      public com.google.protobuf.Duration getDurationValue() {
        if (durationValueBuilder_ == null) {
          return durationValue_ == null ? com.google.protobuf.Duration.getDefaultInstance() : durationValue_;
        } else {
          return durationValueBuilder_.getMessage();
        }
      }
      /**
       * <code>.google.protobuf.Duration duration_value = 1;</code>
       */
      public Builder setDurationValue(com.google.protobuf.Duration value) {
        if (durationValueBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          durationValue_ = value;
          onChanged();
        } else {
          durationValueBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.google.protobuf.Duration duration_value = 1;</code>
       */
      public Builder setDurationValue(
          com.google.protobuf.Duration.Builder builderForValue) {
        if (durationValueBuilder_ == null) {
          durationValue_ = builderForValue.build();
          onChanged();
        } else {
          durationValueBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.google.protobuf.Duration duration_value = 1;</code>
       */
      public Builder mergeDurationValue(com.google.protobuf.Duration value) {
        if (durationValueBuilder_ == null) {
          if (durationValue_ != null) {
            durationValue_ =
              com.google.protobuf.Duration.newBuilder(durationValue_).mergeFrom(value).buildPartial();
          } else {
            durationValue_ = value;
          }
          onChanged();
        } else {
          durationValueBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.google.protobuf.Duration duration_value = 1;</code>
       */
      public Builder clearDurationValue() {
        if (durationValueBuilder_ == null) {
          durationValue_ = null;
          onChanged();
        } else {
          durationValue_ = null;
          durationValueBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.google.protobuf.Duration duration_value = 1;</code>
       */
      public com.google.protobuf.Duration.Builder getDurationValueBuilder() {
        
        onChanged();
        return getDurationValueFieldBuilder().getBuilder();
      }
      /**
       * <code>.google.protobuf.Duration duration_value = 1;</code>
       */
      public com.google.protobuf.DurationOrBuilder getDurationValueOrBuilder() {
        if (durationValueBuilder_ != null) {
          return durationValueBuilder_.getMessageOrBuilder();
        } else {
          return durationValue_ == null ?
              com.google.protobuf.Duration.getDefaultInstance() : durationValue_;
        }
      }
      /**
       * <code>.google.protobuf.Duration duration_value = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Duration, com.google.protobuf.Duration.Builder, com.google.protobuf.DurationOrBuilder> 
          getDurationValueFieldBuilder() {
        if (durationValueBuilder_ == null) {
          durationValueBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.Duration, com.google.protobuf.Duration.Builder, com.google.protobuf.DurationOrBuilder>(
                  getDurationValue(),
                  getParentForChildren(),
                  isClean());
          durationValue_ = null;
        }
        return durationValueBuilder_;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:json_test.TestDuration)
    }

    // @@protoc_insertion_point(class_scope:json_test.TestDuration)
    private static final com.google.protobuf.util.JsonTestProto.TestDuration DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.google.protobuf.util.JsonTestProto.TestDuration();
    }

    public static com.google.protobuf.util.JsonTestProto.TestDuration getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<TestDuration>
        PARSER = new com.google.protobuf.AbstractParser<TestDuration>() {
      public TestDuration parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new TestDuration(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<TestDuration> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<TestDuration> getParserForType() {
      return PARSER;
    }

    public com.google.protobuf.util.JsonTestProto.TestDuration getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface TestFieldMaskOrBuilder extends
      // @@protoc_insertion_point(interface_extends:json_test.TestFieldMask)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>.google.protobuf.FieldMask field_mask_value = 1;</code>
     */
    boolean hasFieldMaskValue();
    /**
     * <code>.google.protobuf.FieldMask field_mask_value = 1;</code>
     */
    com.google.protobuf.FieldMask getFieldMaskValue();
    /**
     * <code>.google.protobuf.FieldMask field_mask_value = 1;</code>
     */
    com.google.protobuf.FieldMaskOrBuilder getFieldMaskValueOrBuilder();
  }
  /**
   * Protobuf type {@code json_test.TestFieldMask}
   */
  public  static final class TestFieldMask extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:json_test.TestFieldMask)
      TestFieldMaskOrBuilder {
    // Use TestFieldMask.newBuilder() to construct.
    private TestFieldMask(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private TestFieldMask() {
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private TestFieldMask(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              com.google.protobuf.FieldMask.Builder subBuilder = null;
              if (fieldMaskValue_ != null) {
                subBuilder = fieldMaskValue_.toBuilder();
              }
              fieldMaskValue_ = input.readMessage(com.google.protobuf.FieldMask.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(fieldMaskValue_);
                fieldMaskValue_ = subBuilder.buildPartial();
              }

              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.google.protobuf.util.JsonTestProto.internal_static_json_test_TestFieldMask_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.protobuf.util.JsonTestProto.internal_static_json_test_TestFieldMask_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.protobuf.util.JsonTestProto.TestFieldMask.class, com.google.protobuf.util.JsonTestProto.TestFieldMask.Builder.class);
    }

    public static final int FIELD_MASK_VALUE_FIELD_NUMBER = 1;
    private com.google.protobuf.FieldMask fieldMaskValue_;
    /**
     * <code>.google.protobuf.FieldMask field_mask_value = 1;</code>
     */
    public boolean hasFieldMaskValue() {
      return fieldMaskValue_ != null;
    }
    /**
     * <code>.google.protobuf.FieldMask field_mask_value = 1;</code>
     */
    public com.google.protobuf.FieldMask getFieldMaskValue() {
      return fieldMaskValue_ == null ? com.google.protobuf.FieldMask.getDefaultInstance() : fieldMaskValue_;
    }
    /**
     * <code>.google.protobuf.FieldMask field_mask_value = 1;</code>
     */
    public com.google.protobuf.FieldMaskOrBuilder getFieldMaskValueOrBuilder() {
      return getFieldMaskValue();
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (fieldMaskValue_ != null) {
        output.writeMessage(1, getFieldMaskValue());
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (fieldMaskValue_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getFieldMaskValue());
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.google.protobuf.util.JsonTestProto.TestFieldMask)) {
        return super.equals(obj);
      }
      com.google.protobuf.util.JsonTestProto.TestFieldMask other = (com.google.protobuf.util.JsonTestProto.TestFieldMask) obj;

      boolean result = true;
      result = result && (hasFieldMaskValue() == other.hasFieldMaskValue());
      if (hasFieldMaskValue()) {
        result = result && getFieldMaskValue()
            .equals(other.getFieldMaskValue());
      }
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasFieldMaskValue()) {
        hash = (37 * hash) + FIELD_MASK_VALUE_FIELD_NUMBER;
        hash = (53 * hash) + getFieldMaskValue().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.google.protobuf.util.JsonTestProto.TestFieldMask parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.google.protobuf.util.JsonTestProto.TestFieldMask parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.google.protobuf.util.JsonTestProto.TestFieldMask parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.google.protobuf.util.JsonTestProto.TestFieldMask parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.google.protobuf.util.JsonTestProto.TestFieldMask parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.google.protobuf.util.JsonTestProto.TestFieldMask parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.google.protobuf.util.JsonTestProto.TestFieldMask parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.google.protobuf.util.JsonTestProto.TestFieldMask parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.google.protobuf.util.JsonTestProto.TestFieldMask parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.google.protobuf.util.JsonTestProto.TestFieldMask parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.google.protobuf.util.JsonTestProto.TestFieldMask parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.google.protobuf.util.JsonTestProto.TestFieldMask parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.google.protobuf.util.JsonTestProto.TestFieldMask prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code json_test.TestFieldMask}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:json_test.TestFieldMask)
        com.google.protobuf.util.JsonTestProto.TestFieldMaskOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.google.protobuf.util.JsonTestProto.internal_static_json_test_TestFieldMask_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.google.protobuf.util.JsonTestProto.internal_static_json_test_TestFieldMask_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.google.protobuf.util.JsonTestProto.TestFieldMask.class, com.google.protobuf.util.JsonTestProto.TestFieldMask.Builder.class);
      }

      // Construct using com.google.protobuf.util.JsonTestProto.TestFieldMask.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        if (fieldMaskValueBuilder_ == null) {
          fieldMaskValue_ = null;
        } else {
          fieldMaskValue_ = null;
          fieldMaskValueBuilder_ = null;
        }
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.google.protobuf.util.JsonTestProto.internal_static_json_test_TestFieldMask_descriptor;
      }

      public com.google.protobuf.util.JsonTestProto.TestFieldMask getDefaultInstanceForType() {
        return com.google.protobuf.util.JsonTestProto.TestFieldMask.getDefaultInstance();
      }

      public com.google.protobuf.util.JsonTestProto.TestFieldMask build() {
        com.google.protobuf.util.JsonTestProto.TestFieldMask result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.google.protobuf.util.JsonTestProto.TestFieldMask buildPartial() {
        com.google.protobuf.util.JsonTestProto.TestFieldMask result = new com.google.protobuf.util.JsonTestProto.TestFieldMask(this);
        if (fieldMaskValueBuilder_ == null) {
          result.fieldMaskValue_ = fieldMaskValue_;
        } else {
          result.fieldMaskValue_ = fieldMaskValueBuilder_.build();
        }
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.google.protobuf.util.JsonTestProto.TestFieldMask) {
          return mergeFrom((com.google.protobuf.util.JsonTestProto.TestFieldMask)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.google.protobuf.util.JsonTestProto.TestFieldMask other) {
        if (other == com.google.protobuf.util.JsonTestProto.TestFieldMask.getDefaultInstance()) return this;
        if (other.hasFieldMaskValue()) {
          mergeFieldMaskValue(other.getFieldMaskValue());
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.util.JsonTestProto.TestFieldMask parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.google.protobuf.util.JsonTestProto.TestFieldMask) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private com.google.protobuf.FieldMask fieldMaskValue_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.FieldMask, com.google.protobuf.FieldMask.Builder, com.google.protobuf.FieldMaskOrBuilder> fieldMaskValueBuilder_;
      /**
       * <code>.google.protobuf.FieldMask field_mask_value = 1;</code>
       */
      public boolean hasFieldMaskValue() {
        return fieldMaskValueBuilder_ != null || fieldMaskValue_ != null;
      }
      /**
       * <code>.google.protobuf.FieldMask field_mask_value = 1;</code>
       */
      public com.google.protobuf.FieldMask getFieldMaskValue() {
        if (fieldMaskValueBuilder_ == null) {
          return fieldMaskValue_ == null ? com.google.protobuf.FieldMask.getDefaultInstance() : fieldMaskValue_;
        } else {
          return fieldMaskValueBuilder_.getMessage();
        }
      }
      /**
       * <code>.google.protobuf.FieldMask field_mask_value = 1;</code>
       */
      public Builder setFieldMaskValue(com.google.protobuf.FieldMask value) {
        if (fieldMaskValueBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          fieldMaskValue_ = value;
          onChanged();
        } else {
          fieldMaskValueBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.google.protobuf.FieldMask field_mask_value = 1;</code>
       */
      public Builder setFieldMaskValue(
          com.google.protobuf.FieldMask.Builder builderForValue) {
        if (fieldMaskValueBuilder_ == null) {
          fieldMaskValue_ = builderForValue.build();
          onChanged();
        } else {
          fieldMaskValueBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.google.protobuf.FieldMask field_mask_value = 1;</code>
       */
      public Builder mergeFieldMaskValue(com.google.protobuf.FieldMask value) {
        if (fieldMaskValueBuilder_ == null) {
          if (fieldMaskValue_ != null) {
            fieldMaskValue_ =
              com.google.protobuf.FieldMask.newBuilder(fieldMaskValue_).mergeFrom(value).buildPartial();
          } else {
            fieldMaskValue_ = value;
          }
          onChanged();
        } else {
          fieldMaskValueBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.google.protobuf.FieldMask field_mask_value = 1;</code>
       */
      public Builder clearFieldMaskValue() {
        if (fieldMaskValueBuilder_ == null) {
          fieldMaskValue_ = null;
          onChanged();
        } else {
          fieldMaskValue_ = null;
          fieldMaskValueBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.google.protobuf.FieldMask field_mask_value = 1;</code>
       */
      public com.google.protobuf.FieldMask.Builder getFieldMaskValueBuilder() {
        
        onChanged();
        return getFieldMaskValueFieldBuilder().getBuilder();
      }
      /**
       * <code>.google.protobuf.FieldMask field_mask_value = 1;</code>
       */
      public com.google.protobuf.FieldMaskOrBuilder getFieldMaskValueOrBuilder() {
        if (fieldMaskValueBuilder_ != null) {
          return fieldMaskValueBuilder_.getMessageOrBuilder();
        } else {
          return fieldMaskValue_ == null ?
              com.google.protobuf.FieldMask.getDefaultInstance() : fieldMaskValue_;
        }
      }
      /**
       * <code>.google.protobuf.FieldMask field_mask_value = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.FieldMask, com.google.protobuf.FieldMask.Builder, com.google.protobuf.FieldMaskOrBuilder> 
          getFieldMaskValueFieldBuilder() {
        if (fieldMaskValueBuilder_ == null) {
          fieldMaskValueBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.FieldMask, com.google.protobuf.FieldMask.Builder, com.google.protobuf.FieldMaskOrBuilder>(
                  getFieldMaskValue(),
                  getParentForChildren(),
                  isClean());
          fieldMaskValue_ = null;
        }
        return fieldMaskValueBuilder_;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:json_test.TestFieldMask)
    }

    // @@protoc_insertion_point(class_scope:json_test.TestFieldMask)
    private static final com.google.protobuf.util.JsonTestProto.TestFieldMask DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.google.protobuf.util.JsonTestProto.TestFieldMask();
    }

    public static com.google.protobuf.util.JsonTestProto.TestFieldMask getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<TestFieldMask>
        PARSER = new com.google.protobuf.AbstractParser<TestFieldMask>() {
      public TestFieldMask parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new TestFieldMask(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<TestFieldMask> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<TestFieldMask> getParserForType() {
      return PARSER;
    }

    public com.google.protobuf.util.JsonTestProto.TestFieldMask getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface TestStructOrBuilder extends
      // @@protoc_insertion_point(interface_extends:json_test.TestStruct)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>.google.protobuf.Struct struct_value = 1;</code>
     */
    boolean hasStructValue();
    /**
     * <code>.google.protobuf.Struct struct_value = 1;</code>
     */
    com.google.protobuf.Struct getStructValue();
    /**
     * <code>.google.protobuf.Struct struct_value = 1;</code>
     */
    com.google.protobuf.StructOrBuilder getStructValueOrBuilder();

    /**
     * <code>.google.protobuf.Value value = 2;</code>
     */
    boolean hasValue();
    /**
     * <code>.google.protobuf.Value value = 2;</code>
     */
    com.google.protobuf.Value getValue();
    /**
     * <code>.google.protobuf.Value value = 2;</code>
     */
    com.google.protobuf.ValueOrBuilder getValueOrBuilder();

    /**
     * <code>.google.protobuf.ListValue list_value = 3;</code>
     */
    boolean hasListValue();
    /**
     * <code>.google.protobuf.ListValue list_value = 3;</code>
     */
    com.google.protobuf.ListValue getListValue();
    /**
     * <code>.google.protobuf.ListValue list_value = 3;</code>
     */
    com.google.protobuf.ListValueOrBuilder getListValueOrBuilder();
  }
  /**
   * Protobuf type {@code json_test.TestStruct}
   */
  public  static final class TestStruct extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:json_test.TestStruct)
      TestStructOrBuilder {
    // Use TestStruct.newBuilder() to construct.
    private TestStruct(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private TestStruct() {
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private TestStruct(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              com.google.protobuf.Struct.Builder subBuilder = null;
              if (structValue_ != null) {
                subBuilder = structValue_.toBuilder();
              }
              structValue_ = input.readMessage(com.google.protobuf.Struct.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(structValue_);
                structValue_ = subBuilder.buildPartial();
              }

              break;
            }
            case 18: {
              com.google.protobuf.Value.Builder subBuilder = null;
              if (value_ != null) {
                subBuilder = value_.toBuilder();
              }
              value_ = input.readMessage(com.google.protobuf.Value.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(value_);
                value_ = subBuilder.buildPartial();
              }

              break;
            }
            case 26: {
              com.google.protobuf.ListValue.Builder subBuilder = null;
              if (listValue_ != null) {
                subBuilder = listValue_.toBuilder();
              }
              listValue_ = input.readMessage(com.google.protobuf.ListValue.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(listValue_);
                listValue_ = subBuilder.buildPartial();
              }

              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.google.protobuf.util.JsonTestProto.internal_static_json_test_TestStruct_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.protobuf.util.JsonTestProto.internal_static_json_test_TestStruct_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.protobuf.util.JsonTestProto.TestStruct.class, com.google.protobuf.util.JsonTestProto.TestStruct.Builder.class);
    }

    public static final int STRUCT_VALUE_FIELD_NUMBER = 1;
    private com.google.protobuf.Struct structValue_;
    /**
     * <code>.google.protobuf.Struct struct_value = 1;</code>
     */
    public boolean hasStructValue() {
      return structValue_ != null;
    }
    /**
     * <code>.google.protobuf.Struct struct_value = 1;</code>
     */
    public com.google.protobuf.Struct getStructValue() {
      return structValue_ == null ? com.google.protobuf.Struct.getDefaultInstance() : structValue_;
    }
    /**
     * <code>.google.protobuf.Struct struct_value = 1;</code>
     */
    public com.google.protobuf.StructOrBuilder getStructValueOrBuilder() {
      return getStructValue();
    }

    public static final int VALUE_FIELD_NUMBER = 2;
    private com.google.protobuf.Value value_;
    /**
     * <code>.google.protobuf.Value value = 2;</code>
     */
    public boolean hasValue() {
      return value_ != null;
    }
    /**
     * <code>.google.protobuf.Value value = 2;</code>
     */
    public com.google.protobuf.Value getValue() {
      return value_ == null ? com.google.protobuf.Value.getDefaultInstance() : value_;
    }
    /**
     * <code>.google.protobuf.Value value = 2;</code>
     */
    public com.google.protobuf.ValueOrBuilder getValueOrBuilder() {
      return getValue();
    }

    public static final int LIST_VALUE_FIELD_NUMBER = 3;
    private com.google.protobuf.ListValue listValue_;
    /**
     * <code>.google.protobuf.ListValue list_value = 3;</code>
     */
    public boolean hasListValue() {
      return listValue_ != null;
    }
    /**
     * <code>.google.protobuf.ListValue list_value = 3;</code>
     */
    public com.google.protobuf.ListValue getListValue() {
      return listValue_ == null ? com.google.protobuf.ListValue.getDefaultInstance() : listValue_;
    }
    /**
     * <code>.google.protobuf.ListValue list_value = 3;</code>
     */
    public com.google.protobuf.ListValueOrBuilder getListValueOrBuilder() {
      return getListValue();
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (structValue_ != null) {
        output.writeMessage(1, getStructValue());
      }
      if (value_ != null) {
        output.writeMessage(2, getValue());
      }
      if (listValue_ != null) {
        output.writeMessage(3, getListValue());
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (structValue_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getStructValue());
      }
      if (value_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getValue());
      }
      if (listValue_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getListValue());
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.google.protobuf.util.JsonTestProto.TestStruct)) {
        return super.equals(obj);
      }
      com.google.protobuf.util.JsonTestProto.TestStruct other = (com.google.protobuf.util.JsonTestProto.TestStruct) obj;

      boolean result = true;
      result = result && (hasStructValue() == other.hasStructValue());
      if (hasStructValue()) {
        result = result && getStructValue()
            .equals(other.getStructValue());
      }
      result = result && (hasValue() == other.hasValue());
      if (hasValue()) {
        result = result && getValue()
            .equals(other.getValue());
      }
      result = result && (hasListValue() == other.hasListValue());
      if (hasListValue()) {
        result = result && getListValue()
            .equals(other.getListValue());
      }
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasStructValue()) {
        hash = (37 * hash) + STRUCT_VALUE_FIELD_NUMBER;
        hash = (53 * hash) + getStructValue().hashCode();
      }
      if (hasValue()) {
        hash = (37 * hash) + VALUE_FIELD_NUMBER;
        hash = (53 * hash) + getValue().hashCode();
      }
      if (hasListValue()) {
        hash = (37 * hash) + LIST_VALUE_FIELD_NUMBER;
        hash = (53 * hash) + getListValue().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.google.protobuf.util.JsonTestProto.TestStruct parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.google.protobuf.util.JsonTestProto.TestStruct parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.google.protobuf.util.JsonTestProto.TestStruct parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.google.protobuf.util.JsonTestProto.TestStruct parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.google.protobuf.util.JsonTestProto.TestStruct parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.google.protobuf.util.JsonTestProto.TestStruct parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.google.protobuf.util.JsonTestProto.TestStruct parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.google.protobuf.util.JsonTestProto.TestStruct parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.google.protobuf.util.JsonTestProto.TestStruct parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.google.protobuf.util.JsonTestProto.TestStruct parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.google.protobuf.util.JsonTestProto.TestStruct parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.google.protobuf.util.JsonTestProto.TestStruct parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.google.protobuf.util.JsonTestProto.TestStruct prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code json_test.TestStruct}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:json_test.TestStruct)
        com.google.protobuf.util.JsonTestProto.TestStructOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.google.protobuf.util.JsonTestProto.internal_static_json_test_TestStruct_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.google.protobuf.util.JsonTestProto.internal_static_json_test_TestStruct_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.google.protobuf.util.JsonTestProto.TestStruct.class, com.google.protobuf.util.JsonTestProto.TestStruct.Builder.class);
      }

      // Construct using com.google.protobuf.util.JsonTestProto.TestStruct.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        if (structValueBuilder_ == null) {
          structValue_ = null;
        } else {
          structValue_ = null;
          structValueBuilder_ = null;
        }
        if (valueBuilder_ == null) {
          value_ = null;
        } else {
          value_ = null;
          valueBuilder_ = null;
        }
        if (listValueBuilder_ == null) {
          listValue_ = null;
        } else {
          listValue_ = null;
          listValueBuilder_ = null;
        }
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.google.protobuf.util.JsonTestProto.internal_static_json_test_TestStruct_descriptor;
      }

      public com.google.protobuf.util.JsonTestProto.TestStruct getDefaultInstanceForType() {
        return com.google.protobuf.util.JsonTestProto.TestStruct.getDefaultInstance();
      }

      public com.google.protobuf.util.JsonTestProto.TestStruct build() {
        com.google.protobuf.util.JsonTestProto.TestStruct result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.google.protobuf.util.JsonTestProto.TestStruct buildPartial() {
        com.google.protobuf.util.JsonTestProto.TestStruct result = new com.google.protobuf.util.JsonTestProto.TestStruct(this);
        if (structValueBuilder_ == null) {
          result.structValue_ = structValue_;
        } else {
          result.structValue_ = structValueBuilder_.build();
        }
        if (valueBuilder_ == null) {
          result.value_ = value_;
        } else {
          result.value_ = valueBuilder_.build();
        }
        if (listValueBuilder_ == null) {
          result.listValue_ = listValue_;
        } else {
          result.listValue_ = listValueBuilder_.build();
        }
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.google.protobuf.util.JsonTestProto.TestStruct) {
          return mergeFrom((com.google.protobuf.util.JsonTestProto.TestStruct)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.google.protobuf.util.JsonTestProto.TestStruct other) {
        if (other == com.google.protobuf.util.JsonTestProto.TestStruct.getDefaultInstance()) return this;
        if (other.hasStructValue()) {
          mergeStructValue(other.getStructValue());
        }
        if (other.hasValue()) {
          mergeValue(other.getValue());
        }
        if (other.hasListValue()) {
          mergeListValue(other.getListValue());
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.util.JsonTestProto.TestStruct parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.google.protobuf.util.JsonTestProto.TestStruct) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private com.google.protobuf.Struct structValue_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Struct, com.google.protobuf.Struct.Builder, com.google.protobuf.StructOrBuilder> structValueBuilder_;
      /**
       * <code>.google.protobuf.Struct struct_value = 1;</code>
       */
      public boolean hasStructValue() {
        return structValueBuilder_ != null || structValue_ != null;
      }
      /**
       * <code>.google.protobuf.Struct struct_value = 1;</code>
       */
      public com.google.protobuf.Struct getStructValue() {
        if (structValueBuilder_ == null) {
          return structValue_ == null ? com.google.protobuf.Struct.getDefaultInstance() : structValue_;
        } else {
          return structValueBuilder_.getMessage();
        }
      }
      /**
       * <code>.google.protobuf.Struct struct_value = 1;</code>
       */
      public Builder setStructValue(com.google.protobuf.Struct value) {
        if (structValueBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          structValue_ = value;
          onChanged();
        } else {
          structValueBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.google.protobuf.Struct struct_value = 1;</code>
       */
      public Builder setStructValue(
          com.google.protobuf.Struct.Builder builderForValue) {
        if (structValueBuilder_ == null) {
          structValue_ = builderForValue.build();
          onChanged();
        } else {
          structValueBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.google.protobuf.Struct struct_value = 1;</code>
       */
      public Builder mergeStructValue(com.google.protobuf.Struct value) {
        if (structValueBuilder_ == null) {
          if (structValue_ != null) {
            structValue_ =
              com.google.protobuf.Struct.newBuilder(structValue_).mergeFrom(value).buildPartial();
          } else {
            structValue_ = value;
          }
          onChanged();
        } else {
          structValueBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.google.protobuf.Struct struct_value = 1;</code>
       */
      public Builder clearStructValue() {
        if (structValueBuilder_ == null) {
          structValue_ = null;
          onChanged();
        } else {
          structValue_ = null;
          structValueBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.google.protobuf.Struct struct_value = 1;</code>
       */
      public com.google.protobuf.Struct.Builder getStructValueBuilder() {
        
        onChanged();
        return getStructValueFieldBuilder().getBuilder();
      }
      /**
       * <code>.google.protobuf.Struct struct_value = 1;</code>
       */
      public com.google.protobuf.StructOrBuilder getStructValueOrBuilder() {
        if (structValueBuilder_ != null) {
          return structValueBuilder_.getMessageOrBuilder();
        } else {
          return structValue_ == null ?
              com.google.protobuf.Struct.getDefaultInstance() : structValue_;
        }
      }
      /**
       * <code>.google.protobuf.Struct struct_value = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Struct, com.google.protobuf.Struct.Builder, com.google.protobuf.StructOrBuilder> 
          getStructValueFieldBuilder() {
        if (structValueBuilder_ == null) {
          structValueBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.Struct, com.google.protobuf.Struct.Builder, com.google.protobuf.StructOrBuilder>(
                  getStructValue(),
                  getParentForChildren(),
                  isClean());
          structValue_ = null;
        }
        return structValueBuilder_;
      }

      private com.google.protobuf.Value value_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Value, com.google.protobuf.Value.Builder, com.google.protobuf.ValueOrBuilder> valueBuilder_;
      /**
       * <code>.google.protobuf.Value value = 2;</code>
       */
      public boolean hasValue() {
        return valueBuilder_ != null || value_ != null;
      }
      /**
       * <code>.google.protobuf.Value value = 2;</code>
       */
      public com.google.protobuf.Value getValue() {
        if (valueBuilder_ == null) {
          return value_ == null ? com.google.protobuf.Value.getDefaultInstance() : value_;
        } else {
          return valueBuilder_.getMessage();
        }
      }
      /**
       * <code>.google.protobuf.Value value = 2;</code>
       */
      public Builder setValue(com.google.protobuf.Value value) {
        if (valueBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          value_ = value;
          onChanged();
        } else {
          valueBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.google.protobuf.Value value = 2;</code>
       */
      public Builder setValue(
          com.google.protobuf.Value.Builder builderForValue) {
        if (valueBuilder_ == null) {
          value_ = builderForValue.build();
          onChanged();
        } else {
          valueBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.google.protobuf.Value value = 2;</code>
       */
      public Builder mergeValue(com.google.protobuf.Value value) {
        if (valueBuilder_ == null) {
          if (value_ != null) {
            value_ =
              com.google.protobuf.Value.newBuilder(value_).mergeFrom(value).buildPartial();
          } else {
            value_ = value;
          }
          onChanged();
        } else {
          valueBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.google.protobuf.Value value = 2;</code>
       */
      public Builder clearValue() {
        if (valueBuilder_ == null) {
          value_ = null;
          onChanged();
        } else {
          value_ = null;
          valueBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.google.protobuf.Value value = 2;</code>
       */
      public com.google.protobuf.Value.Builder getValueBuilder() {
        
        onChanged();
        return getValueFieldBuilder().getBuilder();
      }
      /**
       * <code>.google.protobuf.Value value = 2;</code>
       */
      public com.google.protobuf.ValueOrBuilder getValueOrBuilder() {
        if (valueBuilder_ != null) {
          return valueBuilder_.getMessageOrBuilder();
        } else {
          return value_ == null ?
              com.google.protobuf.Value.getDefaultInstance() : value_;
        }
      }
      /**
       * <code>.google.protobuf.Value value = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Value, com.google.protobuf.Value.Builder, com.google.protobuf.ValueOrBuilder> 
          getValueFieldBuilder() {
        if (valueBuilder_ == null) {
          valueBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.Value, com.google.protobuf.Value.Builder, com.google.protobuf.ValueOrBuilder>(
                  getValue(),
                  getParentForChildren(),
                  isClean());
          value_ = null;
        }
        return valueBuilder_;
      }

      private com.google.protobuf.ListValue listValue_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.ListValue, com.google.protobuf.ListValue.Builder, com.google.protobuf.ListValueOrBuilder> listValueBuilder_;
      /**
       * <code>.google.protobuf.ListValue list_value = 3;</code>
       */
      public boolean hasListValue() {
        return listValueBuilder_ != null || listValue_ != null;
      }
      /**
       * <code>.google.protobuf.ListValue list_value = 3;</code>
       */
      public com.google.protobuf.ListValue getListValue() {
        if (listValueBuilder_ == null) {
          return listValue_ == null ? com.google.protobuf.ListValue.getDefaultInstance() : listValue_;
        } else {
          return listValueBuilder_.getMessage();
        }
      }
      /**
       * <code>.google.protobuf.ListValue list_value = 3;</code>
       */
      public Builder setListValue(com.google.protobuf.ListValue value) {
        if (listValueBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          listValue_ = value;
          onChanged();
        } else {
          listValueBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.google.protobuf.ListValue list_value = 3;</code>
       */
      public Builder setListValue(
          com.google.protobuf.ListValue.Builder builderForValue) {
        if (listValueBuilder_ == null) {
          listValue_ = builderForValue.build();
          onChanged();
        } else {
          listValueBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.google.protobuf.ListValue list_value = 3;</code>
       */
      public Builder mergeListValue(com.google.protobuf.ListValue value) {
        if (listValueBuilder_ == null) {
          if (listValue_ != null) {
            listValue_ =
              com.google.protobuf.ListValue.newBuilder(listValue_).mergeFrom(value).buildPartial();
          } else {
            listValue_ = value;
          }
          onChanged();
        } else {
          listValueBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.google.protobuf.ListValue list_value = 3;</code>
       */
      public Builder clearListValue() {
        if (listValueBuilder_ == null) {
          listValue_ = null;
          onChanged();
        } else {
          listValue_ = null;
          listValueBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.google.protobuf.ListValue list_value = 3;</code>
       */
      public com.google.protobuf.ListValue.Builder getListValueBuilder() {
        
        onChanged();
        return getListValueFieldBuilder().getBuilder();
      }
      /**
       * <code>.google.protobuf.ListValue list_value = 3;</code>
       */
      public com.google.protobuf.ListValueOrBuilder getListValueOrBuilder() {
        if (listValueBuilder_ != null) {
          return listValueBuilder_.getMessageOrBuilder();
        } else {
          return listValue_ == null ?
              com.google.protobuf.ListValue.getDefaultInstance() : listValue_;
        }
      }
      /**
       * <code>.google.protobuf.ListValue list_value = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.ListValue, com.google.protobuf.ListValue.Builder, com.google.protobuf.ListValueOrBuilder> 
          getListValueFieldBuilder() {
        if (listValueBuilder_ == null) {
          listValueBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.ListValue, com.google.protobuf.ListValue.Builder, com.google.protobuf.ListValueOrBuilder>(
                  getListValue(),
                  getParentForChildren(),
                  isClean());
          listValue_ = null;
        }
        return listValueBuilder_;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:json_test.TestStruct)
    }

    // @@protoc_insertion_point(class_scope:json_test.TestStruct)
    private static final com.google.protobuf.util.JsonTestProto.TestStruct DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.google.protobuf.util.JsonTestProto.TestStruct();
    }

    public static com.google.protobuf.util.JsonTestProto.TestStruct getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<TestStruct>
        PARSER = new com.google.protobuf.AbstractParser<TestStruct>() {
      public TestStruct parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new TestStruct(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<TestStruct> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<TestStruct> getParserForType() {
      return PARSER;
    }

    public com.google.protobuf.util.JsonTestProto.TestStruct getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface TestAnyOrBuilder extends
      // @@protoc_insertion_point(interface_extends:json_test.TestAny)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>.google.protobuf.Any any_value = 1;</code>
     */
    boolean hasAnyValue();
    /**
     * <code>.google.protobuf.Any any_value = 1;</code>
     */
    com.google.protobuf.Any getAnyValue();
    /**
     * <code>.google.protobuf.Any any_value = 1;</code>
     */
    com.google.protobuf.AnyOrBuilder getAnyValueOrBuilder();

    /**
     * <code>map&lt;string, .google.protobuf.Any&gt; any_map = 2;</code>
     */
    int getAnyMapCount();
    /**
     * <code>map&lt;string, .google.protobuf.Any&gt; any_map = 2;</code>
     */
    boolean containsAnyMap(
        java.lang.String key);
    /**
     * Use {@link #getAnyMapMap()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.String, com.google.protobuf.Any>
    getAnyMap();
    /**
     * <code>map&lt;string, .google.protobuf.Any&gt; any_map = 2;</code>
     */
    java.util.Map<java.lang.String, com.google.protobuf.Any>
    getAnyMapMap();
    /**
     * <code>map&lt;string, .google.protobuf.Any&gt; any_map = 2;</code>
     */

    com.google.protobuf.Any getAnyMapOrDefault(
        java.lang.String key,
        com.google.protobuf.Any defaultValue);
    /**
     * <code>map&lt;string, .google.protobuf.Any&gt; any_map = 2;</code>
     */

    com.google.protobuf.Any getAnyMapOrThrow(
        java.lang.String key);
  }
  /**
   * Protobuf type {@code json_test.TestAny}
   */
  public  static final class TestAny extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:json_test.TestAny)
      TestAnyOrBuilder {
    // Use TestAny.newBuilder() to construct.
    private TestAny(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private TestAny() {
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private TestAny(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              com.google.protobuf.Any.Builder subBuilder = null;
              if (anyValue_ != null) {
                subBuilder = anyValue_.toBuilder();
              }
              anyValue_ = input.readMessage(com.google.protobuf.Any.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(anyValue_);
                anyValue_ = subBuilder.buildPartial();
              }

              break;
            }
            case 18: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                anyMap_ = com.google.protobuf.MapField.newMapField(
                    AnyMapDefaultEntryHolder.defaultEntry);
                mutable_bitField0_ |= 0x00000002;
              }
              com.google.protobuf.MapEntry<java.lang.String, com.google.protobuf.Any>
              anyMap__ = input.readMessage(
                  AnyMapDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              anyMap_.getMutableMap().put(
                  anyMap__.getKey(), anyMap__.getValue());
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.google.protobuf.util.JsonTestProto.internal_static_json_test_TestAny_descriptor;
    }

    @SuppressWarnings({"rawtypes"})
    protected com.google.protobuf.MapField internalGetMapField(
        int number) {
      switch (number) {
        case 2:
          return internalGetAnyMap();
        default:
          throw new RuntimeException(
              "Invalid map field number: " + number);
      }
    }
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.protobuf.util.JsonTestProto.internal_static_json_test_TestAny_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.protobuf.util.JsonTestProto.TestAny.class, com.google.protobuf.util.JsonTestProto.TestAny.Builder.class);
    }

    private int bitField0_;
    public static final int ANY_VALUE_FIELD_NUMBER = 1;
    private com.google.protobuf.Any anyValue_;
    /**
     * <code>.google.protobuf.Any any_value = 1;</code>
     */
    public boolean hasAnyValue() {
      return anyValue_ != null;
    }
    /**
     * <code>.google.protobuf.Any any_value = 1;</code>
     */
    public com.google.protobuf.Any getAnyValue() {
      return anyValue_ == null ? com.google.protobuf.Any.getDefaultInstance() : anyValue_;
    }
    /**
     * <code>.google.protobuf.Any any_value = 1;</code>
     */
    public com.google.protobuf.AnyOrBuilder getAnyValueOrBuilder() {
      return getAnyValue();
    }

    public static final int ANY_MAP_FIELD_NUMBER = 2;
    private static final class AnyMapDefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          java.lang.String, com.google.protobuf.Any> defaultEntry =
              com.google.protobuf.MapEntry
              .<java.lang.String, com.google.protobuf.Any>newDefaultInstance(
                  com.google.protobuf.util.JsonTestProto.internal_static_json_test_TestAny_AnyMapEntry_descriptor, 
                  com.google.protobuf.WireFormat.FieldType.STRING,
                  "",
                  com.google.protobuf.WireFormat.FieldType.MESSAGE,
                  com.google.protobuf.Any.getDefaultInstance());
    }
    private com.google.protobuf.MapField<
        java.lang.String, com.google.protobuf.Any> anyMap_;
    private com.google.protobuf.MapField<java.lang.String, com.google.protobuf.Any>
    internalGetAnyMap() {
      if (anyMap_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            AnyMapDefaultEntryHolder.defaultEntry);
      }
      return anyMap_;
    }

    public int getAnyMapCount() {
      return internalGetAnyMap().getMap().size();
    }
    /**
     * <code>map&lt;string, .google.protobuf.Any&gt; any_map = 2;</code>
     */

    public boolean containsAnyMap(
        java.lang.String key) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      return internalGetAnyMap().getMap().containsKey(key);
    }
    /**
     * Use {@link #getAnyMapMap()} instead.
     */
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, com.google.protobuf.Any> getAnyMap() {
      return getAnyMapMap();
    }
    /**
     * <code>map&lt;string, .google.protobuf.Any&gt; any_map = 2;</code>
     */

    public java.util.Map<java.lang.String, com.google.protobuf.Any> getAnyMapMap() {
      return internalGetAnyMap().getMap();
    }
    /**
     * <code>map&lt;string, .google.protobuf.Any&gt; any_map = 2;</code>
     */

    public com.google.protobuf.Any getAnyMapOrDefault(
        java.lang.String key,
        com.google.protobuf.Any defaultValue) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      java.util.Map<java.lang.String, com.google.protobuf.Any> map =
          internalGetAnyMap().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <code>map&lt;string, .google.protobuf.Any&gt; any_map = 2;</code>
     */

    public com.google.protobuf.Any getAnyMapOrThrow(
        java.lang.String key) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      java.util.Map<java.lang.String, com.google.protobuf.Any> map =
          internalGetAnyMap().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (anyValue_ != null) {
        output.writeMessage(1, getAnyValue());
      }
      com.google.protobuf.GeneratedMessageV3
        .serializeStringMapTo(
          output,
          internalGetAnyMap(),
          AnyMapDefaultEntryHolder.defaultEntry,
          2);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (anyValue_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getAnyValue());
      }
      for (java.util.Map.Entry<java.lang.String, com.google.protobuf.Any> entry
           : internalGetAnyMap().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.String, com.google.protobuf.Any>
        anyMap__ = AnyMapDefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(2, anyMap__);
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.google.protobuf.util.JsonTestProto.TestAny)) {
        return super.equals(obj);
      }
      com.google.protobuf.util.JsonTestProto.TestAny other = (com.google.protobuf.util.JsonTestProto.TestAny) obj;

      boolean result = true;
      result = result && (hasAnyValue() == other.hasAnyValue());
      if (hasAnyValue()) {
        result = result && getAnyValue()
            .equals(other.getAnyValue());
      }
      result = result && internalGetAnyMap().equals(
          other.internalGetAnyMap());
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasAnyValue()) {
        hash = (37 * hash) + ANY_VALUE_FIELD_NUMBER;
        hash = (53 * hash) + getAnyValue().hashCode();
      }
      if (!internalGetAnyMap().getMap().isEmpty()) {
        hash = (37 * hash) + ANY_MAP_FIELD_NUMBER;
        hash = (53 * hash) + internalGetAnyMap().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.google.protobuf.util.JsonTestProto.TestAny parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.google.protobuf.util.JsonTestProto.TestAny parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.google.protobuf.util.JsonTestProto.TestAny parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.google.protobuf.util.JsonTestProto.TestAny parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.google.protobuf.util.JsonTestProto.TestAny parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.google.protobuf.util.JsonTestProto.TestAny parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.google.protobuf.util.JsonTestProto.TestAny parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.google.protobuf.util.JsonTestProto.TestAny parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.google.protobuf.util.JsonTestProto.TestAny parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.google.protobuf.util.JsonTestProto.TestAny parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.google.protobuf.util.JsonTestProto.TestAny parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.google.protobuf.util.JsonTestProto.TestAny parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.google.protobuf.util.JsonTestProto.TestAny prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code json_test.TestAny}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:json_test.TestAny)
        com.google.protobuf.util.JsonTestProto.TestAnyOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.google.protobuf.util.JsonTestProto.internal_static_json_test_TestAny_descriptor;
      }

      @SuppressWarnings({"rawtypes"})
      protected com.google.protobuf.MapField internalGetMapField(
          int number) {
        switch (number) {
          case 2:
            return internalGetAnyMap();
          default:
            throw new RuntimeException(
                "Invalid map field number: " + number);
        }
      }
      @SuppressWarnings({"rawtypes"})
      protected com.google.protobuf.MapField internalGetMutableMapField(
          int number) {
        switch (number) {
          case 2:
            return internalGetMutableAnyMap();
          default:
            throw new RuntimeException(
                "Invalid map field number: " + number);
        }
      }
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.google.protobuf.util.JsonTestProto.internal_static_json_test_TestAny_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.google.protobuf.util.JsonTestProto.TestAny.class, com.google.protobuf.util.JsonTestProto.TestAny.Builder.class);
      }

      // Construct using com.google.protobuf.util.JsonTestProto.TestAny.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        if (anyValueBuilder_ == null) {
          anyValue_ = null;
        } else {
          anyValue_ = null;
          anyValueBuilder_ = null;
        }
        internalGetMutableAnyMap().clear();
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.google.protobuf.util.JsonTestProto.internal_static_json_test_TestAny_descriptor;
      }

      public com.google.protobuf.util.JsonTestProto.TestAny getDefaultInstanceForType() {
        return com.google.protobuf.util.JsonTestProto.TestAny.getDefaultInstance();
      }

      public com.google.protobuf.util.JsonTestProto.TestAny build() {
        com.google.protobuf.util.JsonTestProto.TestAny result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.google.protobuf.util.JsonTestProto.TestAny buildPartial() {
        com.google.protobuf.util.JsonTestProto.TestAny result = new com.google.protobuf.util.JsonTestProto.TestAny(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (anyValueBuilder_ == null) {
          result.anyValue_ = anyValue_;
        } else {
          result.anyValue_ = anyValueBuilder_.build();
        }
        result.anyMap_ = internalGetAnyMap();
        result.anyMap_.makeImmutable();
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.google.protobuf.util.JsonTestProto.TestAny) {
          return mergeFrom((com.google.protobuf.util.JsonTestProto.TestAny)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.google.protobuf.util.JsonTestProto.TestAny other) {
        if (other == com.google.protobuf.util.JsonTestProto.TestAny.getDefaultInstance()) return this;
        if (other.hasAnyValue()) {
          mergeAnyValue(other.getAnyValue());
        }
        internalGetMutableAnyMap().mergeFrom(
            other.internalGetAnyMap());
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.util.JsonTestProto.TestAny parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.google.protobuf.util.JsonTestProto.TestAny) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private com.google.protobuf.Any anyValue_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Any, com.google.protobuf.Any.Builder, com.google.protobuf.AnyOrBuilder> anyValueBuilder_;
      /**
       * <code>.google.protobuf.Any any_value = 1;</code>
       */
      public boolean hasAnyValue() {
        return anyValueBuilder_ != null || anyValue_ != null;
      }
      /**
       * <code>.google.protobuf.Any any_value = 1;</code>
       */
      public com.google.protobuf.Any getAnyValue() {
        if (anyValueBuilder_ == null) {
          return anyValue_ == null ? com.google.protobuf.Any.getDefaultInstance() : anyValue_;
        } else {
          return anyValueBuilder_.getMessage();
        }
      }
      /**
       * <code>.google.protobuf.Any any_value = 1;</code>
       */
      public Builder setAnyValue(com.google.protobuf.Any value) {
        if (anyValueBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          anyValue_ = value;
          onChanged();
        } else {
          anyValueBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.google.protobuf.Any any_value = 1;</code>
       */
      public Builder setAnyValue(
          com.google.protobuf.Any.Builder builderForValue) {
        if (anyValueBuilder_ == null) {
          anyValue_ = builderForValue.build();
          onChanged();
        } else {
          anyValueBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.google.protobuf.Any any_value = 1;</code>
       */
      public Builder mergeAnyValue(com.google.protobuf.Any value) {
        if (anyValueBuilder_ == null) {
          if (anyValue_ != null) {
            anyValue_ =
              com.google.protobuf.Any.newBuilder(anyValue_).mergeFrom(value).buildPartial();
          } else {
            anyValue_ = value;
          }
          onChanged();
        } else {
          anyValueBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.google.protobuf.Any any_value = 1;</code>
       */
      public Builder clearAnyValue() {
        if (anyValueBuilder_ == null) {
          anyValue_ = null;
          onChanged();
        } else {
          anyValue_ = null;
          anyValueBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.google.protobuf.Any any_value = 1;</code>
       */
      public com.google.protobuf.Any.Builder getAnyValueBuilder() {
        
        onChanged();
        return getAnyValueFieldBuilder().getBuilder();
      }
      /**
       * <code>.google.protobuf.Any any_value = 1;</code>
       */
      public com.google.protobuf.AnyOrBuilder getAnyValueOrBuilder() {
        if (anyValueBuilder_ != null) {
          return anyValueBuilder_.getMessageOrBuilder();
        } else {
          return anyValue_ == null ?
              com.google.protobuf.Any.getDefaultInstance() : anyValue_;
        }
      }
      /**
       * <code>.google.protobuf.Any any_value = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Any, com.google.protobuf.Any.Builder, com.google.protobuf.AnyOrBuilder> 
          getAnyValueFieldBuilder() {
        if (anyValueBuilder_ == null) {
          anyValueBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.Any, com.google.protobuf.Any.Builder, com.google.protobuf.AnyOrBuilder>(
                  getAnyValue(),
                  getParentForChildren(),
                  isClean());
          anyValue_ = null;
        }
        return anyValueBuilder_;
      }

      private com.google.protobuf.MapField<
          java.lang.String, com.google.protobuf.Any> anyMap_;
      private com.google.protobuf.MapField<java.lang.String, com.google.protobuf.Any>
      internalGetAnyMap() {
        if (anyMap_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              AnyMapDefaultEntryHolder.defaultEntry);
        }
        return anyMap_;
      }
      private com.google.protobuf.MapField<java.lang.String, com.google.protobuf.Any>
      internalGetMutableAnyMap() {
        onChanged();;
        if (anyMap_ == null) {
          anyMap_ = com.google.protobuf.MapField.newMapField(
              AnyMapDefaultEntryHolder.defaultEntry);
        }
        if (!anyMap_.isMutable()) {
          anyMap_ = anyMap_.copy();
        }
        return anyMap_;
      }

      public int getAnyMapCount() {
        return internalGetAnyMap().getMap().size();
      }
      /**
       * <code>map&lt;string, .google.protobuf.Any&gt; any_map = 2;</code>
       */

      public boolean containsAnyMap(
          java.lang.String key) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        return internalGetAnyMap().getMap().containsKey(key);
      }
      /**
       * Use {@link #getAnyMapMap()} instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, com.google.protobuf.Any> getAnyMap() {
        return getAnyMapMap();
      }
      /**
       * <code>map&lt;string, .google.protobuf.Any&gt; any_map = 2;</code>
       */

      public java.util.Map<java.lang.String, com.google.protobuf.Any> getAnyMapMap() {
        return internalGetAnyMap().getMap();
      }
      /**
       * <code>map&lt;string, .google.protobuf.Any&gt; any_map = 2;</code>
       */

      public com.google.protobuf.Any getAnyMapOrDefault(
          java.lang.String key,
          com.google.protobuf.Any defaultValue) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        java.util.Map<java.lang.String, com.google.protobuf.Any> map =
            internalGetAnyMap().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <code>map&lt;string, .google.protobuf.Any&gt; any_map = 2;</code>
       */

      public com.google.protobuf.Any getAnyMapOrThrow(
          java.lang.String key) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        java.util.Map<java.lang.String, com.google.protobuf.Any> map =
            internalGetAnyMap().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }

      public Builder clearAnyMap() {
        internalGetMutableAnyMap().getMutableMap()
            .clear();
        return this;
      }
      /**
       * <code>map&lt;string, .google.protobuf.Any&gt; any_map = 2;</code>
       */

      public Builder removeAnyMap(
          java.lang.String key) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        internalGetMutableAnyMap().getMutableMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, com.google.protobuf.Any>
      getMutableAnyMap() {
        return internalGetMutableAnyMap().getMutableMap();
      }
      /**
       * <code>map&lt;string, .google.protobuf.Any&gt; any_map = 2;</code>
       */
      public Builder putAnyMap(
          java.lang.String key,
          com.google.protobuf.Any value) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        if (value == null) { throw new java.lang.NullPointerException(); }
        internalGetMutableAnyMap().getMutableMap()
            .put(key, value);
        return this;
      }
      /**
       * <code>map&lt;string, .google.protobuf.Any&gt; any_map = 2;</code>
       */

      public Builder putAllAnyMap(
          java.util.Map<java.lang.String, com.google.protobuf.Any> values) {
        internalGetMutableAnyMap().getMutableMap()
            .putAll(values);
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:json_test.TestAny)
    }

    // @@protoc_insertion_point(class_scope:json_test.TestAny)
    private static final com.google.protobuf.util.JsonTestProto.TestAny DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.google.protobuf.util.JsonTestProto.TestAny();
    }

    public static com.google.protobuf.util.JsonTestProto.TestAny getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<TestAny>
        PARSER = new com.google.protobuf.AbstractParser<TestAny>() {
      public TestAny parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new TestAny(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<TestAny> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<TestAny> getParserForType() {
      return PARSER;
    }

    public com.google.protobuf.util.JsonTestProto.TestAny getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface TestCustomJsonNameOrBuilder extends
      // @@protoc_insertion_point(interface_extends:json_test.TestCustomJsonName)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>int32 value = 1[json_name = "&#64;value"];</code>
     */
    int getValue();
  }
  /**
   * Protobuf type {@code json_test.TestCustomJsonName}
   */
  public  static final class TestCustomJsonName extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:json_test.TestCustomJsonName)
      TestCustomJsonNameOrBuilder {
    // Use TestCustomJsonName.newBuilder() to construct.
    private TestCustomJsonName(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private TestCustomJsonName() {
      value_ = 0;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private TestCustomJsonName(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 8: {

              value_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.google.protobuf.util.JsonTestProto.internal_static_json_test_TestCustomJsonName_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.protobuf.util.JsonTestProto.internal_static_json_test_TestCustomJsonName_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.protobuf.util.JsonTestProto.TestCustomJsonName.class, com.google.protobuf.util.JsonTestProto.TestCustomJsonName.Builder.class);
    }

    public static final int VALUE_FIELD_NUMBER = 1;
    private int value_;
    /**
     * <code>int32 value = 1[json_name = "&#64;value"];</code>
     */
    public int getValue() {
      return value_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (value_ != 0) {
        output.writeInt32(1, value_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (value_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, value_);
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.google.protobuf.util.JsonTestProto.TestCustomJsonName)) {
        return super.equals(obj);
      }
      com.google.protobuf.util.JsonTestProto.TestCustomJsonName other = (com.google.protobuf.util.JsonTestProto.TestCustomJsonName) obj;

      boolean result = true;
      result = result && (getValue()
          == other.getValue());
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + VALUE_FIELD_NUMBER;
      hash = (53 * hash) + getValue();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.google.protobuf.util.JsonTestProto.TestCustomJsonName parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.google.protobuf.util.JsonTestProto.TestCustomJsonName parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.google.protobuf.util.JsonTestProto.TestCustomJsonName parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.google.protobuf.util.JsonTestProto.TestCustomJsonName parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.google.protobuf.util.JsonTestProto.TestCustomJsonName parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.google.protobuf.util.JsonTestProto.TestCustomJsonName parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.google.protobuf.util.JsonTestProto.TestCustomJsonName parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.google.protobuf.util.JsonTestProto.TestCustomJsonName parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.google.protobuf.util.JsonTestProto.TestCustomJsonName parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.google.protobuf.util.JsonTestProto.TestCustomJsonName parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.google.protobuf.util.JsonTestProto.TestCustomJsonName parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.google.protobuf.util.JsonTestProto.TestCustomJsonName parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.google.protobuf.util.JsonTestProto.TestCustomJsonName prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code json_test.TestCustomJsonName}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:json_test.TestCustomJsonName)
        com.google.protobuf.util.JsonTestProto.TestCustomJsonNameOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.google.protobuf.util.JsonTestProto.internal_static_json_test_TestCustomJsonName_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.google.protobuf.util.JsonTestProto.internal_static_json_test_TestCustomJsonName_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.google.protobuf.util.JsonTestProto.TestCustomJsonName.class, com.google.protobuf.util.JsonTestProto.TestCustomJsonName.Builder.class);
      }

      // Construct using com.google.protobuf.util.JsonTestProto.TestCustomJsonName.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        value_ = 0;

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.google.protobuf.util.JsonTestProto.internal_static_json_test_TestCustomJsonName_descriptor;
      }

      public com.google.protobuf.util.JsonTestProto.TestCustomJsonName getDefaultInstanceForType() {
        return com.google.protobuf.util.JsonTestProto.TestCustomJsonName.getDefaultInstance();
      }

      public com.google.protobuf.util.JsonTestProto.TestCustomJsonName build() {
        com.google.protobuf.util.JsonTestProto.TestCustomJsonName result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.google.protobuf.util.JsonTestProto.TestCustomJsonName buildPartial() {
        com.google.protobuf.util.JsonTestProto.TestCustomJsonName result = new com.google.protobuf.util.JsonTestProto.TestCustomJsonName(this);
        result.value_ = value_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.google.protobuf.util.JsonTestProto.TestCustomJsonName) {
          return mergeFrom((com.google.protobuf.util.JsonTestProto.TestCustomJsonName)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.google.protobuf.util.JsonTestProto.TestCustomJsonName other) {
        if (other == com.google.protobuf.util.JsonTestProto.TestCustomJsonName.getDefaultInstance()) return this;
        if (other.getValue() != 0) {
          setValue(other.getValue());
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.util.JsonTestProto.TestCustomJsonName parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.google.protobuf.util.JsonTestProto.TestCustomJsonName) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private int value_ ;
      /**
       * <code>int32 value = 1[json_name = "&#64;value"];</code>
       */
      public int getValue() {
        return value_;
      }
      /**
       * <code>int32 value = 1[json_name = "&#64;value"];</code>
       */
      public Builder setValue(int value) {
        
        value_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 value = 1[json_name = "&#64;value"];</code>
       */
      public Builder clearValue() {
        
        value_ = 0;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:json_test.TestCustomJsonName)
    }

    // @@protoc_insertion_point(class_scope:json_test.TestCustomJsonName)
    private static final com.google.protobuf.util.JsonTestProto.TestCustomJsonName DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.google.protobuf.util.JsonTestProto.TestCustomJsonName();
    }

    public static com.google.protobuf.util.JsonTestProto.TestCustomJsonName getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<TestCustomJsonName>
        PARSER = new com.google.protobuf.AbstractParser<TestCustomJsonName>() {
      public TestCustomJsonName parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new TestCustomJsonName(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<TestCustomJsonName> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<TestCustomJsonName> getParserForType() {
      return PARSER;
    }

    public com.google.protobuf.util.JsonTestProto.TestCustomJsonName getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface TestRecursiveOrBuilder extends
      // @@protoc_insertion_point(interface_extends:json_test.TestRecursive)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>int32 value = 1;</code>
     */
    int getValue();

    /**
     * <code>.json_test.TestRecursive nested = 2;</code>
     */
    boolean hasNested();
    /**
     * <code>.json_test.TestRecursive nested = 2;</code>
     */
    com.google.protobuf.util.JsonTestProto.TestRecursive getNested();
    /**
     * <code>.json_test.TestRecursive nested = 2;</code>
     */
    com.google.protobuf.util.JsonTestProto.TestRecursiveOrBuilder getNestedOrBuilder();
  }
  /**
   * Protobuf type {@code json_test.TestRecursive}
   */
  public  static final class TestRecursive extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:json_test.TestRecursive)
      TestRecursiveOrBuilder {
    // Use TestRecursive.newBuilder() to construct.
    private TestRecursive(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private TestRecursive() {
      value_ = 0;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private TestRecursive(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 8: {

              value_ = input.readInt32();
              break;
            }
            case 18: {
              com.google.protobuf.util.JsonTestProto.TestRecursive.Builder subBuilder = null;
              if (nested_ != null) {
                subBuilder = nested_.toBuilder();
              }
              nested_ = input.readMessage(com.google.protobuf.util.JsonTestProto.TestRecursive.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(nested_);
                nested_ = subBuilder.buildPartial();
              }

              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.google.protobuf.util.JsonTestProto.internal_static_json_test_TestRecursive_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.protobuf.util.JsonTestProto.internal_static_json_test_TestRecursive_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.protobuf.util.JsonTestProto.TestRecursive.class, com.google.protobuf.util.JsonTestProto.TestRecursive.Builder.class);
    }

    public static final int VALUE_FIELD_NUMBER = 1;
    private int value_;
    /**
     * <code>int32 value = 1;</code>
     */
    public int getValue() {
      return value_;
    }

    public static final int NESTED_FIELD_NUMBER = 2;
    private com.google.protobuf.util.JsonTestProto.TestRecursive nested_;
    /**
     * <code>.json_test.TestRecursive nested = 2;</code>
     */
    public boolean hasNested() {
      return nested_ != null;
    }
    /**
     * <code>.json_test.TestRecursive nested = 2;</code>
     */
    public com.google.protobuf.util.JsonTestProto.TestRecursive getNested() {
      return nested_ == null ? com.google.protobuf.util.JsonTestProto.TestRecursive.getDefaultInstance() : nested_;
    }
    /**
     * <code>.json_test.TestRecursive nested = 2;</code>
     */
    public com.google.protobuf.util.JsonTestProto.TestRecursiveOrBuilder getNestedOrBuilder() {
      return getNested();
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (value_ != 0) {
        output.writeInt32(1, value_);
      }
      if (nested_ != null) {
        output.writeMessage(2, getNested());
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (value_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, value_);
      }
      if (nested_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getNested());
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.google.protobuf.util.JsonTestProto.TestRecursive)) {
        return super.equals(obj);
      }
      com.google.protobuf.util.JsonTestProto.TestRecursive other = (com.google.protobuf.util.JsonTestProto.TestRecursive) obj;

      boolean result = true;
      result = result && (getValue()
          == other.getValue());
      result = result && (hasNested() == other.hasNested());
      if (hasNested()) {
        result = result && getNested()
            .equals(other.getNested());
      }
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + VALUE_FIELD_NUMBER;
      hash = (53 * hash) + getValue();
      if (hasNested()) {
        hash = (37 * hash) + NESTED_FIELD_NUMBER;
        hash = (53 * hash) + getNested().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.google.protobuf.util.JsonTestProto.TestRecursive parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.google.protobuf.util.JsonTestProto.TestRecursive parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.google.protobuf.util.JsonTestProto.TestRecursive parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.google.protobuf.util.JsonTestProto.TestRecursive parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.google.protobuf.util.JsonTestProto.TestRecursive parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.google.protobuf.util.JsonTestProto.TestRecursive parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.google.protobuf.util.JsonTestProto.TestRecursive parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.google.protobuf.util.JsonTestProto.TestRecursive parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.google.protobuf.util.JsonTestProto.TestRecursive parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.google.protobuf.util.JsonTestProto.TestRecursive parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.google.protobuf.util.JsonTestProto.TestRecursive parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.google.protobuf.util.JsonTestProto.TestRecursive parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.google.protobuf.util.JsonTestProto.TestRecursive prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code json_test.TestRecursive}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:json_test.TestRecursive)
        com.google.protobuf.util.JsonTestProto.TestRecursiveOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.google.protobuf.util.JsonTestProto.internal_static_json_test_TestRecursive_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.google.protobuf.util.JsonTestProto.internal_static_json_test_TestRecursive_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.google.protobuf.util.JsonTestProto.TestRecursive.class, com.google.protobuf.util.JsonTestProto.TestRecursive.Builder.class);
      }

      // Construct using com.google.protobuf.util.JsonTestProto.TestRecursive.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        value_ = 0;

        if (nestedBuilder_ == null) {
          nested_ = null;
        } else {
          nested_ = null;
          nestedBuilder_ = null;
        }
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.google.protobuf.util.JsonTestProto.internal_static_json_test_TestRecursive_descriptor;
      }

      public com.google.protobuf.util.JsonTestProto.TestRecursive getDefaultInstanceForType() {
        return com.google.protobuf.util.JsonTestProto.TestRecursive.getDefaultInstance();
      }

      public com.google.protobuf.util.JsonTestProto.TestRecursive build() {
        com.google.protobuf.util.JsonTestProto.TestRecursive result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.google.protobuf.util.JsonTestProto.TestRecursive buildPartial() {
        com.google.protobuf.util.JsonTestProto.TestRecursive result = new com.google.protobuf.util.JsonTestProto.TestRecursive(this);
        result.value_ = value_;
        if (nestedBuilder_ == null) {
          result.nested_ = nested_;
        } else {
          result.nested_ = nestedBuilder_.build();
        }
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.google.protobuf.util.JsonTestProto.TestRecursive) {
          return mergeFrom((com.google.protobuf.util.JsonTestProto.TestRecursive)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.google.protobuf.util.JsonTestProto.TestRecursive other) {
        if (other == com.google.protobuf.util.JsonTestProto.TestRecursive.getDefaultInstance()) return this;
        if (other.getValue() != 0) {
          setValue(other.getValue());
        }
        if (other.hasNested()) {
          mergeNested(other.getNested());
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.util.JsonTestProto.TestRecursive parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.google.protobuf.util.JsonTestProto.TestRecursive) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private int value_ ;
      /**
       * <code>int32 value = 1;</code>
       */
      public int getValue() {
        return value_;
      }
      /**
       * <code>int32 value = 1;</code>
       */
      public Builder setValue(int value) {
        
        value_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 value = 1;</code>
       */
      public Builder clearValue() {
        
        value_ = 0;
        onChanged();
        return this;
      }

      private com.google.protobuf.util.JsonTestProto.TestRecursive nested_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.util.JsonTestProto.TestRecursive, com.google.protobuf.util.JsonTestProto.TestRecursive.Builder, com.google.protobuf.util.JsonTestProto.TestRecursiveOrBuilder> nestedBuilder_;
      /**
       * <code>.json_test.TestRecursive nested = 2;</code>
       */
      public boolean hasNested() {
        return nestedBuilder_ != null || nested_ != null;
      }
      /**
       * <code>.json_test.TestRecursive nested = 2;</code>
       */
      public com.google.protobuf.util.JsonTestProto.TestRecursive getNested() {
        if (nestedBuilder_ == null) {
          return nested_ == null ? com.google.protobuf.util.JsonTestProto.TestRecursive.getDefaultInstance() : nested_;
        } else {
          return nestedBuilder_.getMessage();
        }
      }
      /**
       * <code>.json_test.TestRecursive nested = 2;</code>
       */
      public Builder setNested(com.google.protobuf.util.JsonTestProto.TestRecursive value) {
        if (nestedBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          nested_ = value;
          onChanged();
        } else {
          nestedBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.json_test.TestRecursive nested = 2;</code>
       */
      public Builder setNested(
          com.google.protobuf.util.JsonTestProto.TestRecursive.Builder builderForValue) {
        if (nestedBuilder_ == null) {
          nested_ = builderForValue.build();
          onChanged();
        } else {
          nestedBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.json_test.TestRecursive nested = 2;</code>
       */
      public Builder mergeNested(com.google.protobuf.util.JsonTestProto.TestRecursive value) {
        if (nestedBuilder_ == null) {
          if (nested_ != null) {
            nested_ =
              com.google.protobuf.util.JsonTestProto.TestRecursive.newBuilder(nested_).mergeFrom(value).buildPartial();
          } else {
            nested_ = value;
          }
          onChanged();
        } else {
          nestedBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.json_test.TestRecursive nested = 2;</code>
       */
      public Builder clearNested() {
        if (nestedBuilder_ == null) {
          nested_ = null;
          onChanged();
        } else {
          nested_ = null;
          nestedBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.json_test.TestRecursive nested = 2;</code>
       */
      public com.google.protobuf.util.JsonTestProto.TestRecursive.Builder getNestedBuilder() {
        
        onChanged();
        return getNestedFieldBuilder().getBuilder();
      }
      /**
       * <code>.json_test.TestRecursive nested = 2;</code>
       */
      public com.google.protobuf.util.JsonTestProto.TestRecursiveOrBuilder getNestedOrBuilder() {
        if (nestedBuilder_ != null) {
          return nestedBuilder_.getMessageOrBuilder();
        } else {
          return nested_ == null ?
              com.google.protobuf.util.JsonTestProto.TestRecursive.getDefaultInstance() : nested_;
        }
      }
      /**
       * <code>.json_test.TestRecursive nested = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.util.JsonTestProto.TestRecursive, com.google.protobuf.util.JsonTestProto.TestRecursive.Builder, com.google.protobuf.util.JsonTestProto.TestRecursiveOrBuilder> 
          getNestedFieldBuilder() {
        if (nestedBuilder_ == null) {
          nestedBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.util.JsonTestProto.TestRecursive, com.google.protobuf.util.JsonTestProto.TestRecursive.Builder, com.google.protobuf.util.JsonTestProto.TestRecursiveOrBuilder>(
                  getNested(),
                  getParentForChildren(),
                  isClean());
          nested_ = null;
        }
        return nestedBuilder_;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:json_test.TestRecursive)
    }

    // @@protoc_insertion_point(class_scope:json_test.TestRecursive)
    private static final com.google.protobuf.util.JsonTestProto.TestRecursive DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.google.protobuf.util.JsonTestProto.TestRecursive();
    }

    public static com.google.protobuf.util.JsonTestProto.TestRecursive getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<TestRecursive>
        PARSER = new com.google.protobuf.AbstractParser<TestRecursive>() {
      public TestRecursive parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new TestRecursive(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<TestRecursive> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<TestRecursive> getParserForType() {
      return PARSER;
    }

    public com.google.protobuf.util.JsonTestProto.TestRecursive getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_json_test_TestAllTypes_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_json_test_TestAllTypes_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_json_test_TestAllTypes_NestedMessage_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_json_test_TestAllTypes_NestedMessage_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_json_test_TestOneof_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_json_test_TestOneof_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_json_test_TestMap_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_json_test_TestMap_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_json_test_TestMap_Int32ToInt32MapEntry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_json_test_TestMap_Int32ToInt32MapEntry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_json_test_TestMap_Int64ToInt32MapEntry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_json_test_TestMap_Int64ToInt32MapEntry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_json_test_TestMap_Uint32ToInt32MapEntry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_json_test_TestMap_Uint32ToInt32MapEntry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_json_test_TestMap_Uint64ToInt32MapEntry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_json_test_TestMap_Uint64ToInt32MapEntry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_json_test_TestMap_Sint32ToInt32MapEntry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_json_test_TestMap_Sint32ToInt32MapEntry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_json_test_TestMap_Sint64ToInt32MapEntry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_json_test_TestMap_Sint64ToInt32MapEntry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_json_test_TestMap_Fixed32ToInt32MapEntry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_json_test_TestMap_Fixed32ToInt32MapEntry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_json_test_TestMap_Fixed64ToInt32MapEntry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_json_test_TestMap_Fixed64ToInt32MapEntry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_json_test_TestMap_Sfixed32ToInt32MapEntry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_json_test_TestMap_Sfixed32ToInt32MapEntry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_json_test_TestMap_Sfixed64ToInt32MapEntry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_json_test_TestMap_Sfixed64ToInt32MapEntry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_json_test_TestMap_BoolToInt32MapEntry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_json_test_TestMap_BoolToInt32MapEntry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_json_test_TestMap_StringToInt32MapEntry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_json_test_TestMap_StringToInt32MapEntry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_json_test_TestMap_Int32ToInt64MapEntry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_json_test_TestMap_Int32ToInt64MapEntry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_json_test_TestMap_Int32ToUint32MapEntry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_json_test_TestMap_Int32ToUint32MapEntry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_json_test_TestMap_Int32ToUint64MapEntry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_json_test_TestMap_Int32ToUint64MapEntry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_json_test_TestMap_Int32ToSint32MapEntry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_json_test_TestMap_Int32ToSint32MapEntry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_json_test_TestMap_Int32ToSint64MapEntry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_json_test_TestMap_Int32ToSint64MapEntry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_json_test_TestMap_Int32ToFixed32MapEntry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_json_test_TestMap_Int32ToFixed32MapEntry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_json_test_TestMap_Int32ToFixed64MapEntry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_json_test_TestMap_Int32ToFixed64MapEntry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_json_test_TestMap_Int32ToSfixed32MapEntry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_json_test_TestMap_Int32ToSfixed32MapEntry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_json_test_TestMap_Int32ToSfixed64MapEntry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_json_test_TestMap_Int32ToSfixed64MapEntry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_json_test_TestMap_Int32ToFloatMapEntry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_json_test_TestMap_Int32ToFloatMapEntry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_json_test_TestMap_Int32ToDoubleMapEntry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_json_test_TestMap_Int32ToDoubleMapEntry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_json_test_TestMap_Int32ToBoolMapEntry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_json_test_TestMap_Int32ToBoolMapEntry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_json_test_TestMap_Int32ToStringMapEntry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_json_test_TestMap_Int32ToStringMapEntry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_json_test_TestMap_Int32ToBytesMapEntry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_json_test_TestMap_Int32ToBytesMapEntry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_json_test_TestMap_Int32ToMessageMapEntry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_json_test_TestMap_Int32ToMessageMapEntry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_json_test_TestMap_Int32ToEnumMapEntry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_json_test_TestMap_Int32ToEnumMapEntry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_json_test_TestWrappers_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_json_test_TestWrappers_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_json_test_TestTimestamp_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_json_test_TestTimestamp_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_json_test_TestDuration_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_json_test_TestDuration_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_json_test_TestFieldMask_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_json_test_TestFieldMask_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_json_test_TestStruct_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_json_test_TestStruct_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_json_test_TestAny_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_json_test_TestAny_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_json_test_TestAny_AnyMapEntry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_json_test_TestAny_AnyMapEntry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_json_test_TestCustomJsonName_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_json_test_TestCustomJsonName_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_json_test_TestRecursive_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_json_test_TestRecursive_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n(com/google/protobuf/util/json_test.pro" +
      "to\022\tjson_test\032\031google/protobuf/any.proto" +
      "\032\036google/protobuf/wrappers.proto\032\037google" +
      "/protobuf/timestamp.proto\032\036google/protob" +
      "uf/duration.proto\032 google/protobuf/field" +
      "_mask.proto\032\034google/protobuf/struct.prot" +
      "o\"\331\010\n\014TestAllTypes\022\026\n\016optional_int32\030\001 \001" +
      "(\005\022\026\n\016optional_int64\030\002 \001(\003\022\027\n\017optional_u" +
      "int32\030\003 \001(\r\022\027\n\017optional_uint64\030\004 \001(\004\022\027\n\017" +
      "optional_sint32\030\005 \001(\021\022\027\n\017optional_sint64",
      "\030\006 \001(\022\022\030\n\020optional_fixed32\030\007 \001(\007\022\030\n\020opti" +
      "onal_fixed64\030\010 \001(\006\022\031\n\021optional_sfixed32\030" +
      "\t \001(\017\022\031\n\021optional_sfixed64\030\n \001(\020\022\026\n\016opti" +
      "onal_float\030\013 \001(\002\022\027\n\017optional_double\030\014 \001(" +
      "\001\022\025\n\roptional_bool\030\r \001(\010\022\027\n\017optional_str" +
      "ing\030\016 \001(\t\022\026\n\016optional_bytes\030\017 \001(\014\022F\n\027opt" +
      "ional_nested_message\030\022 \001(\0132%.json_test.T" +
      "estAllTypes.NestedMessage\022@\n\024optional_ne" +
      "sted_enum\030\025 \001(\0162\".json_test.TestAllTypes" +
      ".NestedEnum\022\026\n\016repeated_int32\030\037 \003(\005\022\026\n\016r",
      "epeated_int64\030  \003(\003\022\027\n\017repeated_uint32\030!" +
      " \003(\r\022\027\n\017repeated_uint64\030\" \003(\004\022\027\n\017repeate" +
      "d_sint32\030# \003(\021\022\027\n\017repeated_sint64\030$ \003(\022\022" +
      "\030\n\020repeated_fixed32\030% \003(\007\022\030\n\020repeated_fi" +
      "xed64\030& \003(\006\022\031\n\021repeated_sfixed32\030\' \003(\017\022\031" +
      "\n\021repeated_sfixed64\030( \003(\020\022\026\n\016repeated_fl" +
      "oat\030) \003(\002\022\027\n\017repeated_double\030* \003(\001\022\025\n\rre" +
      "peated_bool\030+ \003(\010\022\027\n\017repeated_string\030, \003" +
      "(\t\022\026\n\016repeated_bytes\030- \003(\014\022F\n\027repeated_n" +
      "ested_message\0300 \003(\0132%.json_test.TestAllT",
      "ypes.NestedMessage\022@\n\024repeated_nested_en" +
      "um\0303 \003(\0162\".json_test.TestAllTypes.Nested" +
      "Enum\032\036\n\rNestedMessage\022\r\n\005value\030\001 \001(\005\"\'\n\n" +
      "NestedEnum\022\007\n\003FOO\020\000\022\007\n\003BAR\020\001\022\007\n\003BAZ\020\002\"\260\001" +
      "\n\tTestOneof\022\025\n\013oneof_int32\030\001 \001(\005H\000\022E\n\024on" +
      "eof_nested_message\030\002 \001(\0132%.json_test.Tes" +
      "tAllTypes.NestedMessageH\000\0226\n\020oneof_null_" +
      "value\030\003 \001(\0162\032.google.protobuf.NullValueH" +
      "\000B\r\n\013oneof_field\"\332\034\n\007TestMap\022C\n\022int32_to" +
      "_int32_map\030\001 \003(\0132\'.json_test.TestMap.Int",
      "32ToInt32MapEntry\022C\n\022int64_to_int32_map\030" +
      "\002 \003(\0132\'.json_test.TestMap.Int64ToInt32Ma" +
      "pEntry\022E\n\023uint32_to_int32_map\030\003 \003(\0132(.js" +
      "on_test.TestMap.Uint32ToInt32MapEntry\022E\n" +
      "\023uint64_to_int32_map\030\004 \003(\0132(.json_test.T" +
      "estMap.Uint64ToInt32MapEntry\022E\n\023sint32_t" +
      "o_int32_map\030\005 \003(\0132(.json_test.TestMap.Si" +
      "nt32ToInt32MapEntry\022E\n\023sint64_to_int32_m" +
      "ap\030\006 \003(\0132(.json_test.TestMap.Sint64ToInt" +
      "32MapEntry\022G\n\024fixed32_to_int32_map\030\007 \003(\013",
      "2).json_test.TestMap.Fixed32ToInt32MapEn" +
      "try\022G\n\024fixed64_to_int32_map\030\010 \003(\0132).json" +
      "_test.TestMap.Fixed64ToInt32MapEntry\022I\n\025" +
      "sfixed32_to_int32_map\030\t \003(\0132*.json_test." +
      "TestMap.Sfixed32ToInt32MapEntry\022I\n\025sfixe" +
      "d64_to_int32_map\030\n \003(\0132*.json_test.TestM" +
      "ap.Sfixed64ToInt32MapEntry\022A\n\021bool_to_in" +
      "t32_map\030\013 \003(\0132&.json_test.TestMap.BoolTo" +
      "Int32MapEntry\022E\n\023string_to_int32_map\030\014 \003" +
      "(\0132(.json_test.TestMap.StringToInt32MapE",
      "ntry\022C\n\022int32_to_int64_map\030e \003(\0132\'.json_" +
      "test.TestMap.Int32ToInt64MapEntry\022E\n\023int" +
      "32_to_uint32_map\030f \003(\0132(.json_test.TestM" +
      "ap.Int32ToUint32MapEntry\022E\n\023int32_to_uin" +
      "t64_map\030g \003(\0132(.json_test.TestMap.Int32T" +
      "oUint64MapEntry\022E\n\023int32_to_sint32_map\030h" +
      " \003(\0132(.json_test.TestMap.Int32ToSint32Ma" +
      "pEntry\022E\n\023int32_to_sint64_map\030i \003(\0132(.js" +
      "on_test.TestMap.Int32ToSint64MapEntry\022G\n" +
      "\024int32_to_fixed32_map\030j \003(\0132).json_test.",
      "TestMap.Int32ToFixed32MapEntry\022G\n\024int32_" +
      "to_fixed64_map\030k \003(\0132).json_test.TestMap" +
      ".Int32ToFixed64MapEntry\022I\n\025int32_to_sfix" +
      "ed32_map\030l \003(\0132*.json_test.TestMap.Int32" +
      "ToSfixed32MapEntry\022I\n\025int32_to_sfixed64_" +
      "map\030m \003(\0132*.json_test.TestMap.Int32ToSfi" +
      "xed64MapEntry\022C\n\022int32_to_float_map\030n \003(" +
      "\0132\'.json_test.TestMap.Int32ToFloatMapEnt" +
      "ry\022E\n\023int32_to_double_map\030o \003(\0132(.json_t" +
      "est.TestMap.Int32ToDoubleMapEntry\022A\n\021int",
      "32_to_bool_map\030p \003(\0132&.json_test.TestMap" +
      ".Int32ToBoolMapEntry\022E\n\023int32_to_string_" +
      "map\030q \003(\0132(.json_test.TestMap.Int32ToStr" +
      "ingMapEntry\022C\n\022int32_to_bytes_map\030r \003(\0132" +
      "\'.json_test.TestMap.Int32ToBytesMapEntry" +
      "\022G\n\024int32_to_message_map\030s \003(\0132).json_te" +
      "st.TestMap.Int32ToMessageMapEntry\022A\n\021int" +
      "32_to_enum_map\030t \003(\0132&.json_test.TestMap" +
      ".Int32ToEnumMapEntry\0326\n\024Int32ToInt32MapE" +
      "ntry\022\013\n\003key\030\001 \001(\005\022\r\n\005value\030\002 \001(\005:\0028\001\0326\n\024",
      "Int64ToInt32MapEntry\022\013\n\003key\030\001 \001(\003\022\r\n\005val" +
      "ue\030\002 \001(\005:\0028\001\0327\n\025Uint32ToInt32MapEntry\022\013\n" +
      "\003key\030\001 \001(\r\022\r\n\005value\030\002 \001(\005:\0028\001\0327\n\025Uint64T" +
      "oInt32MapEntry\022\013\n\003key\030\001 \001(\004\022\r\n\005value\030\002 \001" +
      "(\005:\0028\001\0327\n\025Sint32ToInt32MapEntry\022\013\n\003key\030\001" +
      " \001(\021\022\r\n\005value\030\002 \001(\005:\0028\001\0327\n\025Sint64ToInt32" +
      "MapEntry\022\013\n\003key\030\001 \001(\022\022\r\n\005value\030\002 \001(\005:\0028\001" +
      "\0328\n\026Fixed32ToInt32MapEntry\022\013\n\003key\030\001 \001(\007\022" +
      "\r\n\005value\030\002 \001(\005:\0028\001\0328\n\026Fixed64ToInt32MapE" +
      "ntry\022\013\n\003key\030\001 \001(\006\022\r\n\005value\030\002 \001(\005:\0028\001\0329\n\027",
      "Sfixed32ToInt32MapEntry\022\013\n\003key\030\001 \001(\017\022\r\n\005" +
      "value\030\002 \001(\005:\0028\001\0329\n\027Sfixed64ToInt32MapEnt" +
      "ry\022\013\n\003key\030\001 \001(\020\022\r\n\005value\030\002 \001(\005:\0028\001\0325\n\023Bo" +
      "olToInt32MapEntry\022\013\n\003key\030\001 \001(\010\022\r\n\005value\030" +
      "\002 \001(\005:\0028\001\0327\n\025StringToInt32MapEntry\022\013\n\003ke" +
      "y\030\001 \001(\t\022\r\n\005value\030\002 \001(\005:\0028\001\0326\n\024Int32ToInt" +
      "64MapEntry\022\013\n\003key\030\001 \001(\005\022\r\n\005value\030\002 \001(\003:\002" +
      "8\001\0327\n\025Int32ToUint32MapEntry\022\013\n\003key\030\001 \001(\005" +
      "\022\r\n\005value\030\002 \001(\r:\0028\001\0327\n\025Int32ToUint64MapE" +
      "ntry\022\013\n\003key\030\001 \001(\005\022\r\n\005value\030\002 \001(\004:\0028\001\0327\n\025",
      "Int32ToSint32MapEntry\022\013\n\003key\030\001 \001(\005\022\r\n\005va" +
      "lue\030\002 \001(\021:\0028\001\0327\n\025Int32ToSint64MapEntry\022\013" +
      "\n\003key\030\001 \001(\005\022\r\n\005value\030\002 \001(\022:\0028\001\0328\n\026Int32T" +
      "oFixed32MapEntry\022\013\n\003key\030\001 \001(\005\022\r\n\005value\030\002" +
      " \001(\007:\0028\001\0328\n\026Int32ToFixed64MapEntry\022\013\n\003ke" +
      "y\030\001 \001(\005\022\r\n\005value\030\002 \001(\006:\0028\001\0329\n\027Int32ToSfi" +
      "xed32MapEntry\022\013\n\003key\030\001 \001(\005\022\r\n\005value\030\002 \001(" +
      "\017:\0028\001\0329\n\027Int32ToSfixed64MapEntry\022\013\n\003key\030" +
      "\001 \001(\005\022\r\n\005value\030\002 \001(\020:\0028\001\0326\n\024Int32ToFloat" +
      "MapEntry\022\013\n\003key\030\001 \001(\005\022\r\n\005value\030\002 \001(\002:\0028\001",
      "\0327\n\025Int32ToDoubleMapEntry\022\013\n\003key\030\001 \001(\005\022\r" +
      "\n\005value\030\002 \001(\001:\0028\001\0325\n\023Int32ToBoolMapEntry" +
      "\022\013\n\003key\030\001 \001(\005\022\r\n\005value\030\002 \001(\010:\0028\001\0327\n\025Int3" +
      "2ToStringMapEntry\022\013\n\003key\030\001 \001(\005\022\r\n\005value\030" +
      "\002 \001(\t:\0028\001\0326\n\024Int32ToBytesMapEntry\022\013\n\003key" +
      "\030\001 \001(\005\022\r\n\005value\030\002 \001(\014:\0028\001\032_\n\026Int32ToMess" +
      "ageMapEntry\022\013\n\003key\030\001 \001(\005\0224\n\005value\030\002 \001(\0132" +
      "%.json_test.TestAllTypes.NestedMessage:\002" +
      "8\001\032Y\n\023Int32ToEnumMapEntry\022\013\n\003key\030\001 \001(\005\0221" +
      "\n\005value\030\002 \001(\0162\".json_test.TestAllTypes.N",
      "estedEnum:\0028\001\"\326\003\n\014TestWrappers\0220\n\013int32_" +
      "value\030\001 \001(\0132\033.google.protobuf.Int32Value" +
      "\0222\n\014uint32_value\030\002 \001(\0132\034.google.protobuf" +
      ".UInt32Value\0220\n\013int64_value\030\003 \001(\0132\033.goog" +
      "le.protobuf.Int64Value\0222\n\014uint64_value\030\004" +
      " \001(\0132\034.google.protobuf.UInt64Value\0220\n\013fl" +
      "oat_value\030\005 \001(\0132\033.google.protobuf.FloatV" +
      "alue\0222\n\014double_value\030\006 \001(\0132\034.google.prot" +
      "obuf.DoubleValue\022.\n\nbool_value\030\007 \001(\0132\032.g" +
      "oogle.protobuf.BoolValue\0222\n\014string_value",
      "\030\010 \001(\0132\034.google.protobuf.StringValue\0220\n\013" +
      "bytes_value\030\t \001(\0132\033.google.protobuf.Byte" +
      "sValue\"D\n\rTestTimestamp\0223\n\017timestamp_val" +
      "ue\030\001 \001(\0132\032.google.protobuf.Timestamp\"A\n\014" +
      "TestDuration\0221\n\016duration_value\030\001 \001(\0132\031.g" +
      "oogle.protobuf.Duration\"E\n\rTestFieldMask" +
      "\0224\n\020field_mask_value\030\001 \001(\0132\032.google.prot" +
      "obuf.FieldMask\"\222\001\n\nTestStruct\022-\n\014struct_" +
      "value\030\001 \001(\0132\027.google.protobuf.Struct\022%\n\005" +
      "value\030\002 \001(\0132\026.google.protobuf.Value\022.\n\nl",
      "ist_value\030\003 \001(\0132\032.google.protobuf.ListVa" +
      "lue\"\250\001\n\007TestAny\022\'\n\tany_value\030\001 \001(\0132\024.goo" +
      "gle.protobuf.Any\022/\n\007any_map\030\002 \003(\0132\036.json" +
      "_test.TestAny.AnyMapEntry\032C\n\013AnyMapEntry" +
      "\022\013\n\003key\030\001 \001(\t\022#\n\005value\030\002 \001(\0132\024.google.pr" +
      "otobuf.Any:\0028\001\"+\n\022TestCustomJsonName\022\025\n\005" +
      "value\030\001 \001(\005R\006@value\"H\n\rTestRecursive\022\r\n\005" +
      "value\030\001 \001(\005\022(\n\006nested\030\002 \001(\0132\030.json_test." +
      "TestRecursiveB)\n\030com.google.protobuf.uti" +
      "lB\rJsonTestProtob\006proto3"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          com.google.protobuf.AnyProto.getDescriptor(),
          com.google.protobuf.WrappersProto.getDescriptor(),
          com.google.protobuf.TimestampProto.getDescriptor(),
          com.google.protobuf.DurationProto.getDescriptor(),
          com.google.protobuf.FieldMaskProto.getDescriptor(),
          com.google.protobuf.StructProto.getDescriptor(),
        }, assigner);
    internal_static_json_test_TestAllTypes_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_json_test_TestAllTypes_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_json_test_TestAllTypes_descriptor,
        new java.lang.String[] { "OptionalInt32", "OptionalInt64", "OptionalUint32", "OptionalUint64", "OptionalSint32", "OptionalSint64", "OptionalFixed32", "OptionalFixed64", "OptionalSfixed32", "OptionalSfixed64", "OptionalFloat", "OptionalDouble", "OptionalBool", "OptionalString", "OptionalBytes", "OptionalNestedMessage", "OptionalNestedEnum", "RepeatedInt32", "RepeatedInt64", "RepeatedUint32", "RepeatedUint64", "RepeatedSint32", "RepeatedSint64", "RepeatedFixed32", "RepeatedFixed64", "RepeatedSfixed32", "RepeatedSfixed64", "RepeatedFloat", "RepeatedDouble", "RepeatedBool", "RepeatedString", "RepeatedBytes", "RepeatedNestedMessage", "RepeatedNestedEnum", });
    internal_static_json_test_TestAllTypes_NestedMessage_descriptor =
      internal_static_json_test_TestAllTypes_descriptor.getNestedTypes().get(0);
    internal_static_json_test_TestAllTypes_NestedMessage_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_json_test_TestAllTypes_NestedMessage_descriptor,
        new java.lang.String[] { "Value", });
    internal_static_json_test_TestOneof_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_json_test_TestOneof_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_json_test_TestOneof_descriptor,
        new java.lang.String[] { "OneofInt32", "OneofNestedMessage", "OneofNullValue", "OneofField", });
    internal_static_json_test_TestMap_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_json_test_TestMap_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_json_test_TestMap_descriptor,
        new java.lang.String[] { "Int32ToInt32Map", "Int64ToInt32Map", "Uint32ToInt32Map", "Uint64ToInt32Map", "Sint32ToInt32Map", "Sint64ToInt32Map", "Fixed32ToInt32Map", "Fixed64ToInt32Map", "Sfixed32ToInt32Map", "Sfixed64ToInt32Map", "BoolToInt32Map", "StringToInt32Map", "Int32ToInt64Map", "Int32ToUint32Map", "Int32ToUint64Map", "Int32ToSint32Map", "Int32ToSint64Map", "Int32ToFixed32Map", "Int32ToFixed64Map", "Int32ToSfixed32Map", "Int32ToSfixed64Map", "Int32ToFloatMap", "Int32ToDoubleMap", "Int32ToBoolMap", "Int32ToStringMap", "Int32ToBytesMap", "Int32ToMessageMap", "Int32ToEnumMap", });
    internal_static_json_test_TestMap_Int32ToInt32MapEntry_descriptor =
      internal_static_json_test_TestMap_descriptor.getNestedTypes().get(0);
    internal_static_json_test_TestMap_Int32ToInt32MapEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_json_test_TestMap_Int32ToInt32MapEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_json_test_TestMap_Int64ToInt32MapEntry_descriptor =
      internal_static_json_test_TestMap_descriptor.getNestedTypes().get(1);
    internal_static_json_test_TestMap_Int64ToInt32MapEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_json_test_TestMap_Int64ToInt32MapEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_json_test_TestMap_Uint32ToInt32MapEntry_descriptor =
      internal_static_json_test_TestMap_descriptor.getNestedTypes().get(2);
    internal_static_json_test_TestMap_Uint32ToInt32MapEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_json_test_TestMap_Uint32ToInt32MapEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_json_test_TestMap_Uint64ToInt32MapEntry_descriptor =
      internal_static_json_test_TestMap_descriptor.getNestedTypes().get(3);
    internal_static_json_test_TestMap_Uint64ToInt32MapEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_json_test_TestMap_Uint64ToInt32MapEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_json_test_TestMap_Sint32ToInt32MapEntry_descriptor =
      internal_static_json_test_TestMap_descriptor.getNestedTypes().get(4);
    internal_static_json_test_TestMap_Sint32ToInt32MapEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_json_test_TestMap_Sint32ToInt32MapEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_json_test_TestMap_Sint64ToInt32MapEntry_descriptor =
      internal_static_json_test_TestMap_descriptor.getNestedTypes().get(5);
    internal_static_json_test_TestMap_Sint64ToInt32MapEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_json_test_TestMap_Sint64ToInt32MapEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_json_test_TestMap_Fixed32ToInt32MapEntry_descriptor =
      internal_static_json_test_TestMap_descriptor.getNestedTypes().get(6);
    internal_static_json_test_TestMap_Fixed32ToInt32MapEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_json_test_TestMap_Fixed32ToInt32MapEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_json_test_TestMap_Fixed64ToInt32MapEntry_descriptor =
      internal_static_json_test_TestMap_descriptor.getNestedTypes().get(7);
    internal_static_json_test_TestMap_Fixed64ToInt32MapEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_json_test_TestMap_Fixed64ToInt32MapEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_json_test_TestMap_Sfixed32ToInt32MapEntry_descriptor =
      internal_static_json_test_TestMap_descriptor.getNestedTypes().get(8);
    internal_static_json_test_TestMap_Sfixed32ToInt32MapEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_json_test_TestMap_Sfixed32ToInt32MapEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_json_test_TestMap_Sfixed64ToInt32MapEntry_descriptor =
      internal_static_json_test_TestMap_descriptor.getNestedTypes().get(9);
    internal_static_json_test_TestMap_Sfixed64ToInt32MapEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_json_test_TestMap_Sfixed64ToInt32MapEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_json_test_TestMap_BoolToInt32MapEntry_descriptor =
      internal_static_json_test_TestMap_descriptor.getNestedTypes().get(10);
    internal_static_json_test_TestMap_BoolToInt32MapEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_json_test_TestMap_BoolToInt32MapEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_json_test_TestMap_StringToInt32MapEntry_descriptor =
      internal_static_json_test_TestMap_descriptor.getNestedTypes().get(11);
    internal_static_json_test_TestMap_StringToInt32MapEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_json_test_TestMap_StringToInt32MapEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_json_test_TestMap_Int32ToInt64MapEntry_descriptor =
      internal_static_json_test_TestMap_descriptor.getNestedTypes().get(12);
    internal_static_json_test_TestMap_Int32ToInt64MapEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_json_test_TestMap_Int32ToInt64MapEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_json_test_TestMap_Int32ToUint32MapEntry_descriptor =
      internal_static_json_test_TestMap_descriptor.getNestedTypes().get(13);
    internal_static_json_test_TestMap_Int32ToUint32MapEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_json_test_TestMap_Int32ToUint32MapEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_json_test_TestMap_Int32ToUint64MapEntry_descriptor =
      internal_static_json_test_TestMap_descriptor.getNestedTypes().get(14);
    internal_static_json_test_TestMap_Int32ToUint64MapEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_json_test_TestMap_Int32ToUint64MapEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_json_test_TestMap_Int32ToSint32MapEntry_descriptor =
      internal_static_json_test_TestMap_descriptor.getNestedTypes().get(15);
    internal_static_json_test_TestMap_Int32ToSint32MapEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_json_test_TestMap_Int32ToSint32MapEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_json_test_TestMap_Int32ToSint64MapEntry_descriptor =
      internal_static_json_test_TestMap_descriptor.getNestedTypes().get(16);
    internal_static_json_test_TestMap_Int32ToSint64MapEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_json_test_TestMap_Int32ToSint64MapEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_json_test_TestMap_Int32ToFixed32MapEntry_descriptor =
      internal_static_json_test_TestMap_descriptor.getNestedTypes().get(17);
    internal_static_json_test_TestMap_Int32ToFixed32MapEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_json_test_TestMap_Int32ToFixed32MapEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_json_test_TestMap_Int32ToFixed64MapEntry_descriptor =
      internal_static_json_test_TestMap_descriptor.getNestedTypes().get(18);
    internal_static_json_test_TestMap_Int32ToFixed64MapEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_json_test_TestMap_Int32ToFixed64MapEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_json_test_TestMap_Int32ToSfixed32MapEntry_descriptor =
      internal_static_json_test_TestMap_descriptor.getNestedTypes().get(19);
    internal_static_json_test_TestMap_Int32ToSfixed32MapEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_json_test_TestMap_Int32ToSfixed32MapEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_json_test_TestMap_Int32ToSfixed64MapEntry_descriptor =
      internal_static_json_test_TestMap_descriptor.getNestedTypes().get(20);
    internal_static_json_test_TestMap_Int32ToSfixed64MapEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_json_test_TestMap_Int32ToSfixed64MapEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_json_test_TestMap_Int32ToFloatMapEntry_descriptor =
      internal_static_json_test_TestMap_descriptor.getNestedTypes().get(21);
    internal_static_json_test_TestMap_Int32ToFloatMapEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_json_test_TestMap_Int32ToFloatMapEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_json_test_TestMap_Int32ToDoubleMapEntry_descriptor =
      internal_static_json_test_TestMap_descriptor.getNestedTypes().get(22);
    internal_static_json_test_TestMap_Int32ToDoubleMapEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_json_test_TestMap_Int32ToDoubleMapEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_json_test_TestMap_Int32ToBoolMapEntry_descriptor =
      internal_static_json_test_TestMap_descriptor.getNestedTypes().get(23);
    internal_static_json_test_TestMap_Int32ToBoolMapEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_json_test_TestMap_Int32ToBoolMapEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_json_test_TestMap_Int32ToStringMapEntry_descriptor =
      internal_static_json_test_TestMap_descriptor.getNestedTypes().get(24);
    internal_static_json_test_TestMap_Int32ToStringMapEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_json_test_TestMap_Int32ToStringMapEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_json_test_TestMap_Int32ToBytesMapEntry_descriptor =
      internal_static_json_test_TestMap_descriptor.getNestedTypes().get(25);
    internal_static_json_test_TestMap_Int32ToBytesMapEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_json_test_TestMap_Int32ToBytesMapEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_json_test_TestMap_Int32ToMessageMapEntry_descriptor =
      internal_static_json_test_TestMap_descriptor.getNestedTypes().get(26);
    internal_static_json_test_TestMap_Int32ToMessageMapEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_json_test_TestMap_Int32ToMessageMapEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_json_test_TestMap_Int32ToEnumMapEntry_descriptor =
      internal_static_json_test_TestMap_descriptor.getNestedTypes().get(27);
    internal_static_json_test_TestMap_Int32ToEnumMapEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_json_test_TestMap_Int32ToEnumMapEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_json_test_TestWrappers_descriptor =
      getDescriptor().getMessageTypes().get(3);
    internal_static_json_test_TestWrappers_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_json_test_TestWrappers_descriptor,
        new java.lang.String[] { "Int32Value", "Uint32Value", "Int64Value", "Uint64Value", "FloatValue", "DoubleValue", "BoolValue", "StringValue", "BytesValue", });
    internal_static_json_test_TestTimestamp_descriptor =
      getDescriptor().getMessageTypes().get(4);
    internal_static_json_test_TestTimestamp_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_json_test_TestTimestamp_descriptor,
        new java.lang.String[] { "TimestampValue", });
    internal_static_json_test_TestDuration_descriptor =
      getDescriptor().getMessageTypes().get(5);
    internal_static_json_test_TestDuration_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_json_test_TestDuration_descriptor,
        new java.lang.String[] { "DurationValue", });
    internal_static_json_test_TestFieldMask_descriptor =
      getDescriptor().getMessageTypes().get(6);
    internal_static_json_test_TestFieldMask_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_json_test_TestFieldMask_descriptor,
        new java.lang.String[] { "FieldMaskValue", });
    internal_static_json_test_TestStruct_descriptor =
      getDescriptor().getMessageTypes().get(7);
    internal_static_json_test_TestStruct_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_json_test_TestStruct_descriptor,
        new java.lang.String[] { "StructValue", "Value", "ListValue", });
    internal_static_json_test_TestAny_descriptor =
      getDescriptor().getMessageTypes().get(8);
    internal_static_json_test_TestAny_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_json_test_TestAny_descriptor,
        new java.lang.String[] { "AnyValue", "AnyMap", });
    internal_static_json_test_TestAny_AnyMapEntry_descriptor =
      internal_static_json_test_TestAny_descriptor.getNestedTypes().get(0);
    internal_static_json_test_TestAny_AnyMapEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_json_test_TestAny_AnyMapEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_json_test_TestCustomJsonName_descriptor =
      getDescriptor().getMessageTypes().get(9);
    internal_static_json_test_TestCustomJsonName_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_json_test_TestCustomJsonName_descriptor,
        new java.lang.String[] { "Value", });
    internal_static_json_test_TestRecursive_descriptor =
      getDescriptor().getMessageTypes().get(10);
    internal_static_json_test_TestRecursive_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_json_test_TestRecursive_descriptor,
        new java.lang.String[] { "Value", "Nested", });
    com.google.protobuf.AnyProto.getDescriptor();
    com.google.protobuf.WrappersProto.getDescriptor();
    com.google.protobuf.TimestampProto.getDescriptor();
    com.google.protobuf.DurationProto.getDescriptor();
    com.google.protobuf.FieldMaskProto.getDescriptor();
    com.google.protobuf.StructProto.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
