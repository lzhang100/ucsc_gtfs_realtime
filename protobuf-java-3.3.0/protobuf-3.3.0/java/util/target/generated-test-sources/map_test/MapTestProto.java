// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: com/google/protobuf/map_test.proto

package map_test;

public final class MapTestProto {
  private MapTestProto() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface TestMapOrBuilder extends
      // @@protoc_insertion_point(interface_extends:map_test.TestMap)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>map&lt;int32, int32&gt; int32_to_int32_field = 1;</code>
     */
    int getInt32ToInt32FieldCount();
    /**
     * <code>map&lt;int32, int32&gt; int32_to_int32_field = 1;</code>
     */
    boolean containsInt32ToInt32Field(
        int key);
    /**
     * Use {@link #getInt32ToInt32FieldMap()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.Integer, java.lang.Integer>
    getInt32ToInt32Field();
    /**
     * <code>map&lt;int32, int32&gt; int32_to_int32_field = 1;</code>
     */
    java.util.Map<java.lang.Integer, java.lang.Integer>
    getInt32ToInt32FieldMap();
    /**
     * <code>map&lt;int32, int32&gt; int32_to_int32_field = 1;</code>
     */

    int getInt32ToInt32FieldOrDefault(
        int key,
        int defaultValue);
    /**
     * <code>map&lt;int32, int32&gt; int32_to_int32_field = 1;</code>
     */

    int getInt32ToInt32FieldOrThrow(
        int key);

    /**
     * <code>map&lt;int32, string&gt; int32_to_string_field = 2;</code>
     */
    int getInt32ToStringFieldCount();
    /**
     * <code>map&lt;int32, string&gt; int32_to_string_field = 2;</code>
     */
    boolean containsInt32ToStringField(
        int key);
    /**
     * Use {@link #getInt32ToStringFieldMap()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.Integer, java.lang.String>
    getInt32ToStringField();
    /**
     * <code>map&lt;int32, string&gt; int32_to_string_field = 2;</code>
     */
    java.util.Map<java.lang.Integer, java.lang.String>
    getInt32ToStringFieldMap();
    /**
     * <code>map&lt;int32, string&gt; int32_to_string_field = 2;</code>
     */

    java.lang.String getInt32ToStringFieldOrDefault(
        int key,
        java.lang.String defaultValue);
    /**
     * <code>map&lt;int32, string&gt; int32_to_string_field = 2;</code>
     */

    java.lang.String getInt32ToStringFieldOrThrow(
        int key);

    /**
     * <code>map&lt;int32, bytes&gt; int32_to_bytes_field = 3;</code>
     */
    int getInt32ToBytesFieldCount();
    /**
     * <code>map&lt;int32, bytes&gt; int32_to_bytes_field = 3;</code>
     */
    boolean containsInt32ToBytesField(
        int key);
    /**
     * Use {@link #getInt32ToBytesFieldMap()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.Integer, com.google.protobuf.ByteString>
    getInt32ToBytesField();
    /**
     * <code>map&lt;int32, bytes&gt; int32_to_bytes_field = 3;</code>
     */
    java.util.Map<java.lang.Integer, com.google.protobuf.ByteString>
    getInt32ToBytesFieldMap();
    /**
     * <code>map&lt;int32, bytes&gt; int32_to_bytes_field = 3;</code>
     */

    com.google.protobuf.ByteString getInt32ToBytesFieldOrDefault(
        int key,
        com.google.protobuf.ByteString defaultValue);
    /**
     * <code>map&lt;int32, bytes&gt; int32_to_bytes_field = 3;</code>
     */

    com.google.protobuf.ByteString getInt32ToBytesFieldOrThrow(
        int key);

    /**
     * <code>map&lt;int32, .map_test.TestMap.EnumValue&gt; int32_to_enum_field = 4;</code>
     */
    int getInt32ToEnumFieldCount();
    /**
     * <code>map&lt;int32, .map_test.TestMap.EnumValue&gt; int32_to_enum_field = 4;</code>
     */
    boolean containsInt32ToEnumField(
        int key);
    /**
     * Use {@link #getInt32ToEnumFieldMap()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.Integer, map_test.MapTestProto.TestMap.EnumValue>
    getInt32ToEnumField();
    /**
     * <code>map&lt;int32, .map_test.TestMap.EnumValue&gt; int32_to_enum_field = 4;</code>
     */
    java.util.Map<java.lang.Integer, map_test.MapTestProto.TestMap.EnumValue>
    getInt32ToEnumFieldMap();
    /**
     * <code>map&lt;int32, .map_test.TestMap.EnumValue&gt; int32_to_enum_field = 4;</code>
     */
    map_test.MapTestProto.TestMap.EnumValue getInt32ToEnumFieldOrDefault(
        int key,
        map_test.MapTestProto.TestMap.EnumValue defaultValue);
    /**
     * <code>map&lt;int32, .map_test.TestMap.EnumValue&gt; int32_to_enum_field = 4;</code>
     */
    map_test.MapTestProto.TestMap.EnumValue getInt32ToEnumFieldOrThrow(
        int key);
    /**
     * Use {@link #getInt32ToEnumFieldValueMap()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.Integer, java.lang.Integer>
    getInt32ToEnumFieldValue();
    /**
     * <code>map&lt;int32, .map_test.TestMap.EnumValue&gt; int32_to_enum_field = 4;</code>
     */
    java.util.Map<java.lang.Integer, java.lang.Integer>
    getInt32ToEnumFieldValueMap();
    /**
     * <code>map&lt;int32, .map_test.TestMap.EnumValue&gt; int32_to_enum_field = 4;</code>
     */

    int getInt32ToEnumFieldValueOrDefault(
        int key,
        int defaultValue);
    /**
     * <code>map&lt;int32, .map_test.TestMap.EnumValue&gt; int32_to_enum_field = 4;</code>
     */

    int getInt32ToEnumFieldValueOrThrow(
        int key);

    /**
     * <code>map&lt;int32, .map_test.TestMap.MessageValue&gt; int32_to_message_field = 5;</code>
     */
    int getInt32ToMessageFieldCount();
    /**
     * <code>map&lt;int32, .map_test.TestMap.MessageValue&gt; int32_to_message_field = 5;</code>
     */
    boolean containsInt32ToMessageField(
        int key);
    /**
     * Use {@link #getInt32ToMessageFieldMap()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.Integer, map_test.MapTestProto.TestMap.MessageValue>
    getInt32ToMessageField();
    /**
     * <code>map&lt;int32, .map_test.TestMap.MessageValue&gt; int32_to_message_field = 5;</code>
     */
    java.util.Map<java.lang.Integer, map_test.MapTestProto.TestMap.MessageValue>
    getInt32ToMessageFieldMap();
    /**
     * <code>map&lt;int32, .map_test.TestMap.MessageValue&gt; int32_to_message_field = 5;</code>
     */

    map_test.MapTestProto.TestMap.MessageValue getInt32ToMessageFieldOrDefault(
        int key,
        map_test.MapTestProto.TestMap.MessageValue defaultValue);
    /**
     * <code>map&lt;int32, .map_test.TestMap.MessageValue&gt; int32_to_message_field = 5;</code>
     */

    map_test.MapTestProto.TestMap.MessageValue getInt32ToMessageFieldOrThrow(
        int key);

    /**
     * <code>map&lt;string, int32&gt; string_to_int32_field = 6;</code>
     */
    int getStringToInt32FieldCount();
    /**
     * <code>map&lt;string, int32&gt; string_to_int32_field = 6;</code>
     */
    boolean containsStringToInt32Field(
        java.lang.String key);
    /**
     * Use {@link #getStringToInt32FieldMap()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.String, java.lang.Integer>
    getStringToInt32Field();
    /**
     * <code>map&lt;string, int32&gt; string_to_int32_field = 6;</code>
     */
    java.util.Map<java.lang.String, java.lang.Integer>
    getStringToInt32FieldMap();
    /**
     * <code>map&lt;string, int32&gt; string_to_int32_field = 6;</code>
     */

    int getStringToInt32FieldOrDefault(
        java.lang.String key,
        int defaultValue);
    /**
     * <code>map&lt;string, int32&gt; string_to_int32_field = 6;</code>
     */

    int getStringToInt32FieldOrThrow(
        java.lang.String key);

    /**
     * <code>map&lt;uint32, int32&gt; uint32_to_int32_field = 7;</code>
     */
    int getUint32ToInt32FieldCount();
    /**
     * <code>map&lt;uint32, int32&gt; uint32_to_int32_field = 7;</code>
     */
    boolean containsUint32ToInt32Field(
        int key);
    /**
     * Use {@link #getUint32ToInt32FieldMap()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.Integer, java.lang.Integer>
    getUint32ToInt32Field();
    /**
     * <code>map&lt;uint32, int32&gt; uint32_to_int32_field = 7;</code>
     */
    java.util.Map<java.lang.Integer, java.lang.Integer>
    getUint32ToInt32FieldMap();
    /**
     * <code>map&lt;uint32, int32&gt; uint32_to_int32_field = 7;</code>
     */

    int getUint32ToInt32FieldOrDefault(
        int key,
        int defaultValue);
    /**
     * <code>map&lt;uint32, int32&gt; uint32_to_int32_field = 7;</code>
     */

    int getUint32ToInt32FieldOrThrow(
        int key);

    /**
     * <code>map&lt;int64, int32&gt; int64_to_int32_field = 8;</code>
     */
    int getInt64ToInt32FieldCount();
    /**
     * <code>map&lt;int64, int32&gt; int64_to_int32_field = 8;</code>
     */
    boolean containsInt64ToInt32Field(
        long key);
    /**
     * Use {@link #getInt64ToInt32FieldMap()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.Long, java.lang.Integer>
    getInt64ToInt32Field();
    /**
     * <code>map&lt;int64, int32&gt; int64_to_int32_field = 8;</code>
     */
    java.util.Map<java.lang.Long, java.lang.Integer>
    getInt64ToInt32FieldMap();
    /**
     * <code>map&lt;int64, int32&gt; int64_to_int32_field = 8;</code>
     */

    int getInt64ToInt32FieldOrDefault(
        long key,
        int defaultValue);
    /**
     * <code>map&lt;int64, int32&gt; int64_to_int32_field = 8;</code>
     */

    int getInt64ToInt32FieldOrThrow(
        long key);
  }
  /**
   * Protobuf type {@code map_test.TestMap}
   */
  public  static final class TestMap extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:map_test.TestMap)
      TestMapOrBuilder {
    // Use TestMap.newBuilder() to construct.
    private TestMap(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private TestMap() {
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private TestMap(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                int32ToInt32Field_ = com.google.protobuf.MapField.newMapField(
                    Int32ToInt32FieldDefaultEntryHolder.defaultEntry);
                mutable_bitField0_ |= 0x00000001;
              }
              com.google.protobuf.MapEntry<java.lang.Integer, java.lang.Integer>
              int32ToInt32Field__ = input.readMessage(
                  Int32ToInt32FieldDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              int32ToInt32Field_.getMutableMap().put(
                  int32ToInt32Field__.getKey(), int32ToInt32Field__.getValue());
              break;
            }
            case 18: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                int32ToStringField_ = com.google.protobuf.MapField.newMapField(
                    Int32ToStringFieldDefaultEntryHolder.defaultEntry);
                mutable_bitField0_ |= 0x00000002;
              }
              com.google.protobuf.MapEntry<java.lang.Integer, java.lang.String>
              int32ToStringField__ = input.readMessage(
                  Int32ToStringFieldDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              int32ToStringField_.getMutableMap().put(
                  int32ToStringField__.getKey(), int32ToStringField__.getValue());
              break;
            }
            case 26: {
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                int32ToBytesField_ = com.google.protobuf.MapField.newMapField(
                    Int32ToBytesFieldDefaultEntryHolder.defaultEntry);
                mutable_bitField0_ |= 0x00000004;
              }
              com.google.protobuf.MapEntry<java.lang.Integer, com.google.protobuf.ByteString>
              int32ToBytesField__ = input.readMessage(
                  Int32ToBytesFieldDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              int32ToBytesField_.getMutableMap().put(
                  int32ToBytesField__.getKey(), int32ToBytesField__.getValue());
              break;
            }
            case 34: {
              if (!((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
                int32ToEnumField_ = com.google.protobuf.MapField.newMapField(
                    Int32ToEnumFieldDefaultEntryHolder.defaultEntry);
                mutable_bitField0_ |= 0x00000008;
              }
              com.google.protobuf.MapEntry<java.lang.Integer, java.lang.Integer>
              int32ToEnumField__ = input.readMessage(
                  Int32ToEnumFieldDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              int32ToEnumField_.getMutableMap().put(
                  int32ToEnumField__.getKey(), int32ToEnumField__.getValue());
              break;
            }
            case 42: {
              if (!((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
                int32ToMessageField_ = com.google.protobuf.MapField.newMapField(
                    Int32ToMessageFieldDefaultEntryHolder.defaultEntry);
                mutable_bitField0_ |= 0x00000010;
              }
              com.google.protobuf.MapEntry<java.lang.Integer, map_test.MapTestProto.TestMap.MessageValue>
              int32ToMessageField__ = input.readMessage(
                  Int32ToMessageFieldDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              int32ToMessageField_.getMutableMap().put(
                  int32ToMessageField__.getKey(), int32ToMessageField__.getValue());
              break;
            }
            case 50: {
              if (!((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
                stringToInt32Field_ = com.google.protobuf.MapField.newMapField(
                    StringToInt32FieldDefaultEntryHolder.defaultEntry);
                mutable_bitField0_ |= 0x00000020;
              }
              com.google.protobuf.MapEntry<java.lang.String, java.lang.Integer>
              stringToInt32Field__ = input.readMessage(
                  StringToInt32FieldDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              stringToInt32Field_.getMutableMap().put(
                  stringToInt32Field__.getKey(), stringToInt32Field__.getValue());
              break;
            }
            case 58: {
              if (!((mutable_bitField0_ & 0x00000040) == 0x00000040)) {
                uint32ToInt32Field_ = com.google.protobuf.MapField.newMapField(
                    Uint32ToInt32FieldDefaultEntryHolder.defaultEntry);
                mutable_bitField0_ |= 0x00000040;
              }
              com.google.protobuf.MapEntry<java.lang.Integer, java.lang.Integer>
              uint32ToInt32Field__ = input.readMessage(
                  Uint32ToInt32FieldDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              uint32ToInt32Field_.getMutableMap().put(
                  uint32ToInt32Field__.getKey(), uint32ToInt32Field__.getValue());
              break;
            }
            case 66: {
              if (!((mutable_bitField0_ & 0x00000080) == 0x00000080)) {
                int64ToInt32Field_ = com.google.protobuf.MapField.newMapField(
                    Int64ToInt32FieldDefaultEntryHolder.defaultEntry);
                mutable_bitField0_ |= 0x00000080;
              }
              com.google.protobuf.MapEntry<java.lang.Long, java.lang.Integer>
              int64ToInt32Field__ = input.readMessage(
                  Int64ToInt32FieldDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              int64ToInt32Field_.getMutableMap().put(
                  int64ToInt32Field__.getKey(), int64ToInt32Field__.getValue());
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return map_test.MapTestProto.internal_static_map_test_TestMap_descriptor;
    }

    @SuppressWarnings({"rawtypes"})
    protected com.google.protobuf.MapField internalGetMapField(
        int number) {
      switch (number) {
        case 1:
          return internalGetInt32ToInt32Field();
        case 2:
          return internalGetInt32ToStringField();
        case 3:
          return internalGetInt32ToBytesField();
        case 4:
          return internalGetInt32ToEnumField();
        case 5:
          return internalGetInt32ToMessageField();
        case 6:
          return internalGetStringToInt32Field();
        case 7:
          return internalGetUint32ToInt32Field();
        case 8:
          return internalGetInt64ToInt32Field();
        default:
          throw new RuntimeException(
              "Invalid map field number: " + number);
      }
    }
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return map_test.MapTestProto.internal_static_map_test_TestMap_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              map_test.MapTestProto.TestMap.class, map_test.MapTestProto.TestMap.Builder.class);
    }

    /**
     * Protobuf enum {@code map_test.TestMap.EnumValue}
     */
    public enum EnumValue
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>FOO = 0;</code>
       */
      FOO(0),
      /**
       * <code>BAR = 1;</code>
       */
      BAR(1),
      /**
       * <code>BAZ = 2;</code>
       */
      BAZ(2),
      /**
       * <code>QUX = 3;</code>
       */
      QUX(3),
      UNRECOGNIZED(-1),
      ;

      /**
       * <code>FOO = 0;</code>
       */
      public static final int FOO_VALUE = 0;
      /**
       * <code>BAR = 1;</code>
       */
      public static final int BAR_VALUE = 1;
      /**
       * <code>BAZ = 2;</code>
       */
      public static final int BAZ_VALUE = 2;
      /**
       * <code>QUX = 3;</code>
       */
      public static final int QUX_VALUE = 3;


      public final int getNumber() {
        if (this == UNRECOGNIZED) {
          throw new java.lang.IllegalArgumentException(
              "Can't get the number of an unknown enum value.");
        }
        return value;
      }

      /**
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static EnumValue valueOf(int value) {
        return forNumber(value);
      }

      public static EnumValue forNumber(int value) {
        switch (value) {
          case 0: return FOO;
          case 1: return BAR;
          case 2: return BAZ;
          case 3: return QUX;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<EnumValue>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          EnumValue> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<EnumValue>() {
              public EnumValue findValueByNumber(int number) {
                return EnumValue.forNumber(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(ordinal());
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return map_test.MapTestProto.TestMap.getDescriptor().getEnumTypes().get(0);
      }

      private static final EnumValue[] VALUES = values();

      public static EnumValue valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        if (desc.getIndex() == -1) {
          return UNRECOGNIZED;
        }
        return VALUES[desc.getIndex()];
      }

      private final int value;

      private EnumValue(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:map_test.TestMap.EnumValue)
    }

    public interface MessageValueOrBuilder extends
        // @@protoc_insertion_point(interface_extends:map_test.TestMap.MessageValue)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>int32 value = 1;</code>
       */
      int getValue();
    }
    /**
     * Protobuf type {@code map_test.TestMap.MessageValue}
     */
    public  static final class MessageValue extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:map_test.TestMap.MessageValue)
        MessageValueOrBuilder {
      // Use MessageValue.newBuilder() to construct.
      private MessageValue(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private MessageValue() {
        value_ = 0;
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
      }
      private MessageValue(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        this();
        int mutable_bitField0_ = 0;
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!input.skipField(tag)) {
                  done = true;
                }
                break;
              }
              case 8: {

                value_ = input.readInt32();
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e).setUnfinishedMessage(this);
        } finally {
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return map_test.MapTestProto.internal_static_map_test_TestMap_MessageValue_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return map_test.MapTestProto.internal_static_map_test_TestMap_MessageValue_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                map_test.MapTestProto.TestMap.MessageValue.class, map_test.MapTestProto.TestMap.MessageValue.Builder.class);
      }

      public static final int VALUE_FIELD_NUMBER = 1;
      private int value_;
      /**
       * <code>int32 value = 1;</code>
       */
      public int getValue() {
        return value_;
      }

      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (value_ != 0) {
          output.writeInt32(1, value_);
        }
      }

      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (value_ != 0) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(1, value_);
        }
        memoizedSize = size;
        return size;
      }

      private static final long serialVersionUID = 0L;
      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof map_test.MapTestProto.TestMap.MessageValue)) {
          return super.equals(obj);
        }
        map_test.MapTestProto.TestMap.MessageValue other = (map_test.MapTestProto.TestMap.MessageValue) obj;

        boolean result = true;
        result = result && (getValue()
            == other.getValue());
        return result;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        hash = (37 * hash) + VALUE_FIELD_NUMBER;
        hash = (53 * hash) + getValue();
        hash = (29 * hash) + unknownFields.hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static map_test.MapTestProto.TestMap.MessageValue parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static map_test.MapTestProto.TestMap.MessageValue parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static map_test.MapTestProto.TestMap.MessageValue parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static map_test.MapTestProto.TestMap.MessageValue parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static map_test.MapTestProto.TestMap.MessageValue parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static map_test.MapTestProto.TestMap.MessageValue parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static map_test.MapTestProto.TestMap.MessageValue parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static map_test.MapTestProto.TestMap.MessageValue parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static map_test.MapTestProto.TestMap.MessageValue parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static map_test.MapTestProto.TestMap.MessageValue parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static map_test.MapTestProto.TestMap.MessageValue parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static map_test.MapTestProto.TestMap.MessageValue parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(map_test.MapTestProto.TestMap.MessageValue prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code map_test.TestMap.MessageValue}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:map_test.TestMap.MessageValue)
          map_test.MapTestProto.TestMap.MessageValueOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return map_test.MapTestProto.internal_static_map_test_TestMap_MessageValue_descriptor;
        }

        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return map_test.MapTestProto.internal_static_map_test_TestMap_MessageValue_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  map_test.MapTestProto.TestMap.MessageValue.class, map_test.MapTestProto.TestMap.MessageValue.Builder.class);
        }

        // Construct using map_test.MapTestProto.TestMap.MessageValue.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessageV3
                  .alwaysUseFieldBuilders) {
          }
        }
        public Builder clear() {
          super.clear();
          value_ = 0;

          return this;
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return map_test.MapTestProto.internal_static_map_test_TestMap_MessageValue_descriptor;
        }

        public map_test.MapTestProto.TestMap.MessageValue getDefaultInstanceForType() {
          return map_test.MapTestProto.TestMap.MessageValue.getDefaultInstance();
        }

        public map_test.MapTestProto.TestMap.MessageValue build() {
          map_test.MapTestProto.TestMap.MessageValue result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public map_test.MapTestProto.TestMap.MessageValue buildPartial() {
          map_test.MapTestProto.TestMap.MessageValue result = new map_test.MapTestProto.TestMap.MessageValue(this);
          result.value_ = value_;
          onBuilt();
          return result;
        }

        public Builder clone() {
          return (Builder) super.clone();
        }
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            Object value) {
          return (Builder) super.setField(field, value);
        }
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return (Builder) super.clearField(field);
        }
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return (Builder) super.clearOneof(oneof);
        }
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, Object value) {
          return (Builder) super.setRepeatedField(field, index, value);
        }
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            Object value) {
          return (Builder) super.addRepeatedField(field, value);
        }
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof map_test.MapTestProto.TestMap.MessageValue) {
            return mergeFrom((map_test.MapTestProto.TestMap.MessageValue)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(map_test.MapTestProto.TestMap.MessageValue other) {
          if (other == map_test.MapTestProto.TestMap.MessageValue.getDefaultInstance()) return this;
          if (other.getValue() != 0) {
            setValue(other.getValue());
          }
          onChanged();
          return this;
        }

        public final boolean isInitialized() {
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          map_test.MapTestProto.TestMap.MessageValue parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (map_test.MapTestProto.TestMap.MessageValue) e.getUnfinishedMessage();
            throw e.unwrapIOException();
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }

        private int value_ ;
        /**
         * <code>int32 value = 1;</code>
         */
        public int getValue() {
          return value_;
        }
        /**
         * <code>int32 value = 1;</code>
         */
        public Builder setValue(int value) {
          
          value_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>int32 value = 1;</code>
         */
        public Builder clearValue() {
          
          value_ = 0;
          onChanged();
          return this;
        }
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return this;
        }

        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return this;
        }


        // @@protoc_insertion_point(builder_scope:map_test.TestMap.MessageValue)
      }

      // @@protoc_insertion_point(class_scope:map_test.TestMap.MessageValue)
      private static final map_test.MapTestProto.TestMap.MessageValue DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new map_test.MapTestProto.TestMap.MessageValue();
      }

      public static map_test.MapTestProto.TestMap.MessageValue getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<MessageValue>
          PARSER = new com.google.protobuf.AbstractParser<MessageValue>() {
        public MessageValue parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
            return new MessageValue(input, extensionRegistry);
        }
      };

      public static com.google.protobuf.Parser<MessageValue> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<MessageValue> getParserForType() {
        return PARSER;
      }

      public map_test.MapTestProto.TestMap.MessageValue getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public static final int INT32_TO_INT32_FIELD_FIELD_NUMBER = 1;
    private static final class Int32ToInt32FieldDefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          java.lang.Integer, java.lang.Integer> defaultEntry =
              com.google.protobuf.MapEntry
              .<java.lang.Integer, java.lang.Integer>newDefaultInstance(
                  map_test.MapTestProto.internal_static_map_test_TestMap_Int32ToInt32FieldEntry_descriptor, 
                  com.google.protobuf.WireFormat.FieldType.INT32,
                  0,
                  com.google.protobuf.WireFormat.FieldType.INT32,
                  0);
    }
    private com.google.protobuf.MapField<
        java.lang.Integer, java.lang.Integer> int32ToInt32Field_;
    private com.google.protobuf.MapField<java.lang.Integer, java.lang.Integer>
    internalGetInt32ToInt32Field() {
      if (int32ToInt32Field_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            Int32ToInt32FieldDefaultEntryHolder.defaultEntry);
      }
      return int32ToInt32Field_;
    }

    public int getInt32ToInt32FieldCount() {
      return internalGetInt32ToInt32Field().getMap().size();
    }
    /**
     * <code>map&lt;int32, int32&gt; int32_to_int32_field = 1;</code>
     */

    public boolean containsInt32ToInt32Field(
        int key) {
      
      return internalGetInt32ToInt32Field().getMap().containsKey(key);
    }
    /**
     * Use {@link #getInt32ToInt32FieldMap()} instead.
     */
    @java.lang.Deprecated
    public java.util.Map<java.lang.Integer, java.lang.Integer> getInt32ToInt32Field() {
      return getInt32ToInt32FieldMap();
    }
    /**
     * <code>map&lt;int32, int32&gt; int32_to_int32_field = 1;</code>
     */

    public java.util.Map<java.lang.Integer, java.lang.Integer> getInt32ToInt32FieldMap() {
      return internalGetInt32ToInt32Field().getMap();
    }
    /**
     * <code>map&lt;int32, int32&gt; int32_to_int32_field = 1;</code>
     */

    public int getInt32ToInt32FieldOrDefault(
        int key,
        int defaultValue) {
      
      java.util.Map<java.lang.Integer, java.lang.Integer> map =
          internalGetInt32ToInt32Field().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <code>map&lt;int32, int32&gt; int32_to_int32_field = 1;</code>
     */

    public int getInt32ToInt32FieldOrThrow(
        int key) {
      
      java.util.Map<java.lang.Integer, java.lang.Integer> map =
          internalGetInt32ToInt32Field().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    public static final int INT32_TO_STRING_FIELD_FIELD_NUMBER = 2;
    private static final class Int32ToStringFieldDefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          java.lang.Integer, java.lang.String> defaultEntry =
              com.google.protobuf.MapEntry
              .<java.lang.Integer, java.lang.String>newDefaultInstance(
                  map_test.MapTestProto.internal_static_map_test_TestMap_Int32ToStringFieldEntry_descriptor, 
                  com.google.protobuf.WireFormat.FieldType.INT32,
                  0,
                  com.google.protobuf.WireFormat.FieldType.STRING,
                  "");
    }
    private com.google.protobuf.MapField<
        java.lang.Integer, java.lang.String> int32ToStringField_;
    private com.google.protobuf.MapField<java.lang.Integer, java.lang.String>
    internalGetInt32ToStringField() {
      if (int32ToStringField_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            Int32ToStringFieldDefaultEntryHolder.defaultEntry);
      }
      return int32ToStringField_;
    }

    public int getInt32ToStringFieldCount() {
      return internalGetInt32ToStringField().getMap().size();
    }
    /**
     * <code>map&lt;int32, string&gt; int32_to_string_field = 2;</code>
     */

    public boolean containsInt32ToStringField(
        int key) {
      
      return internalGetInt32ToStringField().getMap().containsKey(key);
    }
    /**
     * Use {@link #getInt32ToStringFieldMap()} instead.
     */
    @java.lang.Deprecated
    public java.util.Map<java.lang.Integer, java.lang.String> getInt32ToStringField() {
      return getInt32ToStringFieldMap();
    }
    /**
     * <code>map&lt;int32, string&gt; int32_to_string_field = 2;</code>
     */

    public java.util.Map<java.lang.Integer, java.lang.String> getInt32ToStringFieldMap() {
      return internalGetInt32ToStringField().getMap();
    }
    /**
     * <code>map&lt;int32, string&gt; int32_to_string_field = 2;</code>
     */

    public java.lang.String getInt32ToStringFieldOrDefault(
        int key,
        java.lang.String defaultValue) {
      
      java.util.Map<java.lang.Integer, java.lang.String> map =
          internalGetInt32ToStringField().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <code>map&lt;int32, string&gt; int32_to_string_field = 2;</code>
     */

    public java.lang.String getInt32ToStringFieldOrThrow(
        int key) {
      
      java.util.Map<java.lang.Integer, java.lang.String> map =
          internalGetInt32ToStringField().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    public static final int INT32_TO_BYTES_FIELD_FIELD_NUMBER = 3;
    private static final class Int32ToBytesFieldDefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          java.lang.Integer, com.google.protobuf.ByteString> defaultEntry =
              com.google.protobuf.MapEntry
              .<java.lang.Integer, com.google.protobuf.ByteString>newDefaultInstance(
                  map_test.MapTestProto.internal_static_map_test_TestMap_Int32ToBytesFieldEntry_descriptor, 
                  com.google.protobuf.WireFormat.FieldType.INT32,
                  0,
                  com.google.protobuf.WireFormat.FieldType.BYTES,
                  com.google.protobuf.ByteString.EMPTY);
    }
    private com.google.protobuf.MapField<
        java.lang.Integer, com.google.protobuf.ByteString> int32ToBytesField_;
    private com.google.protobuf.MapField<java.lang.Integer, com.google.protobuf.ByteString>
    internalGetInt32ToBytesField() {
      if (int32ToBytesField_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            Int32ToBytesFieldDefaultEntryHolder.defaultEntry);
      }
      return int32ToBytesField_;
    }

    public int getInt32ToBytesFieldCount() {
      return internalGetInt32ToBytesField().getMap().size();
    }
    /**
     * <code>map&lt;int32, bytes&gt; int32_to_bytes_field = 3;</code>
     */

    public boolean containsInt32ToBytesField(
        int key) {
      
      return internalGetInt32ToBytesField().getMap().containsKey(key);
    }
    /**
     * Use {@link #getInt32ToBytesFieldMap()} instead.
     */
    @java.lang.Deprecated
    public java.util.Map<java.lang.Integer, com.google.protobuf.ByteString> getInt32ToBytesField() {
      return getInt32ToBytesFieldMap();
    }
    /**
     * <code>map&lt;int32, bytes&gt; int32_to_bytes_field = 3;</code>
     */

    public java.util.Map<java.lang.Integer, com.google.protobuf.ByteString> getInt32ToBytesFieldMap() {
      return internalGetInt32ToBytesField().getMap();
    }
    /**
     * <code>map&lt;int32, bytes&gt; int32_to_bytes_field = 3;</code>
     */

    public com.google.protobuf.ByteString getInt32ToBytesFieldOrDefault(
        int key,
        com.google.protobuf.ByteString defaultValue) {
      
      java.util.Map<java.lang.Integer, com.google.protobuf.ByteString> map =
          internalGetInt32ToBytesField().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <code>map&lt;int32, bytes&gt; int32_to_bytes_field = 3;</code>
     */

    public com.google.protobuf.ByteString getInt32ToBytesFieldOrThrow(
        int key) {
      
      java.util.Map<java.lang.Integer, com.google.protobuf.ByteString> map =
          internalGetInt32ToBytesField().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    public static final int INT32_TO_ENUM_FIELD_FIELD_NUMBER = 4;
    private static final class Int32ToEnumFieldDefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          java.lang.Integer, java.lang.Integer> defaultEntry =
              com.google.protobuf.MapEntry
              .<java.lang.Integer, java.lang.Integer>newDefaultInstance(
                  map_test.MapTestProto.internal_static_map_test_TestMap_Int32ToEnumFieldEntry_descriptor, 
                  com.google.protobuf.WireFormat.FieldType.INT32,
                  0,
                  com.google.protobuf.WireFormat.FieldType.ENUM,
                  map_test.MapTestProto.TestMap.EnumValue.FOO.getNumber());
    }
    private com.google.protobuf.MapField<
        java.lang.Integer, java.lang.Integer> int32ToEnumField_;
    private com.google.protobuf.MapField<java.lang.Integer, java.lang.Integer>
    internalGetInt32ToEnumField() {
      if (int32ToEnumField_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            Int32ToEnumFieldDefaultEntryHolder.defaultEntry);
      }
      return int32ToEnumField_;
    }
    private static final
    com.google.protobuf.Internal.MapAdapter.Converter<
        java.lang.Integer, map_test.MapTestProto.TestMap.EnumValue> int32ToEnumFieldValueConverter =
            com.google.protobuf.Internal.MapAdapter.newEnumConverter(
                map_test.MapTestProto.TestMap.EnumValue.internalGetValueMap(),
                map_test.MapTestProto.TestMap.EnumValue.UNRECOGNIZED);
    private static final java.util.Map<java.lang.Integer, map_test.MapTestProto.TestMap.EnumValue>
    internalGetAdaptedInt32ToEnumFieldMap(
        java.util.Map<java.lang.Integer, java.lang.Integer> map) {
      return new com.google.protobuf.Internal.MapAdapter<
          java.lang.Integer, map_test.MapTestProto.TestMap.EnumValue, java.lang.Integer>(
              map, int32ToEnumFieldValueConverter);
    }

    public int getInt32ToEnumFieldCount() {
      return internalGetInt32ToEnumField().getMap().size();
    }
    /**
     * <code>map&lt;int32, .map_test.TestMap.EnumValue&gt; int32_to_enum_field = 4;</code>
     */

    public boolean containsInt32ToEnumField(
        int key) {
      
      return internalGetInt32ToEnumField().getMap().containsKey(key);
    }
    /**
     * Use {@link #getInt32ToEnumFieldMap()} instead.
     */
    @java.lang.Deprecated
    public java.util.Map<java.lang.Integer, map_test.MapTestProto.TestMap.EnumValue>
    getInt32ToEnumField() {
      return getInt32ToEnumFieldMap();
    }
    /**
     * <code>map&lt;int32, .map_test.TestMap.EnumValue&gt; int32_to_enum_field = 4;</code>
     */

    public java.util.Map<java.lang.Integer, map_test.MapTestProto.TestMap.EnumValue>
    getInt32ToEnumFieldMap() {
      return internalGetAdaptedInt32ToEnumFieldMap(
          internalGetInt32ToEnumField().getMap());}
    /**
     * <code>map&lt;int32, .map_test.TestMap.EnumValue&gt; int32_to_enum_field = 4;</code>
     */

    public map_test.MapTestProto.TestMap.EnumValue getInt32ToEnumFieldOrDefault(
        int key,
        map_test.MapTestProto.TestMap.EnumValue defaultValue) {
      
      java.util.Map<java.lang.Integer, java.lang.Integer> map =
          internalGetInt32ToEnumField().getMap();
      return map.containsKey(key)
             ? int32ToEnumFieldValueConverter.doForward(map.get(key))
             : defaultValue;
    }
    /**
     * <code>map&lt;int32, .map_test.TestMap.EnumValue&gt; int32_to_enum_field = 4;</code>
     */

    public map_test.MapTestProto.TestMap.EnumValue getInt32ToEnumFieldOrThrow(
        int key) {
      
      java.util.Map<java.lang.Integer, java.lang.Integer> map =
          internalGetInt32ToEnumField().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return int32ToEnumFieldValueConverter.doForward(map.get(key));
    }
    /**
     * Use {@link #getInt32ToEnumFieldValueMap()} instead.
     */
    @java.lang.Deprecated
    public java.util.Map<java.lang.Integer, java.lang.Integer>
    getInt32ToEnumFieldValue() {
      return getInt32ToEnumFieldValueMap();
    }
    /**
     * <code>map&lt;int32, .map_test.TestMap.EnumValue&gt; int32_to_enum_field = 4;</code>
     */

    public java.util.Map<java.lang.Integer, java.lang.Integer>
    getInt32ToEnumFieldValueMap() {
      return internalGetInt32ToEnumField().getMap();
    }
    /**
     * <code>map&lt;int32, .map_test.TestMap.EnumValue&gt; int32_to_enum_field = 4;</code>
     */

    public int getInt32ToEnumFieldValueOrDefault(
        int key,
        int defaultValue) {
      
      java.util.Map<java.lang.Integer, java.lang.Integer> map =
          internalGetInt32ToEnumField().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <code>map&lt;int32, .map_test.TestMap.EnumValue&gt; int32_to_enum_field = 4;</code>
     */

    public int getInt32ToEnumFieldValueOrThrow(
        int key) {
      
      java.util.Map<java.lang.Integer, java.lang.Integer> map =
          internalGetInt32ToEnumField().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    public static final int INT32_TO_MESSAGE_FIELD_FIELD_NUMBER = 5;
    private static final class Int32ToMessageFieldDefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          java.lang.Integer, map_test.MapTestProto.TestMap.MessageValue> defaultEntry =
              com.google.protobuf.MapEntry
              .<java.lang.Integer, map_test.MapTestProto.TestMap.MessageValue>newDefaultInstance(
                  map_test.MapTestProto.internal_static_map_test_TestMap_Int32ToMessageFieldEntry_descriptor, 
                  com.google.protobuf.WireFormat.FieldType.INT32,
                  0,
                  com.google.protobuf.WireFormat.FieldType.MESSAGE,
                  map_test.MapTestProto.TestMap.MessageValue.getDefaultInstance());
    }
    private com.google.protobuf.MapField<
        java.lang.Integer, map_test.MapTestProto.TestMap.MessageValue> int32ToMessageField_;
    private com.google.protobuf.MapField<java.lang.Integer, map_test.MapTestProto.TestMap.MessageValue>
    internalGetInt32ToMessageField() {
      if (int32ToMessageField_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            Int32ToMessageFieldDefaultEntryHolder.defaultEntry);
      }
      return int32ToMessageField_;
    }

    public int getInt32ToMessageFieldCount() {
      return internalGetInt32ToMessageField().getMap().size();
    }
    /**
     * <code>map&lt;int32, .map_test.TestMap.MessageValue&gt; int32_to_message_field = 5;</code>
     */

    public boolean containsInt32ToMessageField(
        int key) {
      
      return internalGetInt32ToMessageField().getMap().containsKey(key);
    }
    /**
     * Use {@link #getInt32ToMessageFieldMap()} instead.
     */
    @java.lang.Deprecated
    public java.util.Map<java.lang.Integer, map_test.MapTestProto.TestMap.MessageValue> getInt32ToMessageField() {
      return getInt32ToMessageFieldMap();
    }
    /**
     * <code>map&lt;int32, .map_test.TestMap.MessageValue&gt; int32_to_message_field = 5;</code>
     */

    public java.util.Map<java.lang.Integer, map_test.MapTestProto.TestMap.MessageValue> getInt32ToMessageFieldMap() {
      return internalGetInt32ToMessageField().getMap();
    }
    /**
     * <code>map&lt;int32, .map_test.TestMap.MessageValue&gt; int32_to_message_field = 5;</code>
     */

    public map_test.MapTestProto.TestMap.MessageValue getInt32ToMessageFieldOrDefault(
        int key,
        map_test.MapTestProto.TestMap.MessageValue defaultValue) {
      
      java.util.Map<java.lang.Integer, map_test.MapTestProto.TestMap.MessageValue> map =
          internalGetInt32ToMessageField().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <code>map&lt;int32, .map_test.TestMap.MessageValue&gt; int32_to_message_field = 5;</code>
     */

    public map_test.MapTestProto.TestMap.MessageValue getInt32ToMessageFieldOrThrow(
        int key) {
      
      java.util.Map<java.lang.Integer, map_test.MapTestProto.TestMap.MessageValue> map =
          internalGetInt32ToMessageField().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    public static final int STRING_TO_INT32_FIELD_FIELD_NUMBER = 6;
    private static final class StringToInt32FieldDefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          java.lang.String, java.lang.Integer> defaultEntry =
              com.google.protobuf.MapEntry
              .<java.lang.String, java.lang.Integer>newDefaultInstance(
                  map_test.MapTestProto.internal_static_map_test_TestMap_StringToInt32FieldEntry_descriptor, 
                  com.google.protobuf.WireFormat.FieldType.STRING,
                  "",
                  com.google.protobuf.WireFormat.FieldType.INT32,
                  0);
    }
    private com.google.protobuf.MapField<
        java.lang.String, java.lang.Integer> stringToInt32Field_;
    private com.google.protobuf.MapField<java.lang.String, java.lang.Integer>
    internalGetStringToInt32Field() {
      if (stringToInt32Field_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            StringToInt32FieldDefaultEntryHolder.defaultEntry);
      }
      return stringToInt32Field_;
    }

    public int getStringToInt32FieldCount() {
      return internalGetStringToInt32Field().getMap().size();
    }
    /**
     * <code>map&lt;string, int32&gt; string_to_int32_field = 6;</code>
     */

    public boolean containsStringToInt32Field(
        java.lang.String key) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      return internalGetStringToInt32Field().getMap().containsKey(key);
    }
    /**
     * Use {@link #getStringToInt32FieldMap()} instead.
     */
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, java.lang.Integer> getStringToInt32Field() {
      return getStringToInt32FieldMap();
    }
    /**
     * <code>map&lt;string, int32&gt; string_to_int32_field = 6;</code>
     */

    public java.util.Map<java.lang.String, java.lang.Integer> getStringToInt32FieldMap() {
      return internalGetStringToInt32Field().getMap();
    }
    /**
     * <code>map&lt;string, int32&gt; string_to_int32_field = 6;</code>
     */

    public int getStringToInt32FieldOrDefault(
        java.lang.String key,
        int defaultValue) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      java.util.Map<java.lang.String, java.lang.Integer> map =
          internalGetStringToInt32Field().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <code>map&lt;string, int32&gt; string_to_int32_field = 6;</code>
     */

    public int getStringToInt32FieldOrThrow(
        java.lang.String key) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      java.util.Map<java.lang.String, java.lang.Integer> map =
          internalGetStringToInt32Field().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    public static final int UINT32_TO_INT32_FIELD_FIELD_NUMBER = 7;
    private static final class Uint32ToInt32FieldDefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          java.lang.Integer, java.lang.Integer> defaultEntry =
              com.google.protobuf.MapEntry
              .<java.lang.Integer, java.lang.Integer>newDefaultInstance(
                  map_test.MapTestProto.internal_static_map_test_TestMap_Uint32ToInt32FieldEntry_descriptor, 
                  com.google.protobuf.WireFormat.FieldType.UINT32,
                  0,
                  com.google.protobuf.WireFormat.FieldType.INT32,
                  0);
    }
    private com.google.protobuf.MapField<
        java.lang.Integer, java.lang.Integer> uint32ToInt32Field_;
    private com.google.protobuf.MapField<java.lang.Integer, java.lang.Integer>
    internalGetUint32ToInt32Field() {
      if (uint32ToInt32Field_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            Uint32ToInt32FieldDefaultEntryHolder.defaultEntry);
      }
      return uint32ToInt32Field_;
    }

    public int getUint32ToInt32FieldCount() {
      return internalGetUint32ToInt32Field().getMap().size();
    }
    /**
     * <code>map&lt;uint32, int32&gt; uint32_to_int32_field = 7;</code>
     */

    public boolean containsUint32ToInt32Field(
        int key) {
      
      return internalGetUint32ToInt32Field().getMap().containsKey(key);
    }
    /**
     * Use {@link #getUint32ToInt32FieldMap()} instead.
     */
    @java.lang.Deprecated
    public java.util.Map<java.lang.Integer, java.lang.Integer> getUint32ToInt32Field() {
      return getUint32ToInt32FieldMap();
    }
    /**
     * <code>map&lt;uint32, int32&gt; uint32_to_int32_field = 7;</code>
     */

    public java.util.Map<java.lang.Integer, java.lang.Integer> getUint32ToInt32FieldMap() {
      return internalGetUint32ToInt32Field().getMap();
    }
    /**
     * <code>map&lt;uint32, int32&gt; uint32_to_int32_field = 7;</code>
     */

    public int getUint32ToInt32FieldOrDefault(
        int key,
        int defaultValue) {
      
      java.util.Map<java.lang.Integer, java.lang.Integer> map =
          internalGetUint32ToInt32Field().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <code>map&lt;uint32, int32&gt; uint32_to_int32_field = 7;</code>
     */

    public int getUint32ToInt32FieldOrThrow(
        int key) {
      
      java.util.Map<java.lang.Integer, java.lang.Integer> map =
          internalGetUint32ToInt32Field().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    public static final int INT64_TO_INT32_FIELD_FIELD_NUMBER = 8;
    private static final class Int64ToInt32FieldDefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          java.lang.Long, java.lang.Integer> defaultEntry =
              com.google.protobuf.MapEntry
              .<java.lang.Long, java.lang.Integer>newDefaultInstance(
                  map_test.MapTestProto.internal_static_map_test_TestMap_Int64ToInt32FieldEntry_descriptor, 
                  com.google.protobuf.WireFormat.FieldType.INT64,
                  0L,
                  com.google.protobuf.WireFormat.FieldType.INT32,
                  0);
    }
    private com.google.protobuf.MapField<
        java.lang.Long, java.lang.Integer> int64ToInt32Field_;
    private com.google.protobuf.MapField<java.lang.Long, java.lang.Integer>
    internalGetInt64ToInt32Field() {
      if (int64ToInt32Field_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            Int64ToInt32FieldDefaultEntryHolder.defaultEntry);
      }
      return int64ToInt32Field_;
    }

    public int getInt64ToInt32FieldCount() {
      return internalGetInt64ToInt32Field().getMap().size();
    }
    /**
     * <code>map&lt;int64, int32&gt; int64_to_int32_field = 8;</code>
     */

    public boolean containsInt64ToInt32Field(
        long key) {
      
      return internalGetInt64ToInt32Field().getMap().containsKey(key);
    }
    /**
     * Use {@link #getInt64ToInt32FieldMap()} instead.
     */
    @java.lang.Deprecated
    public java.util.Map<java.lang.Long, java.lang.Integer> getInt64ToInt32Field() {
      return getInt64ToInt32FieldMap();
    }
    /**
     * <code>map&lt;int64, int32&gt; int64_to_int32_field = 8;</code>
     */

    public java.util.Map<java.lang.Long, java.lang.Integer> getInt64ToInt32FieldMap() {
      return internalGetInt64ToInt32Field().getMap();
    }
    /**
     * <code>map&lt;int64, int32&gt; int64_to_int32_field = 8;</code>
     */

    public int getInt64ToInt32FieldOrDefault(
        long key,
        int defaultValue) {
      
      java.util.Map<java.lang.Long, java.lang.Integer> map =
          internalGetInt64ToInt32Field().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <code>map&lt;int64, int32&gt; int64_to_int32_field = 8;</code>
     */

    public int getInt64ToInt32FieldOrThrow(
        long key) {
      
      java.util.Map<java.lang.Long, java.lang.Integer> map =
          internalGetInt64ToInt32Field().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      com.google.protobuf.GeneratedMessageV3
        .serializeIntegerMapTo(
          output,
          internalGetInt32ToInt32Field(),
          Int32ToInt32FieldDefaultEntryHolder.defaultEntry,
          1);
      com.google.protobuf.GeneratedMessageV3
        .serializeIntegerMapTo(
          output,
          internalGetInt32ToStringField(),
          Int32ToStringFieldDefaultEntryHolder.defaultEntry,
          2);
      com.google.protobuf.GeneratedMessageV3
        .serializeIntegerMapTo(
          output,
          internalGetInt32ToBytesField(),
          Int32ToBytesFieldDefaultEntryHolder.defaultEntry,
          3);
      com.google.protobuf.GeneratedMessageV3
        .serializeIntegerMapTo(
          output,
          internalGetInt32ToEnumField(),
          Int32ToEnumFieldDefaultEntryHolder.defaultEntry,
          4);
      com.google.protobuf.GeneratedMessageV3
        .serializeIntegerMapTo(
          output,
          internalGetInt32ToMessageField(),
          Int32ToMessageFieldDefaultEntryHolder.defaultEntry,
          5);
      com.google.protobuf.GeneratedMessageV3
        .serializeStringMapTo(
          output,
          internalGetStringToInt32Field(),
          StringToInt32FieldDefaultEntryHolder.defaultEntry,
          6);
      com.google.protobuf.GeneratedMessageV3
        .serializeIntegerMapTo(
          output,
          internalGetUint32ToInt32Field(),
          Uint32ToInt32FieldDefaultEntryHolder.defaultEntry,
          7);
      com.google.protobuf.GeneratedMessageV3
        .serializeLongMapTo(
          output,
          internalGetInt64ToInt32Field(),
          Int64ToInt32FieldDefaultEntryHolder.defaultEntry,
          8);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (java.util.Map.Entry<java.lang.Integer, java.lang.Integer> entry
           : internalGetInt32ToInt32Field().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.Integer, java.lang.Integer>
        int32ToInt32Field__ = Int32ToInt32FieldDefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(1, int32ToInt32Field__);
      }
      for (java.util.Map.Entry<java.lang.Integer, java.lang.String> entry
           : internalGetInt32ToStringField().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.Integer, java.lang.String>
        int32ToStringField__ = Int32ToStringFieldDefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(2, int32ToStringField__);
      }
      for (java.util.Map.Entry<java.lang.Integer, com.google.protobuf.ByteString> entry
           : internalGetInt32ToBytesField().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.Integer, com.google.protobuf.ByteString>
        int32ToBytesField__ = Int32ToBytesFieldDefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(3, int32ToBytesField__);
      }
      for (java.util.Map.Entry<java.lang.Integer, java.lang.Integer> entry
           : internalGetInt32ToEnumField().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.Integer, java.lang.Integer>
        int32ToEnumField__ = Int32ToEnumFieldDefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(4, int32ToEnumField__);
      }
      for (java.util.Map.Entry<java.lang.Integer, map_test.MapTestProto.TestMap.MessageValue> entry
           : internalGetInt32ToMessageField().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.Integer, map_test.MapTestProto.TestMap.MessageValue>
        int32ToMessageField__ = Int32ToMessageFieldDefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(5, int32ToMessageField__);
      }
      for (java.util.Map.Entry<java.lang.String, java.lang.Integer> entry
           : internalGetStringToInt32Field().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.String, java.lang.Integer>
        stringToInt32Field__ = StringToInt32FieldDefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(6, stringToInt32Field__);
      }
      for (java.util.Map.Entry<java.lang.Integer, java.lang.Integer> entry
           : internalGetUint32ToInt32Field().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.Integer, java.lang.Integer>
        uint32ToInt32Field__ = Uint32ToInt32FieldDefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(7, uint32ToInt32Field__);
      }
      for (java.util.Map.Entry<java.lang.Long, java.lang.Integer> entry
           : internalGetInt64ToInt32Field().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.Long, java.lang.Integer>
        int64ToInt32Field__ = Int64ToInt32FieldDefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(8, int64ToInt32Field__);
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof map_test.MapTestProto.TestMap)) {
        return super.equals(obj);
      }
      map_test.MapTestProto.TestMap other = (map_test.MapTestProto.TestMap) obj;

      boolean result = true;
      result = result && internalGetInt32ToInt32Field().equals(
          other.internalGetInt32ToInt32Field());
      result = result && internalGetInt32ToStringField().equals(
          other.internalGetInt32ToStringField());
      result = result && internalGetInt32ToBytesField().equals(
          other.internalGetInt32ToBytesField());
      result = result && internalGetInt32ToEnumField().equals(
          other.internalGetInt32ToEnumField());
      result = result && internalGetInt32ToMessageField().equals(
          other.internalGetInt32ToMessageField());
      result = result && internalGetStringToInt32Field().equals(
          other.internalGetStringToInt32Field());
      result = result && internalGetUint32ToInt32Field().equals(
          other.internalGetUint32ToInt32Field());
      result = result && internalGetInt64ToInt32Field().equals(
          other.internalGetInt64ToInt32Field());
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (!internalGetInt32ToInt32Field().getMap().isEmpty()) {
        hash = (37 * hash) + INT32_TO_INT32_FIELD_FIELD_NUMBER;
        hash = (53 * hash) + internalGetInt32ToInt32Field().hashCode();
      }
      if (!internalGetInt32ToStringField().getMap().isEmpty()) {
        hash = (37 * hash) + INT32_TO_STRING_FIELD_FIELD_NUMBER;
        hash = (53 * hash) + internalGetInt32ToStringField().hashCode();
      }
      if (!internalGetInt32ToBytesField().getMap().isEmpty()) {
        hash = (37 * hash) + INT32_TO_BYTES_FIELD_FIELD_NUMBER;
        hash = (53 * hash) + internalGetInt32ToBytesField().hashCode();
      }
      if (!internalGetInt32ToEnumField().getMap().isEmpty()) {
        hash = (37 * hash) + INT32_TO_ENUM_FIELD_FIELD_NUMBER;
        hash = (53 * hash) + internalGetInt32ToEnumField().hashCode();
      }
      if (!internalGetInt32ToMessageField().getMap().isEmpty()) {
        hash = (37 * hash) + INT32_TO_MESSAGE_FIELD_FIELD_NUMBER;
        hash = (53 * hash) + internalGetInt32ToMessageField().hashCode();
      }
      if (!internalGetStringToInt32Field().getMap().isEmpty()) {
        hash = (37 * hash) + STRING_TO_INT32_FIELD_FIELD_NUMBER;
        hash = (53 * hash) + internalGetStringToInt32Field().hashCode();
      }
      if (!internalGetUint32ToInt32Field().getMap().isEmpty()) {
        hash = (37 * hash) + UINT32_TO_INT32_FIELD_FIELD_NUMBER;
        hash = (53 * hash) + internalGetUint32ToInt32Field().hashCode();
      }
      if (!internalGetInt64ToInt32Field().getMap().isEmpty()) {
        hash = (37 * hash) + INT64_TO_INT32_FIELD_FIELD_NUMBER;
        hash = (53 * hash) + internalGetInt64ToInt32Field().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static map_test.MapTestProto.TestMap parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static map_test.MapTestProto.TestMap parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static map_test.MapTestProto.TestMap parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static map_test.MapTestProto.TestMap parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static map_test.MapTestProto.TestMap parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static map_test.MapTestProto.TestMap parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static map_test.MapTestProto.TestMap parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static map_test.MapTestProto.TestMap parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static map_test.MapTestProto.TestMap parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static map_test.MapTestProto.TestMap parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static map_test.MapTestProto.TestMap parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static map_test.MapTestProto.TestMap parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(map_test.MapTestProto.TestMap prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code map_test.TestMap}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:map_test.TestMap)
        map_test.MapTestProto.TestMapOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return map_test.MapTestProto.internal_static_map_test_TestMap_descriptor;
      }

      @SuppressWarnings({"rawtypes"})
      protected com.google.protobuf.MapField internalGetMapField(
          int number) {
        switch (number) {
          case 1:
            return internalGetInt32ToInt32Field();
          case 2:
            return internalGetInt32ToStringField();
          case 3:
            return internalGetInt32ToBytesField();
          case 4:
            return internalGetInt32ToEnumField();
          case 5:
            return internalGetInt32ToMessageField();
          case 6:
            return internalGetStringToInt32Field();
          case 7:
            return internalGetUint32ToInt32Field();
          case 8:
            return internalGetInt64ToInt32Field();
          default:
            throw new RuntimeException(
                "Invalid map field number: " + number);
        }
      }
      @SuppressWarnings({"rawtypes"})
      protected com.google.protobuf.MapField internalGetMutableMapField(
          int number) {
        switch (number) {
          case 1:
            return internalGetMutableInt32ToInt32Field();
          case 2:
            return internalGetMutableInt32ToStringField();
          case 3:
            return internalGetMutableInt32ToBytesField();
          case 4:
            return internalGetMutableInt32ToEnumField();
          case 5:
            return internalGetMutableInt32ToMessageField();
          case 6:
            return internalGetMutableStringToInt32Field();
          case 7:
            return internalGetMutableUint32ToInt32Field();
          case 8:
            return internalGetMutableInt64ToInt32Field();
          default:
            throw new RuntimeException(
                "Invalid map field number: " + number);
        }
      }
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return map_test.MapTestProto.internal_static_map_test_TestMap_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                map_test.MapTestProto.TestMap.class, map_test.MapTestProto.TestMap.Builder.class);
      }

      // Construct using map_test.MapTestProto.TestMap.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        internalGetMutableInt32ToInt32Field().clear();
        internalGetMutableInt32ToStringField().clear();
        internalGetMutableInt32ToBytesField().clear();
        internalGetMutableInt32ToEnumField().clear();
        internalGetMutableInt32ToMessageField().clear();
        internalGetMutableStringToInt32Field().clear();
        internalGetMutableUint32ToInt32Field().clear();
        internalGetMutableInt64ToInt32Field().clear();
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return map_test.MapTestProto.internal_static_map_test_TestMap_descriptor;
      }

      public map_test.MapTestProto.TestMap getDefaultInstanceForType() {
        return map_test.MapTestProto.TestMap.getDefaultInstance();
      }

      public map_test.MapTestProto.TestMap build() {
        map_test.MapTestProto.TestMap result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public map_test.MapTestProto.TestMap buildPartial() {
        map_test.MapTestProto.TestMap result = new map_test.MapTestProto.TestMap(this);
        int from_bitField0_ = bitField0_;
        result.int32ToInt32Field_ = internalGetInt32ToInt32Field();
        result.int32ToInt32Field_.makeImmutable();
        result.int32ToStringField_ = internalGetInt32ToStringField();
        result.int32ToStringField_.makeImmutable();
        result.int32ToBytesField_ = internalGetInt32ToBytesField();
        result.int32ToBytesField_.makeImmutable();
        result.int32ToEnumField_ = internalGetInt32ToEnumField();
        result.int32ToEnumField_.makeImmutable();
        result.int32ToMessageField_ = internalGetInt32ToMessageField();
        result.int32ToMessageField_.makeImmutable();
        result.stringToInt32Field_ = internalGetStringToInt32Field();
        result.stringToInt32Field_.makeImmutable();
        result.uint32ToInt32Field_ = internalGetUint32ToInt32Field();
        result.uint32ToInt32Field_.makeImmutable();
        result.int64ToInt32Field_ = internalGetInt64ToInt32Field();
        result.int64ToInt32Field_.makeImmutable();
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof map_test.MapTestProto.TestMap) {
          return mergeFrom((map_test.MapTestProto.TestMap)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(map_test.MapTestProto.TestMap other) {
        if (other == map_test.MapTestProto.TestMap.getDefaultInstance()) return this;
        internalGetMutableInt32ToInt32Field().mergeFrom(
            other.internalGetInt32ToInt32Field());
        internalGetMutableInt32ToStringField().mergeFrom(
            other.internalGetInt32ToStringField());
        internalGetMutableInt32ToBytesField().mergeFrom(
            other.internalGetInt32ToBytesField());
        internalGetMutableInt32ToEnumField().mergeFrom(
            other.internalGetInt32ToEnumField());
        internalGetMutableInt32ToMessageField().mergeFrom(
            other.internalGetInt32ToMessageField());
        internalGetMutableStringToInt32Field().mergeFrom(
            other.internalGetStringToInt32Field());
        internalGetMutableUint32ToInt32Field().mergeFrom(
            other.internalGetUint32ToInt32Field());
        internalGetMutableInt64ToInt32Field().mergeFrom(
            other.internalGetInt64ToInt32Field());
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        map_test.MapTestProto.TestMap parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (map_test.MapTestProto.TestMap) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private com.google.protobuf.MapField<
          java.lang.Integer, java.lang.Integer> int32ToInt32Field_;
      private com.google.protobuf.MapField<java.lang.Integer, java.lang.Integer>
      internalGetInt32ToInt32Field() {
        if (int32ToInt32Field_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              Int32ToInt32FieldDefaultEntryHolder.defaultEntry);
        }
        return int32ToInt32Field_;
      }
      private com.google.protobuf.MapField<java.lang.Integer, java.lang.Integer>
      internalGetMutableInt32ToInt32Field() {
        onChanged();;
        if (int32ToInt32Field_ == null) {
          int32ToInt32Field_ = com.google.protobuf.MapField.newMapField(
              Int32ToInt32FieldDefaultEntryHolder.defaultEntry);
        }
        if (!int32ToInt32Field_.isMutable()) {
          int32ToInt32Field_ = int32ToInt32Field_.copy();
        }
        return int32ToInt32Field_;
      }

      public int getInt32ToInt32FieldCount() {
        return internalGetInt32ToInt32Field().getMap().size();
      }
      /**
       * <code>map&lt;int32, int32&gt; int32_to_int32_field = 1;</code>
       */

      public boolean containsInt32ToInt32Field(
          int key) {
        
        return internalGetInt32ToInt32Field().getMap().containsKey(key);
      }
      /**
       * Use {@link #getInt32ToInt32FieldMap()} instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.Integer, java.lang.Integer> getInt32ToInt32Field() {
        return getInt32ToInt32FieldMap();
      }
      /**
       * <code>map&lt;int32, int32&gt; int32_to_int32_field = 1;</code>
       */

      public java.util.Map<java.lang.Integer, java.lang.Integer> getInt32ToInt32FieldMap() {
        return internalGetInt32ToInt32Field().getMap();
      }
      /**
       * <code>map&lt;int32, int32&gt; int32_to_int32_field = 1;</code>
       */

      public int getInt32ToInt32FieldOrDefault(
          int key,
          int defaultValue) {
        
        java.util.Map<java.lang.Integer, java.lang.Integer> map =
            internalGetInt32ToInt32Field().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <code>map&lt;int32, int32&gt; int32_to_int32_field = 1;</code>
       */

      public int getInt32ToInt32FieldOrThrow(
          int key) {
        
        java.util.Map<java.lang.Integer, java.lang.Integer> map =
            internalGetInt32ToInt32Field().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }

      public Builder clearInt32ToInt32Field() {
        internalGetMutableInt32ToInt32Field().getMutableMap()
            .clear();
        return this;
      }
      /**
       * <code>map&lt;int32, int32&gt; int32_to_int32_field = 1;</code>
       */

      public Builder removeInt32ToInt32Field(
          int key) {
        
        internalGetMutableInt32ToInt32Field().getMutableMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.Integer, java.lang.Integer>
      getMutableInt32ToInt32Field() {
        return internalGetMutableInt32ToInt32Field().getMutableMap();
      }
      /**
       * <code>map&lt;int32, int32&gt; int32_to_int32_field = 1;</code>
       */
      public Builder putInt32ToInt32Field(
          int key,
          int value) {
        
        
        internalGetMutableInt32ToInt32Field().getMutableMap()
            .put(key, value);
        return this;
      }
      /**
       * <code>map&lt;int32, int32&gt; int32_to_int32_field = 1;</code>
       */

      public Builder putAllInt32ToInt32Field(
          java.util.Map<java.lang.Integer, java.lang.Integer> values) {
        internalGetMutableInt32ToInt32Field().getMutableMap()
            .putAll(values);
        return this;
      }

      private com.google.protobuf.MapField<
          java.lang.Integer, java.lang.String> int32ToStringField_;
      private com.google.protobuf.MapField<java.lang.Integer, java.lang.String>
      internalGetInt32ToStringField() {
        if (int32ToStringField_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              Int32ToStringFieldDefaultEntryHolder.defaultEntry);
        }
        return int32ToStringField_;
      }
      private com.google.protobuf.MapField<java.lang.Integer, java.lang.String>
      internalGetMutableInt32ToStringField() {
        onChanged();;
        if (int32ToStringField_ == null) {
          int32ToStringField_ = com.google.protobuf.MapField.newMapField(
              Int32ToStringFieldDefaultEntryHolder.defaultEntry);
        }
        if (!int32ToStringField_.isMutable()) {
          int32ToStringField_ = int32ToStringField_.copy();
        }
        return int32ToStringField_;
      }

      public int getInt32ToStringFieldCount() {
        return internalGetInt32ToStringField().getMap().size();
      }
      /**
       * <code>map&lt;int32, string&gt; int32_to_string_field = 2;</code>
       */

      public boolean containsInt32ToStringField(
          int key) {
        
        return internalGetInt32ToStringField().getMap().containsKey(key);
      }
      /**
       * Use {@link #getInt32ToStringFieldMap()} instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.Integer, java.lang.String> getInt32ToStringField() {
        return getInt32ToStringFieldMap();
      }
      /**
       * <code>map&lt;int32, string&gt; int32_to_string_field = 2;</code>
       */

      public java.util.Map<java.lang.Integer, java.lang.String> getInt32ToStringFieldMap() {
        return internalGetInt32ToStringField().getMap();
      }
      /**
       * <code>map&lt;int32, string&gt; int32_to_string_field = 2;</code>
       */

      public java.lang.String getInt32ToStringFieldOrDefault(
          int key,
          java.lang.String defaultValue) {
        
        java.util.Map<java.lang.Integer, java.lang.String> map =
            internalGetInt32ToStringField().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <code>map&lt;int32, string&gt; int32_to_string_field = 2;</code>
       */

      public java.lang.String getInt32ToStringFieldOrThrow(
          int key) {
        
        java.util.Map<java.lang.Integer, java.lang.String> map =
            internalGetInt32ToStringField().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }

      public Builder clearInt32ToStringField() {
        internalGetMutableInt32ToStringField().getMutableMap()
            .clear();
        return this;
      }
      /**
       * <code>map&lt;int32, string&gt; int32_to_string_field = 2;</code>
       */

      public Builder removeInt32ToStringField(
          int key) {
        
        internalGetMutableInt32ToStringField().getMutableMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.Integer, java.lang.String>
      getMutableInt32ToStringField() {
        return internalGetMutableInt32ToStringField().getMutableMap();
      }
      /**
       * <code>map&lt;int32, string&gt; int32_to_string_field = 2;</code>
       */
      public Builder putInt32ToStringField(
          int key,
          java.lang.String value) {
        
        if (value == null) { throw new java.lang.NullPointerException(); }
        internalGetMutableInt32ToStringField().getMutableMap()
            .put(key, value);
        return this;
      }
      /**
       * <code>map&lt;int32, string&gt; int32_to_string_field = 2;</code>
       */

      public Builder putAllInt32ToStringField(
          java.util.Map<java.lang.Integer, java.lang.String> values) {
        internalGetMutableInt32ToStringField().getMutableMap()
            .putAll(values);
        return this;
      }

      private com.google.protobuf.MapField<
          java.lang.Integer, com.google.protobuf.ByteString> int32ToBytesField_;
      private com.google.protobuf.MapField<java.lang.Integer, com.google.protobuf.ByteString>
      internalGetInt32ToBytesField() {
        if (int32ToBytesField_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              Int32ToBytesFieldDefaultEntryHolder.defaultEntry);
        }
        return int32ToBytesField_;
      }
      private com.google.protobuf.MapField<java.lang.Integer, com.google.protobuf.ByteString>
      internalGetMutableInt32ToBytesField() {
        onChanged();;
        if (int32ToBytesField_ == null) {
          int32ToBytesField_ = com.google.protobuf.MapField.newMapField(
              Int32ToBytesFieldDefaultEntryHolder.defaultEntry);
        }
        if (!int32ToBytesField_.isMutable()) {
          int32ToBytesField_ = int32ToBytesField_.copy();
        }
        return int32ToBytesField_;
      }

      public int getInt32ToBytesFieldCount() {
        return internalGetInt32ToBytesField().getMap().size();
      }
      /**
       * <code>map&lt;int32, bytes&gt; int32_to_bytes_field = 3;</code>
       */

      public boolean containsInt32ToBytesField(
          int key) {
        
        return internalGetInt32ToBytesField().getMap().containsKey(key);
      }
      /**
       * Use {@link #getInt32ToBytesFieldMap()} instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.Integer, com.google.protobuf.ByteString> getInt32ToBytesField() {
        return getInt32ToBytesFieldMap();
      }
      /**
       * <code>map&lt;int32, bytes&gt; int32_to_bytes_field = 3;</code>
       */

      public java.util.Map<java.lang.Integer, com.google.protobuf.ByteString> getInt32ToBytesFieldMap() {
        return internalGetInt32ToBytesField().getMap();
      }
      /**
       * <code>map&lt;int32, bytes&gt; int32_to_bytes_field = 3;</code>
       */

      public com.google.protobuf.ByteString getInt32ToBytesFieldOrDefault(
          int key,
          com.google.protobuf.ByteString defaultValue) {
        
        java.util.Map<java.lang.Integer, com.google.protobuf.ByteString> map =
            internalGetInt32ToBytesField().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <code>map&lt;int32, bytes&gt; int32_to_bytes_field = 3;</code>
       */

      public com.google.protobuf.ByteString getInt32ToBytesFieldOrThrow(
          int key) {
        
        java.util.Map<java.lang.Integer, com.google.protobuf.ByteString> map =
            internalGetInt32ToBytesField().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }

      public Builder clearInt32ToBytesField() {
        internalGetMutableInt32ToBytesField().getMutableMap()
            .clear();
        return this;
      }
      /**
       * <code>map&lt;int32, bytes&gt; int32_to_bytes_field = 3;</code>
       */

      public Builder removeInt32ToBytesField(
          int key) {
        
        internalGetMutableInt32ToBytesField().getMutableMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.Integer, com.google.protobuf.ByteString>
      getMutableInt32ToBytesField() {
        return internalGetMutableInt32ToBytesField().getMutableMap();
      }
      /**
       * <code>map&lt;int32, bytes&gt; int32_to_bytes_field = 3;</code>
       */
      public Builder putInt32ToBytesField(
          int key,
          com.google.protobuf.ByteString value) {
        
        if (value == null) { throw new java.lang.NullPointerException(); }
        internalGetMutableInt32ToBytesField().getMutableMap()
            .put(key, value);
        return this;
      }
      /**
       * <code>map&lt;int32, bytes&gt; int32_to_bytes_field = 3;</code>
       */

      public Builder putAllInt32ToBytesField(
          java.util.Map<java.lang.Integer, com.google.protobuf.ByteString> values) {
        internalGetMutableInt32ToBytesField().getMutableMap()
            .putAll(values);
        return this;
      }

      private com.google.protobuf.MapField<
          java.lang.Integer, java.lang.Integer> int32ToEnumField_;
      private com.google.protobuf.MapField<java.lang.Integer, java.lang.Integer>
      internalGetInt32ToEnumField() {
        if (int32ToEnumField_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              Int32ToEnumFieldDefaultEntryHolder.defaultEntry);
        }
        return int32ToEnumField_;
      }
      private com.google.protobuf.MapField<java.lang.Integer, java.lang.Integer>
      internalGetMutableInt32ToEnumField() {
        onChanged();;
        if (int32ToEnumField_ == null) {
          int32ToEnumField_ = com.google.protobuf.MapField.newMapField(
              Int32ToEnumFieldDefaultEntryHolder.defaultEntry);
        }
        if (!int32ToEnumField_.isMutable()) {
          int32ToEnumField_ = int32ToEnumField_.copy();
        }
        return int32ToEnumField_;
      }

      public int getInt32ToEnumFieldCount() {
        return internalGetInt32ToEnumField().getMap().size();
      }
      /**
       * <code>map&lt;int32, .map_test.TestMap.EnumValue&gt; int32_to_enum_field = 4;</code>
       */

      public boolean containsInt32ToEnumField(
          int key) {
        
        return internalGetInt32ToEnumField().getMap().containsKey(key);
      }
      /**
       * Use {@link #getInt32ToEnumFieldMap()} instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.Integer, map_test.MapTestProto.TestMap.EnumValue>
      getInt32ToEnumField() {
        return getInt32ToEnumFieldMap();
      }
      /**
       * <code>map&lt;int32, .map_test.TestMap.EnumValue&gt; int32_to_enum_field = 4;</code>
       */

      public java.util.Map<java.lang.Integer, map_test.MapTestProto.TestMap.EnumValue>
      getInt32ToEnumFieldMap() {
        return internalGetAdaptedInt32ToEnumFieldMap(
            internalGetInt32ToEnumField().getMap());}
      /**
       * <code>map&lt;int32, .map_test.TestMap.EnumValue&gt; int32_to_enum_field = 4;</code>
       */

      public map_test.MapTestProto.TestMap.EnumValue getInt32ToEnumFieldOrDefault(
          int key,
          map_test.MapTestProto.TestMap.EnumValue defaultValue) {
        
        java.util.Map<java.lang.Integer, java.lang.Integer> map =
            internalGetInt32ToEnumField().getMap();
        return map.containsKey(key)
               ? int32ToEnumFieldValueConverter.doForward(map.get(key))
               : defaultValue;
      }
      /**
       * <code>map&lt;int32, .map_test.TestMap.EnumValue&gt; int32_to_enum_field = 4;</code>
       */

      public map_test.MapTestProto.TestMap.EnumValue getInt32ToEnumFieldOrThrow(
          int key) {
        
        java.util.Map<java.lang.Integer, java.lang.Integer> map =
            internalGetInt32ToEnumField().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return int32ToEnumFieldValueConverter.doForward(map.get(key));
      }
      /**
       * Use {@link #getInt32ToEnumFieldValueMap()} instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.Integer, java.lang.Integer>
      getInt32ToEnumFieldValue() {
        return getInt32ToEnumFieldValueMap();
      }
      /**
       * <code>map&lt;int32, .map_test.TestMap.EnumValue&gt; int32_to_enum_field = 4;</code>
       */

      public java.util.Map<java.lang.Integer, java.lang.Integer>
      getInt32ToEnumFieldValueMap() {
        return internalGetInt32ToEnumField().getMap();
      }
      /**
       * <code>map&lt;int32, .map_test.TestMap.EnumValue&gt; int32_to_enum_field = 4;</code>
       */

      public int getInt32ToEnumFieldValueOrDefault(
          int key,
          int defaultValue) {
        
        java.util.Map<java.lang.Integer, java.lang.Integer> map =
            internalGetInt32ToEnumField().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <code>map&lt;int32, .map_test.TestMap.EnumValue&gt; int32_to_enum_field = 4;</code>
       */

      public int getInt32ToEnumFieldValueOrThrow(
          int key) {
        
        java.util.Map<java.lang.Integer, java.lang.Integer> map =
            internalGetInt32ToEnumField().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }

      public Builder clearInt32ToEnumField() {
        internalGetMutableInt32ToEnumField().getMutableMap()
            .clear();
        return this;
      }
      /**
       * <code>map&lt;int32, .map_test.TestMap.EnumValue&gt; int32_to_enum_field = 4;</code>
       */

      public Builder removeInt32ToEnumField(
          int key) {
        
        internalGetMutableInt32ToEnumField().getMutableMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.Integer, map_test.MapTestProto.TestMap.EnumValue>
      getMutableInt32ToEnumField() {
        return internalGetAdaptedInt32ToEnumFieldMap(
             internalGetMutableInt32ToEnumField().getMutableMap());
      }
      /**
       * <code>map&lt;int32, .map_test.TestMap.EnumValue&gt; int32_to_enum_field = 4;</code>
       */
      public Builder putInt32ToEnumField(
          int key,
          map_test.MapTestProto.TestMap.EnumValue value) {
        
        if (value == null) { throw new java.lang.NullPointerException(); }
        internalGetMutableInt32ToEnumField().getMutableMap()
            .put(key, int32ToEnumFieldValueConverter.doBackward(value));
        return this;
      }
      /**
       * <code>map&lt;int32, .map_test.TestMap.EnumValue&gt; int32_to_enum_field = 4;</code>
       */
      public Builder putAllInt32ToEnumField(
          java.util.Map<java.lang.Integer, map_test.MapTestProto.TestMap.EnumValue> values) {
        internalGetAdaptedInt32ToEnumFieldMap(
            internalGetMutableInt32ToEnumField().getMutableMap())
                .putAll(values);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.Integer, java.lang.Integer>
      getMutableInt32ToEnumFieldValue() {
        return internalGetMutableInt32ToEnumField().getMutableMap();
      }
      /**
       * <code>map&lt;int32, .map_test.TestMap.EnumValue&gt; int32_to_enum_field = 4;</code>
       */
      public Builder putInt32ToEnumFieldValue(
          int key,
          int value) {
        
        if (map_test.MapTestProto.TestMap.EnumValue.forNumber(value) == null) {
          throw new java.lang.IllegalArgumentException();
        }
        internalGetMutableInt32ToEnumField().getMutableMap()
            .put(key, value);
        return this;
      }
      /**
       * <code>map&lt;int32, .map_test.TestMap.EnumValue&gt; int32_to_enum_field = 4;</code>
       */
      public Builder putAllInt32ToEnumFieldValue(
          java.util.Map<java.lang.Integer, java.lang.Integer> values) {
        internalGetMutableInt32ToEnumField().getMutableMap()
            .putAll(values);
        return this;
      }

      private com.google.protobuf.MapField<
          java.lang.Integer, map_test.MapTestProto.TestMap.MessageValue> int32ToMessageField_;
      private com.google.protobuf.MapField<java.lang.Integer, map_test.MapTestProto.TestMap.MessageValue>
      internalGetInt32ToMessageField() {
        if (int32ToMessageField_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              Int32ToMessageFieldDefaultEntryHolder.defaultEntry);
        }
        return int32ToMessageField_;
      }
      private com.google.protobuf.MapField<java.lang.Integer, map_test.MapTestProto.TestMap.MessageValue>
      internalGetMutableInt32ToMessageField() {
        onChanged();;
        if (int32ToMessageField_ == null) {
          int32ToMessageField_ = com.google.protobuf.MapField.newMapField(
              Int32ToMessageFieldDefaultEntryHolder.defaultEntry);
        }
        if (!int32ToMessageField_.isMutable()) {
          int32ToMessageField_ = int32ToMessageField_.copy();
        }
        return int32ToMessageField_;
      }

      public int getInt32ToMessageFieldCount() {
        return internalGetInt32ToMessageField().getMap().size();
      }
      /**
       * <code>map&lt;int32, .map_test.TestMap.MessageValue&gt; int32_to_message_field = 5;</code>
       */

      public boolean containsInt32ToMessageField(
          int key) {
        
        return internalGetInt32ToMessageField().getMap().containsKey(key);
      }
      /**
       * Use {@link #getInt32ToMessageFieldMap()} instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.Integer, map_test.MapTestProto.TestMap.MessageValue> getInt32ToMessageField() {
        return getInt32ToMessageFieldMap();
      }
      /**
       * <code>map&lt;int32, .map_test.TestMap.MessageValue&gt; int32_to_message_field = 5;</code>
       */

      public java.util.Map<java.lang.Integer, map_test.MapTestProto.TestMap.MessageValue> getInt32ToMessageFieldMap() {
        return internalGetInt32ToMessageField().getMap();
      }
      /**
       * <code>map&lt;int32, .map_test.TestMap.MessageValue&gt; int32_to_message_field = 5;</code>
       */

      public map_test.MapTestProto.TestMap.MessageValue getInt32ToMessageFieldOrDefault(
          int key,
          map_test.MapTestProto.TestMap.MessageValue defaultValue) {
        
        java.util.Map<java.lang.Integer, map_test.MapTestProto.TestMap.MessageValue> map =
            internalGetInt32ToMessageField().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <code>map&lt;int32, .map_test.TestMap.MessageValue&gt; int32_to_message_field = 5;</code>
       */

      public map_test.MapTestProto.TestMap.MessageValue getInt32ToMessageFieldOrThrow(
          int key) {
        
        java.util.Map<java.lang.Integer, map_test.MapTestProto.TestMap.MessageValue> map =
            internalGetInt32ToMessageField().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }

      public Builder clearInt32ToMessageField() {
        internalGetMutableInt32ToMessageField().getMutableMap()
            .clear();
        return this;
      }
      /**
       * <code>map&lt;int32, .map_test.TestMap.MessageValue&gt; int32_to_message_field = 5;</code>
       */

      public Builder removeInt32ToMessageField(
          int key) {
        
        internalGetMutableInt32ToMessageField().getMutableMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.Integer, map_test.MapTestProto.TestMap.MessageValue>
      getMutableInt32ToMessageField() {
        return internalGetMutableInt32ToMessageField().getMutableMap();
      }
      /**
       * <code>map&lt;int32, .map_test.TestMap.MessageValue&gt; int32_to_message_field = 5;</code>
       */
      public Builder putInt32ToMessageField(
          int key,
          map_test.MapTestProto.TestMap.MessageValue value) {
        
        if (value == null) { throw new java.lang.NullPointerException(); }
        internalGetMutableInt32ToMessageField().getMutableMap()
            .put(key, value);
        return this;
      }
      /**
       * <code>map&lt;int32, .map_test.TestMap.MessageValue&gt; int32_to_message_field = 5;</code>
       */

      public Builder putAllInt32ToMessageField(
          java.util.Map<java.lang.Integer, map_test.MapTestProto.TestMap.MessageValue> values) {
        internalGetMutableInt32ToMessageField().getMutableMap()
            .putAll(values);
        return this;
      }

      private com.google.protobuf.MapField<
          java.lang.String, java.lang.Integer> stringToInt32Field_;
      private com.google.protobuf.MapField<java.lang.String, java.lang.Integer>
      internalGetStringToInt32Field() {
        if (stringToInt32Field_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              StringToInt32FieldDefaultEntryHolder.defaultEntry);
        }
        return stringToInt32Field_;
      }
      private com.google.protobuf.MapField<java.lang.String, java.lang.Integer>
      internalGetMutableStringToInt32Field() {
        onChanged();;
        if (stringToInt32Field_ == null) {
          stringToInt32Field_ = com.google.protobuf.MapField.newMapField(
              StringToInt32FieldDefaultEntryHolder.defaultEntry);
        }
        if (!stringToInt32Field_.isMutable()) {
          stringToInt32Field_ = stringToInt32Field_.copy();
        }
        return stringToInt32Field_;
      }

      public int getStringToInt32FieldCount() {
        return internalGetStringToInt32Field().getMap().size();
      }
      /**
       * <code>map&lt;string, int32&gt; string_to_int32_field = 6;</code>
       */

      public boolean containsStringToInt32Field(
          java.lang.String key) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        return internalGetStringToInt32Field().getMap().containsKey(key);
      }
      /**
       * Use {@link #getStringToInt32FieldMap()} instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, java.lang.Integer> getStringToInt32Field() {
        return getStringToInt32FieldMap();
      }
      /**
       * <code>map&lt;string, int32&gt; string_to_int32_field = 6;</code>
       */

      public java.util.Map<java.lang.String, java.lang.Integer> getStringToInt32FieldMap() {
        return internalGetStringToInt32Field().getMap();
      }
      /**
       * <code>map&lt;string, int32&gt; string_to_int32_field = 6;</code>
       */

      public int getStringToInt32FieldOrDefault(
          java.lang.String key,
          int defaultValue) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        java.util.Map<java.lang.String, java.lang.Integer> map =
            internalGetStringToInt32Field().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <code>map&lt;string, int32&gt; string_to_int32_field = 6;</code>
       */

      public int getStringToInt32FieldOrThrow(
          java.lang.String key) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        java.util.Map<java.lang.String, java.lang.Integer> map =
            internalGetStringToInt32Field().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }

      public Builder clearStringToInt32Field() {
        internalGetMutableStringToInt32Field().getMutableMap()
            .clear();
        return this;
      }
      /**
       * <code>map&lt;string, int32&gt; string_to_int32_field = 6;</code>
       */

      public Builder removeStringToInt32Field(
          java.lang.String key) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        internalGetMutableStringToInt32Field().getMutableMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, java.lang.Integer>
      getMutableStringToInt32Field() {
        return internalGetMutableStringToInt32Field().getMutableMap();
      }
      /**
       * <code>map&lt;string, int32&gt; string_to_int32_field = 6;</code>
       */
      public Builder putStringToInt32Field(
          java.lang.String key,
          int value) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        
        internalGetMutableStringToInt32Field().getMutableMap()
            .put(key, value);
        return this;
      }
      /**
       * <code>map&lt;string, int32&gt; string_to_int32_field = 6;</code>
       */

      public Builder putAllStringToInt32Field(
          java.util.Map<java.lang.String, java.lang.Integer> values) {
        internalGetMutableStringToInt32Field().getMutableMap()
            .putAll(values);
        return this;
      }

      private com.google.protobuf.MapField<
          java.lang.Integer, java.lang.Integer> uint32ToInt32Field_;
      private com.google.protobuf.MapField<java.lang.Integer, java.lang.Integer>
      internalGetUint32ToInt32Field() {
        if (uint32ToInt32Field_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              Uint32ToInt32FieldDefaultEntryHolder.defaultEntry);
        }
        return uint32ToInt32Field_;
      }
      private com.google.protobuf.MapField<java.lang.Integer, java.lang.Integer>
      internalGetMutableUint32ToInt32Field() {
        onChanged();;
        if (uint32ToInt32Field_ == null) {
          uint32ToInt32Field_ = com.google.protobuf.MapField.newMapField(
              Uint32ToInt32FieldDefaultEntryHolder.defaultEntry);
        }
        if (!uint32ToInt32Field_.isMutable()) {
          uint32ToInt32Field_ = uint32ToInt32Field_.copy();
        }
        return uint32ToInt32Field_;
      }

      public int getUint32ToInt32FieldCount() {
        return internalGetUint32ToInt32Field().getMap().size();
      }
      /**
       * <code>map&lt;uint32, int32&gt; uint32_to_int32_field = 7;</code>
       */

      public boolean containsUint32ToInt32Field(
          int key) {
        
        return internalGetUint32ToInt32Field().getMap().containsKey(key);
      }
      /**
       * Use {@link #getUint32ToInt32FieldMap()} instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.Integer, java.lang.Integer> getUint32ToInt32Field() {
        return getUint32ToInt32FieldMap();
      }
      /**
       * <code>map&lt;uint32, int32&gt; uint32_to_int32_field = 7;</code>
       */

      public java.util.Map<java.lang.Integer, java.lang.Integer> getUint32ToInt32FieldMap() {
        return internalGetUint32ToInt32Field().getMap();
      }
      /**
       * <code>map&lt;uint32, int32&gt; uint32_to_int32_field = 7;</code>
       */

      public int getUint32ToInt32FieldOrDefault(
          int key,
          int defaultValue) {
        
        java.util.Map<java.lang.Integer, java.lang.Integer> map =
            internalGetUint32ToInt32Field().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <code>map&lt;uint32, int32&gt; uint32_to_int32_field = 7;</code>
       */

      public int getUint32ToInt32FieldOrThrow(
          int key) {
        
        java.util.Map<java.lang.Integer, java.lang.Integer> map =
            internalGetUint32ToInt32Field().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }

      public Builder clearUint32ToInt32Field() {
        internalGetMutableUint32ToInt32Field().getMutableMap()
            .clear();
        return this;
      }
      /**
       * <code>map&lt;uint32, int32&gt; uint32_to_int32_field = 7;</code>
       */

      public Builder removeUint32ToInt32Field(
          int key) {
        
        internalGetMutableUint32ToInt32Field().getMutableMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.Integer, java.lang.Integer>
      getMutableUint32ToInt32Field() {
        return internalGetMutableUint32ToInt32Field().getMutableMap();
      }
      /**
       * <code>map&lt;uint32, int32&gt; uint32_to_int32_field = 7;</code>
       */
      public Builder putUint32ToInt32Field(
          int key,
          int value) {
        
        
        internalGetMutableUint32ToInt32Field().getMutableMap()
            .put(key, value);
        return this;
      }
      /**
       * <code>map&lt;uint32, int32&gt; uint32_to_int32_field = 7;</code>
       */

      public Builder putAllUint32ToInt32Field(
          java.util.Map<java.lang.Integer, java.lang.Integer> values) {
        internalGetMutableUint32ToInt32Field().getMutableMap()
            .putAll(values);
        return this;
      }

      private com.google.protobuf.MapField<
          java.lang.Long, java.lang.Integer> int64ToInt32Field_;
      private com.google.protobuf.MapField<java.lang.Long, java.lang.Integer>
      internalGetInt64ToInt32Field() {
        if (int64ToInt32Field_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              Int64ToInt32FieldDefaultEntryHolder.defaultEntry);
        }
        return int64ToInt32Field_;
      }
      private com.google.protobuf.MapField<java.lang.Long, java.lang.Integer>
      internalGetMutableInt64ToInt32Field() {
        onChanged();;
        if (int64ToInt32Field_ == null) {
          int64ToInt32Field_ = com.google.protobuf.MapField.newMapField(
              Int64ToInt32FieldDefaultEntryHolder.defaultEntry);
        }
        if (!int64ToInt32Field_.isMutable()) {
          int64ToInt32Field_ = int64ToInt32Field_.copy();
        }
        return int64ToInt32Field_;
      }

      public int getInt64ToInt32FieldCount() {
        return internalGetInt64ToInt32Field().getMap().size();
      }
      /**
       * <code>map&lt;int64, int32&gt; int64_to_int32_field = 8;</code>
       */

      public boolean containsInt64ToInt32Field(
          long key) {
        
        return internalGetInt64ToInt32Field().getMap().containsKey(key);
      }
      /**
       * Use {@link #getInt64ToInt32FieldMap()} instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.Long, java.lang.Integer> getInt64ToInt32Field() {
        return getInt64ToInt32FieldMap();
      }
      /**
       * <code>map&lt;int64, int32&gt; int64_to_int32_field = 8;</code>
       */

      public java.util.Map<java.lang.Long, java.lang.Integer> getInt64ToInt32FieldMap() {
        return internalGetInt64ToInt32Field().getMap();
      }
      /**
       * <code>map&lt;int64, int32&gt; int64_to_int32_field = 8;</code>
       */

      public int getInt64ToInt32FieldOrDefault(
          long key,
          int defaultValue) {
        
        java.util.Map<java.lang.Long, java.lang.Integer> map =
            internalGetInt64ToInt32Field().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <code>map&lt;int64, int32&gt; int64_to_int32_field = 8;</code>
       */

      public int getInt64ToInt32FieldOrThrow(
          long key) {
        
        java.util.Map<java.lang.Long, java.lang.Integer> map =
            internalGetInt64ToInt32Field().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }

      public Builder clearInt64ToInt32Field() {
        internalGetMutableInt64ToInt32Field().getMutableMap()
            .clear();
        return this;
      }
      /**
       * <code>map&lt;int64, int32&gt; int64_to_int32_field = 8;</code>
       */

      public Builder removeInt64ToInt32Field(
          long key) {
        
        internalGetMutableInt64ToInt32Field().getMutableMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.Long, java.lang.Integer>
      getMutableInt64ToInt32Field() {
        return internalGetMutableInt64ToInt32Field().getMutableMap();
      }
      /**
       * <code>map&lt;int64, int32&gt; int64_to_int32_field = 8;</code>
       */
      public Builder putInt64ToInt32Field(
          long key,
          int value) {
        
        
        internalGetMutableInt64ToInt32Field().getMutableMap()
            .put(key, value);
        return this;
      }
      /**
       * <code>map&lt;int64, int32&gt; int64_to_int32_field = 8;</code>
       */

      public Builder putAllInt64ToInt32Field(
          java.util.Map<java.lang.Long, java.lang.Integer> values) {
        internalGetMutableInt64ToInt32Field().getMutableMap()
            .putAll(values);
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:map_test.TestMap)
    }

    // @@protoc_insertion_point(class_scope:map_test.TestMap)
    private static final map_test.MapTestProto.TestMap DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new map_test.MapTestProto.TestMap();
    }

    public static map_test.MapTestProto.TestMap getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<TestMap>
        PARSER = new com.google.protobuf.AbstractParser<TestMap>() {
      public TestMap parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new TestMap(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<TestMap> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<TestMap> getParserForType() {
      return PARSER;
    }

    public map_test.MapTestProto.TestMap getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface TestOnChangeEventPropagationOrBuilder extends
      // @@protoc_insertion_point(interface_extends:map_test.TestOnChangeEventPropagation)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>.map_test.TestMap optional_message = 1;</code>
     */
    boolean hasOptionalMessage();
    /**
     * <code>.map_test.TestMap optional_message = 1;</code>
     */
    map_test.MapTestProto.TestMap getOptionalMessage();
    /**
     * <code>.map_test.TestMap optional_message = 1;</code>
     */
    map_test.MapTestProto.TestMapOrBuilder getOptionalMessageOrBuilder();
  }
  /**
   * <pre>
   * Used to test that a nested builder containing map fields will properly
   * propagate the onChange event and mark its parent dirty when a change
   * is made to a map field.
   * </pre>
   *
   * Protobuf type {@code map_test.TestOnChangeEventPropagation}
   */
  public  static final class TestOnChangeEventPropagation extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:map_test.TestOnChangeEventPropagation)
      TestOnChangeEventPropagationOrBuilder {
    // Use TestOnChangeEventPropagation.newBuilder() to construct.
    private TestOnChangeEventPropagation(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private TestOnChangeEventPropagation() {
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private TestOnChangeEventPropagation(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              map_test.MapTestProto.TestMap.Builder subBuilder = null;
              if (optionalMessage_ != null) {
                subBuilder = optionalMessage_.toBuilder();
              }
              optionalMessage_ = input.readMessage(map_test.MapTestProto.TestMap.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(optionalMessage_);
                optionalMessage_ = subBuilder.buildPartial();
              }

              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return map_test.MapTestProto.internal_static_map_test_TestOnChangeEventPropagation_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return map_test.MapTestProto.internal_static_map_test_TestOnChangeEventPropagation_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              map_test.MapTestProto.TestOnChangeEventPropagation.class, map_test.MapTestProto.TestOnChangeEventPropagation.Builder.class);
    }

    public static final int OPTIONAL_MESSAGE_FIELD_NUMBER = 1;
    private map_test.MapTestProto.TestMap optionalMessage_;
    /**
     * <code>.map_test.TestMap optional_message = 1;</code>
     */
    public boolean hasOptionalMessage() {
      return optionalMessage_ != null;
    }
    /**
     * <code>.map_test.TestMap optional_message = 1;</code>
     */
    public map_test.MapTestProto.TestMap getOptionalMessage() {
      return optionalMessage_ == null ? map_test.MapTestProto.TestMap.getDefaultInstance() : optionalMessage_;
    }
    /**
     * <code>.map_test.TestMap optional_message = 1;</code>
     */
    public map_test.MapTestProto.TestMapOrBuilder getOptionalMessageOrBuilder() {
      return getOptionalMessage();
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (optionalMessage_ != null) {
        output.writeMessage(1, getOptionalMessage());
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (optionalMessage_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getOptionalMessage());
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof map_test.MapTestProto.TestOnChangeEventPropagation)) {
        return super.equals(obj);
      }
      map_test.MapTestProto.TestOnChangeEventPropagation other = (map_test.MapTestProto.TestOnChangeEventPropagation) obj;

      boolean result = true;
      result = result && (hasOptionalMessage() == other.hasOptionalMessage());
      if (hasOptionalMessage()) {
        result = result && getOptionalMessage()
            .equals(other.getOptionalMessage());
      }
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasOptionalMessage()) {
        hash = (37 * hash) + OPTIONAL_MESSAGE_FIELD_NUMBER;
        hash = (53 * hash) + getOptionalMessage().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static map_test.MapTestProto.TestOnChangeEventPropagation parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static map_test.MapTestProto.TestOnChangeEventPropagation parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static map_test.MapTestProto.TestOnChangeEventPropagation parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static map_test.MapTestProto.TestOnChangeEventPropagation parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static map_test.MapTestProto.TestOnChangeEventPropagation parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static map_test.MapTestProto.TestOnChangeEventPropagation parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static map_test.MapTestProto.TestOnChangeEventPropagation parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static map_test.MapTestProto.TestOnChangeEventPropagation parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static map_test.MapTestProto.TestOnChangeEventPropagation parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static map_test.MapTestProto.TestOnChangeEventPropagation parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static map_test.MapTestProto.TestOnChangeEventPropagation parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static map_test.MapTestProto.TestOnChangeEventPropagation parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(map_test.MapTestProto.TestOnChangeEventPropagation prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Used to test that a nested builder containing map fields will properly
     * propagate the onChange event and mark its parent dirty when a change
     * is made to a map field.
     * </pre>
     *
     * Protobuf type {@code map_test.TestOnChangeEventPropagation}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:map_test.TestOnChangeEventPropagation)
        map_test.MapTestProto.TestOnChangeEventPropagationOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return map_test.MapTestProto.internal_static_map_test_TestOnChangeEventPropagation_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return map_test.MapTestProto.internal_static_map_test_TestOnChangeEventPropagation_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                map_test.MapTestProto.TestOnChangeEventPropagation.class, map_test.MapTestProto.TestOnChangeEventPropagation.Builder.class);
      }

      // Construct using map_test.MapTestProto.TestOnChangeEventPropagation.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        if (optionalMessageBuilder_ == null) {
          optionalMessage_ = null;
        } else {
          optionalMessage_ = null;
          optionalMessageBuilder_ = null;
        }
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return map_test.MapTestProto.internal_static_map_test_TestOnChangeEventPropagation_descriptor;
      }

      public map_test.MapTestProto.TestOnChangeEventPropagation getDefaultInstanceForType() {
        return map_test.MapTestProto.TestOnChangeEventPropagation.getDefaultInstance();
      }

      public map_test.MapTestProto.TestOnChangeEventPropagation build() {
        map_test.MapTestProto.TestOnChangeEventPropagation result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public map_test.MapTestProto.TestOnChangeEventPropagation buildPartial() {
        map_test.MapTestProto.TestOnChangeEventPropagation result = new map_test.MapTestProto.TestOnChangeEventPropagation(this);
        if (optionalMessageBuilder_ == null) {
          result.optionalMessage_ = optionalMessage_;
        } else {
          result.optionalMessage_ = optionalMessageBuilder_.build();
        }
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof map_test.MapTestProto.TestOnChangeEventPropagation) {
          return mergeFrom((map_test.MapTestProto.TestOnChangeEventPropagation)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(map_test.MapTestProto.TestOnChangeEventPropagation other) {
        if (other == map_test.MapTestProto.TestOnChangeEventPropagation.getDefaultInstance()) return this;
        if (other.hasOptionalMessage()) {
          mergeOptionalMessage(other.getOptionalMessage());
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        map_test.MapTestProto.TestOnChangeEventPropagation parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (map_test.MapTestProto.TestOnChangeEventPropagation) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private map_test.MapTestProto.TestMap optionalMessage_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          map_test.MapTestProto.TestMap, map_test.MapTestProto.TestMap.Builder, map_test.MapTestProto.TestMapOrBuilder> optionalMessageBuilder_;
      /**
       * <code>.map_test.TestMap optional_message = 1;</code>
       */
      public boolean hasOptionalMessage() {
        return optionalMessageBuilder_ != null || optionalMessage_ != null;
      }
      /**
       * <code>.map_test.TestMap optional_message = 1;</code>
       */
      public map_test.MapTestProto.TestMap getOptionalMessage() {
        if (optionalMessageBuilder_ == null) {
          return optionalMessage_ == null ? map_test.MapTestProto.TestMap.getDefaultInstance() : optionalMessage_;
        } else {
          return optionalMessageBuilder_.getMessage();
        }
      }
      /**
       * <code>.map_test.TestMap optional_message = 1;</code>
       */
      public Builder setOptionalMessage(map_test.MapTestProto.TestMap value) {
        if (optionalMessageBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          optionalMessage_ = value;
          onChanged();
        } else {
          optionalMessageBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.map_test.TestMap optional_message = 1;</code>
       */
      public Builder setOptionalMessage(
          map_test.MapTestProto.TestMap.Builder builderForValue) {
        if (optionalMessageBuilder_ == null) {
          optionalMessage_ = builderForValue.build();
          onChanged();
        } else {
          optionalMessageBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.map_test.TestMap optional_message = 1;</code>
       */
      public Builder mergeOptionalMessage(map_test.MapTestProto.TestMap value) {
        if (optionalMessageBuilder_ == null) {
          if (optionalMessage_ != null) {
            optionalMessage_ =
              map_test.MapTestProto.TestMap.newBuilder(optionalMessage_).mergeFrom(value).buildPartial();
          } else {
            optionalMessage_ = value;
          }
          onChanged();
        } else {
          optionalMessageBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.map_test.TestMap optional_message = 1;</code>
       */
      public Builder clearOptionalMessage() {
        if (optionalMessageBuilder_ == null) {
          optionalMessage_ = null;
          onChanged();
        } else {
          optionalMessage_ = null;
          optionalMessageBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.map_test.TestMap optional_message = 1;</code>
       */
      public map_test.MapTestProto.TestMap.Builder getOptionalMessageBuilder() {
        
        onChanged();
        return getOptionalMessageFieldBuilder().getBuilder();
      }
      /**
       * <code>.map_test.TestMap optional_message = 1;</code>
       */
      public map_test.MapTestProto.TestMapOrBuilder getOptionalMessageOrBuilder() {
        if (optionalMessageBuilder_ != null) {
          return optionalMessageBuilder_.getMessageOrBuilder();
        } else {
          return optionalMessage_ == null ?
              map_test.MapTestProto.TestMap.getDefaultInstance() : optionalMessage_;
        }
      }
      /**
       * <code>.map_test.TestMap optional_message = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          map_test.MapTestProto.TestMap, map_test.MapTestProto.TestMap.Builder, map_test.MapTestProto.TestMapOrBuilder> 
          getOptionalMessageFieldBuilder() {
        if (optionalMessageBuilder_ == null) {
          optionalMessageBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              map_test.MapTestProto.TestMap, map_test.MapTestProto.TestMap.Builder, map_test.MapTestProto.TestMapOrBuilder>(
                  getOptionalMessage(),
                  getParentForChildren(),
                  isClean());
          optionalMessage_ = null;
        }
        return optionalMessageBuilder_;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:map_test.TestOnChangeEventPropagation)
    }

    // @@protoc_insertion_point(class_scope:map_test.TestOnChangeEventPropagation)
    private static final map_test.MapTestProto.TestOnChangeEventPropagation DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new map_test.MapTestProto.TestOnChangeEventPropagation();
    }

    public static map_test.MapTestProto.TestOnChangeEventPropagation getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<TestOnChangeEventPropagation>
        PARSER = new com.google.protobuf.AbstractParser<TestOnChangeEventPropagation>() {
      public TestOnChangeEventPropagation parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new TestOnChangeEventPropagation(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<TestOnChangeEventPropagation> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<TestOnChangeEventPropagation> getParserForType() {
      return PARSER;
    }

    public map_test.MapTestProto.TestOnChangeEventPropagation getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface BizarroTestMapOrBuilder extends
      // @@protoc_insertion_point(interface_extends:map_test.BizarroTestMap)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * same key type, different value
     * </pre>
     *
     * <code>map&lt;int32, bytes&gt; int32_to_int32_field = 1;</code>
     */
    int getInt32ToInt32FieldCount();
    /**
     * <pre>
     * same key type, different value
     * </pre>
     *
     * <code>map&lt;int32, bytes&gt; int32_to_int32_field = 1;</code>
     */
    boolean containsInt32ToInt32Field(
        int key);
    /**
     * Use {@link #getInt32ToInt32FieldMap()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.Integer, com.google.protobuf.ByteString>
    getInt32ToInt32Field();
    /**
     * <pre>
     * same key type, different value
     * </pre>
     *
     * <code>map&lt;int32, bytes&gt; int32_to_int32_field = 1;</code>
     */
    java.util.Map<java.lang.Integer, com.google.protobuf.ByteString>
    getInt32ToInt32FieldMap();
    /**
     * <pre>
     * same key type, different value
     * </pre>
     *
     * <code>map&lt;int32, bytes&gt; int32_to_int32_field = 1;</code>
     */

    com.google.protobuf.ByteString getInt32ToInt32FieldOrDefault(
        int key,
        com.google.protobuf.ByteString defaultValue);
    /**
     * <pre>
     * same key type, different value
     * </pre>
     *
     * <code>map&lt;int32, bytes&gt; int32_to_int32_field = 1;</code>
     */

    com.google.protobuf.ByteString getInt32ToInt32FieldOrThrow(
        int key);

    /**
     * <pre>
     * different key and value types
     * </pre>
     *
     * <code>map&lt;string, int32&gt; int32_to_string_field = 2;</code>
     */
    int getInt32ToStringFieldCount();
    /**
     * <pre>
     * different key and value types
     * </pre>
     *
     * <code>map&lt;string, int32&gt; int32_to_string_field = 2;</code>
     */
    boolean containsInt32ToStringField(
        java.lang.String key);
    /**
     * Use {@link #getInt32ToStringFieldMap()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.String, java.lang.Integer>
    getInt32ToStringField();
    /**
     * <pre>
     * different key and value types
     * </pre>
     *
     * <code>map&lt;string, int32&gt; int32_to_string_field = 2;</code>
     */
    java.util.Map<java.lang.String, java.lang.Integer>
    getInt32ToStringFieldMap();
    /**
     * <pre>
     * different key and value types
     * </pre>
     *
     * <code>map&lt;string, int32&gt; int32_to_string_field = 2;</code>
     */

    int getInt32ToStringFieldOrDefault(
        java.lang.String key,
        int defaultValue);
    /**
     * <pre>
     * different key and value types
     * </pre>
     *
     * <code>map&lt;string, int32&gt; int32_to_string_field = 2;</code>
     */

    int getInt32ToStringFieldOrThrow(
        java.lang.String key);

    /**
     * <pre>
     * different key types, same value
     * </pre>
     *
     * <code>map&lt;string, int32&gt; int32_to_bytes_field = 3;</code>
     */
    int getInt32ToBytesFieldCount();
    /**
     * <pre>
     * different key types, same value
     * </pre>
     *
     * <code>map&lt;string, int32&gt; int32_to_bytes_field = 3;</code>
     */
    boolean containsInt32ToBytesField(
        java.lang.String key);
    /**
     * Use {@link #getInt32ToBytesFieldMap()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.String, java.lang.Integer>
    getInt32ToBytesField();
    /**
     * <pre>
     * different key types, same value
     * </pre>
     *
     * <code>map&lt;string, int32&gt; int32_to_bytes_field = 3;</code>
     */
    java.util.Map<java.lang.String, java.lang.Integer>
    getInt32ToBytesFieldMap();
    /**
     * <pre>
     * different key types, same value
     * </pre>
     *
     * <code>map&lt;string, int32&gt; int32_to_bytes_field = 3;</code>
     */

    int getInt32ToBytesFieldOrDefault(
        java.lang.String key,
        int defaultValue);
    /**
     * <pre>
     * different key types, same value
     * </pre>
     *
     * <code>map&lt;string, int32&gt; int32_to_bytes_field = 3;</code>
     */

    int getInt32ToBytesFieldOrThrow(
        java.lang.String key);

    /**
     * <pre>
     * different key and value types
     * </pre>
     *
     * <code>map&lt;string, bytes&gt; int32_to_enum_field = 4;</code>
     */
    int getInt32ToEnumFieldCount();
    /**
     * <pre>
     * different key and value types
     * </pre>
     *
     * <code>map&lt;string, bytes&gt; int32_to_enum_field = 4;</code>
     */
    boolean containsInt32ToEnumField(
        java.lang.String key);
    /**
     * Use {@link #getInt32ToEnumFieldMap()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.String, com.google.protobuf.ByteString>
    getInt32ToEnumField();
    /**
     * <pre>
     * different key and value types
     * </pre>
     *
     * <code>map&lt;string, bytes&gt; int32_to_enum_field = 4;</code>
     */
    java.util.Map<java.lang.String, com.google.protobuf.ByteString>
    getInt32ToEnumFieldMap();
    /**
     * <pre>
     * different key and value types
     * </pre>
     *
     * <code>map&lt;string, bytes&gt; int32_to_enum_field = 4;</code>
     */

    com.google.protobuf.ByteString getInt32ToEnumFieldOrDefault(
        java.lang.String key,
        com.google.protobuf.ByteString defaultValue);
    /**
     * <pre>
     * different key and value types
     * </pre>
     *
     * <code>map&lt;string, bytes&gt; int32_to_enum_field = 4;</code>
     */

    com.google.protobuf.ByteString getInt32ToEnumFieldOrThrow(
        java.lang.String key);

    /**
     * <pre>
     * different key and value types
     * </pre>
     *
     * <code>map&lt;string, bytes&gt; int32_to_message_field = 5;</code>
     */
    int getInt32ToMessageFieldCount();
    /**
     * <pre>
     * different key and value types
     * </pre>
     *
     * <code>map&lt;string, bytes&gt; int32_to_message_field = 5;</code>
     */
    boolean containsInt32ToMessageField(
        java.lang.String key);
    /**
     * Use {@link #getInt32ToMessageFieldMap()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.String, com.google.protobuf.ByteString>
    getInt32ToMessageField();
    /**
     * <pre>
     * different key and value types
     * </pre>
     *
     * <code>map&lt;string, bytes&gt; int32_to_message_field = 5;</code>
     */
    java.util.Map<java.lang.String, com.google.protobuf.ByteString>
    getInt32ToMessageFieldMap();
    /**
     * <pre>
     * different key and value types
     * </pre>
     *
     * <code>map&lt;string, bytes&gt; int32_to_message_field = 5;</code>
     */

    com.google.protobuf.ByteString getInt32ToMessageFieldOrDefault(
        java.lang.String key,
        com.google.protobuf.ByteString defaultValue);
    /**
     * <pre>
     * different key and value types
     * </pre>
     *
     * <code>map&lt;string, bytes&gt; int32_to_message_field = 5;</code>
     */

    com.google.protobuf.ByteString getInt32ToMessageFieldOrThrow(
        java.lang.String key);

    /**
     * <pre>
     * same key type, different value
     * </pre>
     *
     * <code>map&lt;string, bytes&gt; string_to_int32_field = 6;</code>
     */
    int getStringToInt32FieldCount();
    /**
     * <pre>
     * same key type, different value
     * </pre>
     *
     * <code>map&lt;string, bytes&gt; string_to_int32_field = 6;</code>
     */
    boolean containsStringToInt32Field(
        java.lang.String key);
    /**
     * Use {@link #getStringToInt32FieldMap()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.String, com.google.protobuf.ByteString>
    getStringToInt32Field();
    /**
     * <pre>
     * same key type, different value
     * </pre>
     *
     * <code>map&lt;string, bytes&gt; string_to_int32_field = 6;</code>
     */
    java.util.Map<java.lang.String, com.google.protobuf.ByteString>
    getStringToInt32FieldMap();
    /**
     * <pre>
     * same key type, different value
     * </pre>
     *
     * <code>map&lt;string, bytes&gt; string_to_int32_field = 6;</code>
     */

    com.google.protobuf.ByteString getStringToInt32FieldOrDefault(
        java.lang.String key,
        com.google.protobuf.ByteString defaultValue);
    /**
     * <pre>
     * same key type, different value
     * </pre>
     *
     * <code>map&lt;string, bytes&gt; string_to_int32_field = 6;</code>
     */

    com.google.protobuf.ByteString getStringToInt32FieldOrThrow(
        java.lang.String key);
  }
  /**
   * <pre>
   * a decoy of TestMap for testing parsing errors
   * </pre>
   *
   * Protobuf type {@code map_test.BizarroTestMap}
   */
  public  static final class BizarroTestMap extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:map_test.BizarroTestMap)
      BizarroTestMapOrBuilder {
    // Use BizarroTestMap.newBuilder() to construct.
    private BizarroTestMap(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private BizarroTestMap() {
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private BizarroTestMap(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                int32ToInt32Field_ = com.google.protobuf.MapField.newMapField(
                    Int32ToInt32FieldDefaultEntryHolder.defaultEntry);
                mutable_bitField0_ |= 0x00000001;
              }
              com.google.protobuf.MapEntry<java.lang.Integer, com.google.protobuf.ByteString>
              int32ToInt32Field__ = input.readMessage(
                  Int32ToInt32FieldDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              int32ToInt32Field_.getMutableMap().put(
                  int32ToInt32Field__.getKey(), int32ToInt32Field__.getValue());
              break;
            }
            case 18: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                int32ToStringField_ = com.google.protobuf.MapField.newMapField(
                    Int32ToStringFieldDefaultEntryHolder.defaultEntry);
                mutable_bitField0_ |= 0x00000002;
              }
              com.google.protobuf.MapEntry<java.lang.String, java.lang.Integer>
              int32ToStringField__ = input.readMessage(
                  Int32ToStringFieldDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              int32ToStringField_.getMutableMap().put(
                  int32ToStringField__.getKey(), int32ToStringField__.getValue());
              break;
            }
            case 26: {
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                int32ToBytesField_ = com.google.protobuf.MapField.newMapField(
                    Int32ToBytesFieldDefaultEntryHolder.defaultEntry);
                mutable_bitField0_ |= 0x00000004;
              }
              com.google.protobuf.MapEntry<java.lang.String, java.lang.Integer>
              int32ToBytesField__ = input.readMessage(
                  Int32ToBytesFieldDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              int32ToBytesField_.getMutableMap().put(
                  int32ToBytesField__.getKey(), int32ToBytesField__.getValue());
              break;
            }
            case 34: {
              if (!((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
                int32ToEnumField_ = com.google.protobuf.MapField.newMapField(
                    Int32ToEnumFieldDefaultEntryHolder.defaultEntry);
                mutable_bitField0_ |= 0x00000008;
              }
              com.google.protobuf.MapEntry<java.lang.String, com.google.protobuf.ByteString>
              int32ToEnumField__ = input.readMessage(
                  Int32ToEnumFieldDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              int32ToEnumField_.getMutableMap().put(
                  int32ToEnumField__.getKey(), int32ToEnumField__.getValue());
              break;
            }
            case 42: {
              if (!((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
                int32ToMessageField_ = com.google.protobuf.MapField.newMapField(
                    Int32ToMessageFieldDefaultEntryHolder.defaultEntry);
                mutable_bitField0_ |= 0x00000010;
              }
              com.google.protobuf.MapEntry<java.lang.String, com.google.protobuf.ByteString>
              int32ToMessageField__ = input.readMessage(
                  Int32ToMessageFieldDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              int32ToMessageField_.getMutableMap().put(
                  int32ToMessageField__.getKey(), int32ToMessageField__.getValue());
              break;
            }
            case 50: {
              if (!((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
                stringToInt32Field_ = com.google.protobuf.MapField.newMapField(
                    StringToInt32FieldDefaultEntryHolder.defaultEntry);
                mutable_bitField0_ |= 0x00000020;
              }
              com.google.protobuf.MapEntry<java.lang.String, com.google.protobuf.ByteString>
              stringToInt32Field__ = input.readMessage(
                  StringToInt32FieldDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              stringToInt32Field_.getMutableMap().put(
                  stringToInt32Field__.getKey(), stringToInt32Field__.getValue());
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return map_test.MapTestProto.internal_static_map_test_BizarroTestMap_descriptor;
    }

    @SuppressWarnings({"rawtypes"})
    protected com.google.protobuf.MapField internalGetMapField(
        int number) {
      switch (number) {
        case 1:
          return internalGetInt32ToInt32Field();
        case 2:
          return internalGetInt32ToStringField();
        case 3:
          return internalGetInt32ToBytesField();
        case 4:
          return internalGetInt32ToEnumField();
        case 5:
          return internalGetInt32ToMessageField();
        case 6:
          return internalGetStringToInt32Field();
        default:
          throw new RuntimeException(
              "Invalid map field number: " + number);
      }
    }
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return map_test.MapTestProto.internal_static_map_test_BizarroTestMap_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              map_test.MapTestProto.BizarroTestMap.class, map_test.MapTestProto.BizarroTestMap.Builder.class);
    }

    public static final int INT32_TO_INT32_FIELD_FIELD_NUMBER = 1;
    private static final class Int32ToInt32FieldDefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          java.lang.Integer, com.google.protobuf.ByteString> defaultEntry =
              com.google.protobuf.MapEntry
              .<java.lang.Integer, com.google.protobuf.ByteString>newDefaultInstance(
                  map_test.MapTestProto.internal_static_map_test_BizarroTestMap_Int32ToInt32FieldEntry_descriptor, 
                  com.google.protobuf.WireFormat.FieldType.INT32,
                  0,
                  com.google.protobuf.WireFormat.FieldType.BYTES,
                  com.google.protobuf.ByteString.EMPTY);
    }
    private com.google.protobuf.MapField<
        java.lang.Integer, com.google.protobuf.ByteString> int32ToInt32Field_;
    private com.google.protobuf.MapField<java.lang.Integer, com.google.protobuf.ByteString>
    internalGetInt32ToInt32Field() {
      if (int32ToInt32Field_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            Int32ToInt32FieldDefaultEntryHolder.defaultEntry);
      }
      return int32ToInt32Field_;
    }

    public int getInt32ToInt32FieldCount() {
      return internalGetInt32ToInt32Field().getMap().size();
    }
    /**
     * <pre>
     * same key type, different value
     * </pre>
     *
     * <code>map&lt;int32, bytes&gt; int32_to_int32_field = 1;</code>
     */

    public boolean containsInt32ToInt32Field(
        int key) {
      
      return internalGetInt32ToInt32Field().getMap().containsKey(key);
    }
    /**
     * Use {@link #getInt32ToInt32FieldMap()} instead.
     */
    @java.lang.Deprecated
    public java.util.Map<java.lang.Integer, com.google.protobuf.ByteString> getInt32ToInt32Field() {
      return getInt32ToInt32FieldMap();
    }
    /**
     * <pre>
     * same key type, different value
     * </pre>
     *
     * <code>map&lt;int32, bytes&gt; int32_to_int32_field = 1;</code>
     */

    public java.util.Map<java.lang.Integer, com.google.protobuf.ByteString> getInt32ToInt32FieldMap() {
      return internalGetInt32ToInt32Field().getMap();
    }
    /**
     * <pre>
     * same key type, different value
     * </pre>
     *
     * <code>map&lt;int32, bytes&gt; int32_to_int32_field = 1;</code>
     */

    public com.google.protobuf.ByteString getInt32ToInt32FieldOrDefault(
        int key,
        com.google.protobuf.ByteString defaultValue) {
      
      java.util.Map<java.lang.Integer, com.google.protobuf.ByteString> map =
          internalGetInt32ToInt32Field().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <pre>
     * same key type, different value
     * </pre>
     *
     * <code>map&lt;int32, bytes&gt; int32_to_int32_field = 1;</code>
     */

    public com.google.protobuf.ByteString getInt32ToInt32FieldOrThrow(
        int key) {
      
      java.util.Map<java.lang.Integer, com.google.protobuf.ByteString> map =
          internalGetInt32ToInt32Field().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    public static final int INT32_TO_STRING_FIELD_FIELD_NUMBER = 2;
    private static final class Int32ToStringFieldDefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          java.lang.String, java.lang.Integer> defaultEntry =
              com.google.protobuf.MapEntry
              .<java.lang.String, java.lang.Integer>newDefaultInstance(
                  map_test.MapTestProto.internal_static_map_test_BizarroTestMap_Int32ToStringFieldEntry_descriptor, 
                  com.google.protobuf.WireFormat.FieldType.STRING,
                  "",
                  com.google.protobuf.WireFormat.FieldType.INT32,
                  0);
    }
    private com.google.protobuf.MapField<
        java.lang.String, java.lang.Integer> int32ToStringField_;
    private com.google.protobuf.MapField<java.lang.String, java.lang.Integer>
    internalGetInt32ToStringField() {
      if (int32ToStringField_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            Int32ToStringFieldDefaultEntryHolder.defaultEntry);
      }
      return int32ToStringField_;
    }

    public int getInt32ToStringFieldCount() {
      return internalGetInt32ToStringField().getMap().size();
    }
    /**
     * <pre>
     * different key and value types
     * </pre>
     *
     * <code>map&lt;string, int32&gt; int32_to_string_field = 2;</code>
     */

    public boolean containsInt32ToStringField(
        java.lang.String key) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      return internalGetInt32ToStringField().getMap().containsKey(key);
    }
    /**
     * Use {@link #getInt32ToStringFieldMap()} instead.
     */
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, java.lang.Integer> getInt32ToStringField() {
      return getInt32ToStringFieldMap();
    }
    /**
     * <pre>
     * different key and value types
     * </pre>
     *
     * <code>map&lt;string, int32&gt; int32_to_string_field = 2;</code>
     */

    public java.util.Map<java.lang.String, java.lang.Integer> getInt32ToStringFieldMap() {
      return internalGetInt32ToStringField().getMap();
    }
    /**
     * <pre>
     * different key and value types
     * </pre>
     *
     * <code>map&lt;string, int32&gt; int32_to_string_field = 2;</code>
     */

    public int getInt32ToStringFieldOrDefault(
        java.lang.String key,
        int defaultValue) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      java.util.Map<java.lang.String, java.lang.Integer> map =
          internalGetInt32ToStringField().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <pre>
     * different key and value types
     * </pre>
     *
     * <code>map&lt;string, int32&gt; int32_to_string_field = 2;</code>
     */

    public int getInt32ToStringFieldOrThrow(
        java.lang.String key) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      java.util.Map<java.lang.String, java.lang.Integer> map =
          internalGetInt32ToStringField().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    public static final int INT32_TO_BYTES_FIELD_FIELD_NUMBER = 3;
    private static final class Int32ToBytesFieldDefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          java.lang.String, java.lang.Integer> defaultEntry =
              com.google.protobuf.MapEntry
              .<java.lang.String, java.lang.Integer>newDefaultInstance(
                  map_test.MapTestProto.internal_static_map_test_BizarroTestMap_Int32ToBytesFieldEntry_descriptor, 
                  com.google.protobuf.WireFormat.FieldType.STRING,
                  "",
                  com.google.protobuf.WireFormat.FieldType.INT32,
                  0);
    }
    private com.google.protobuf.MapField<
        java.lang.String, java.lang.Integer> int32ToBytesField_;
    private com.google.protobuf.MapField<java.lang.String, java.lang.Integer>
    internalGetInt32ToBytesField() {
      if (int32ToBytesField_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            Int32ToBytesFieldDefaultEntryHolder.defaultEntry);
      }
      return int32ToBytesField_;
    }

    public int getInt32ToBytesFieldCount() {
      return internalGetInt32ToBytesField().getMap().size();
    }
    /**
     * <pre>
     * different key types, same value
     * </pre>
     *
     * <code>map&lt;string, int32&gt; int32_to_bytes_field = 3;</code>
     */

    public boolean containsInt32ToBytesField(
        java.lang.String key) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      return internalGetInt32ToBytesField().getMap().containsKey(key);
    }
    /**
     * Use {@link #getInt32ToBytesFieldMap()} instead.
     */
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, java.lang.Integer> getInt32ToBytesField() {
      return getInt32ToBytesFieldMap();
    }
    /**
     * <pre>
     * different key types, same value
     * </pre>
     *
     * <code>map&lt;string, int32&gt; int32_to_bytes_field = 3;</code>
     */

    public java.util.Map<java.lang.String, java.lang.Integer> getInt32ToBytesFieldMap() {
      return internalGetInt32ToBytesField().getMap();
    }
    /**
     * <pre>
     * different key types, same value
     * </pre>
     *
     * <code>map&lt;string, int32&gt; int32_to_bytes_field = 3;</code>
     */

    public int getInt32ToBytesFieldOrDefault(
        java.lang.String key,
        int defaultValue) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      java.util.Map<java.lang.String, java.lang.Integer> map =
          internalGetInt32ToBytesField().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <pre>
     * different key types, same value
     * </pre>
     *
     * <code>map&lt;string, int32&gt; int32_to_bytes_field = 3;</code>
     */

    public int getInt32ToBytesFieldOrThrow(
        java.lang.String key) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      java.util.Map<java.lang.String, java.lang.Integer> map =
          internalGetInt32ToBytesField().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    public static final int INT32_TO_ENUM_FIELD_FIELD_NUMBER = 4;
    private static final class Int32ToEnumFieldDefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          java.lang.String, com.google.protobuf.ByteString> defaultEntry =
              com.google.protobuf.MapEntry
              .<java.lang.String, com.google.protobuf.ByteString>newDefaultInstance(
                  map_test.MapTestProto.internal_static_map_test_BizarroTestMap_Int32ToEnumFieldEntry_descriptor, 
                  com.google.protobuf.WireFormat.FieldType.STRING,
                  "",
                  com.google.protobuf.WireFormat.FieldType.BYTES,
                  com.google.protobuf.ByteString.EMPTY);
    }
    private com.google.protobuf.MapField<
        java.lang.String, com.google.protobuf.ByteString> int32ToEnumField_;
    private com.google.protobuf.MapField<java.lang.String, com.google.protobuf.ByteString>
    internalGetInt32ToEnumField() {
      if (int32ToEnumField_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            Int32ToEnumFieldDefaultEntryHolder.defaultEntry);
      }
      return int32ToEnumField_;
    }

    public int getInt32ToEnumFieldCount() {
      return internalGetInt32ToEnumField().getMap().size();
    }
    /**
     * <pre>
     * different key and value types
     * </pre>
     *
     * <code>map&lt;string, bytes&gt; int32_to_enum_field = 4;</code>
     */

    public boolean containsInt32ToEnumField(
        java.lang.String key) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      return internalGetInt32ToEnumField().getMap().containsKey(key);
    }
    /**
     * Use {@link #getInt32ToEnumFieldMap()} instead.
     */
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, com.google.protobuf.ByteString> getInt32ToEnumField() {
      return getInt32ToEnumFieldMap();
    }
    /**
     * <pre>
     * different key and value types
     * </pre>
     *
     * <code>map&lt;string, bytes&gt; int32_to_enum_field = 4;</code>
     */

    public java.util.Map<java.lang.String, com.google.protobuf.ByteString> getInt32ToEnumFieldMap() {
      return internalGetInt32ToEnumField().getMap();
    }
    /**
     * <pre>
     * different key and value types
     * </pre>
     *
     * <code>map&lt;string, bytes&gt; int32_to_enum_field = 4;</code>
     */

    public com.google.protobuf.ByteString getInt32ToEnumFieldOrDefault(
        java.lang.String key,
        com.google.protobuf.ByteString defaultValue) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      java.util.Map<java.lang.String, com.google.protobuf.ByteString> map =
          internalGetInt32ToEnumField().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <pre>
     * different key and value types
     * </pre>
     *
     * <code>map&lt;string, bytes&gt; int32_to_enum_field = 4;</code>
     */

    public com.google.protobuf.ByteString getInt32ToEnumFieldOrThrow(
        java.lang.String key) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      java.util.Map<java.lang.String, com.google.protobuf.ByteString> map =
          internalGetInt32ToEnumField().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    public static final int INT32_TO_MESSAGE_FIELD_FIELD_NUMBER = 5;
    private static final class Int32ToMessageFieldDefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          java.lang.String, com.google.protobuf.ByteString> defaultEntry =
              com.google.protobuf.MapEntry
              .<java.lang.String, com.google.protobuf.ByteString>newDefaultInstance(
                  map_test.MapTestProto.internal_static_map_test_BizarroTestMap_Int32ToMessageFieldEntry_descriptor, 
                  com.google.protobuf.WireFormat.FieldType.STRING,
                  "",
                  com.google.protobuf.WireFormat.FieldType.BYTES,
                  com.google.protobuf.ByteString.EMPTY);
    }
    private com.google.protobuf.MapField<
        java.lang.String, com.google.protobuf.ByteString> int32ToMessageField_;
    private com.google.protobuf.MapField<java.lang.String, com.google.protobuf.ByteString>
    internalGetInt32ToMessageField() {
      if (int32ToMessageField_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            Int32ToMessageFieldDefaultEntryHolder.defaultEntry);
      }
      return int32ToMessageField_;
    }

    public int getInt32ToMessageFieldCount() {
      return internalGetInt32ToMessageField().getMap().size();
    }
    /**
     * <pre>
     * different key and value types
     * </pre>
     *
     * <code>map&lt;string, bytes&gt; int32_to_message_field = 5;</code>
     */

    public boolean containsInt32ToMessageField(
        java.lang.String key) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      return internalGetInt32ToMessageField().getMap().containsKey(key);
    }
    /**
     * Use {@link #getInt32ToMessageFieldMap()} instead.
     */
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, com.google.protobuf.ByteString> getInt32ToMessageField() {
      return getInt32ToMessageFieldMap();
    }
    /**
     * <pre>
     * different key and value types
     * </pre>
     *
     * <code>map&lt;string, bytes&gt; int32_to_message_field = 5;</code>
     */

    public java.util.Map<java.lang.String, com.google.protobuf.ByteString> getInt32ToMessageFieldMap() {
      return internalGetInt32ToMessageField().getMap();
    }
    /**
     * <pre>
     * different key and value types
     * </pre>
     *
     * <code>map&lt;string, bytes&gt; int32_to_message_field = 5;</code>
     */

    public com.google.protobuf.ByteString getInt32ToMessageFieldOrDefault(
        java.lang.String key,
        com.google.protobuf.ByteString defaultValue) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      java.util.Map<java.lang.String, com.google.protobuf.ByteString> map =
          internalGetInt32ToMessageField().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <pre>
     * different key and value types
     * </pre>
     *
     * <code>map&lt;string, bytes&gt; int32_to_message_field = 5;</code>
     */

    public com.google.protobuf.ByteString getInt32ToMessageFieldOrThrow(
        java.lang.String key) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      java.util.Map<java.lang.String, com.google.protobuf.ByteString> map =
          internalGetInt32ToMessageField().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    public static final int STRING_TO_INT32_FIELD_FIELD_NUMBER = 6;
    private static final class StringToInt32FieldDefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          java.lang.String, com.google.protobuf.ByteString> defaultEntry =
              com.google.protobuf.MapEntry
              .<java.lang.String, com.google.protobuf.ByteString>newDefaultInstance(
                  map_test.MapTestProto.internal_static_map_test_BizarroTestMap_StringToInt32FieldEntry_descriptor, 
                  com.google.protobuf.WireFormat.FieldType.STRING,
                  "",
                  com.google.protobuf.WireFormat.FieldType.BYTES,
                  com.google.protobuf.ByteString.EMPTY);
    }
    private com.google.protobuf.MapField<
        java.lang.String, com.google.protobuf.ByteString> stringToInt32Field_;
    private com.google.protobuf.MapField<java.lang.String, com.google.protobuf.ByteString>
    internalGetStringToInt32Field() {
      if (stringToInt32Field_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            StringToInt32FieldDefaultEntryHolder.defaultEntry);
      }
      return stringToInt32Field_;
    }

    public int getStringToInt32FieldCount() {
      return internalGetStringToInt32Field().getMap().size();
    }
    /**
     * <pre>
     * same key type, different value
     * </pre>
     *
     * <code>map&lt;string, bytes&gt; string_to_int32_field = 6;</code>
     */

    public boolean containsStringToInt32Field(
        java.lang.String key) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      return internalGetStringToInt32Field().getMap().containsKey(key);
    }
    /**
     * Use {@link #getStringToInt32FieldMap()} instead.
     */
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, com.google.protobuf.ByteString> getStringToInt32Field() {
      return getStringToInt32FieldMap();
    }
    /**
     * <pre>
     * same key type, different value
     * </pre>
     *
     * <code>map&lt;string, bytes&gt; string_to_int32_field = 6;</code>
     */

    public java.util.Map<java.lang.String, com.google.protobuf.ByteString> getStringToInt32FieldMap() {
      return internalGetStringToInt32Field().getMap();
    }
    /**
     * <pre>
     * same key type, different value
     * </pre>
     *
     * <code>map&lt;string, bytes&gt; string_to_int32_field = 6;</code>
     */

    public com.google.protobuf.ByteString getStringToInt32FieldOrDefault(
        java.lang.String key,
        com.google.protobuf.ByteString defaultValue) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      java.util.Map<java.lang.String, com.google.protobuf.ByteString> map =
          internalGetStringToInt32Field().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <pre>
     * same key type, different value
     * </pre>
     *
     * <code>map&lt;string, bytes&gt; string_to_int32_field = 6;</code>
     */

    public com.google.protobuf.ByteString getStringToInt32FieldOrThrow(
        java.lang.String key) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      java.util.Map<java.lang.String, com.google.protobuf.ByteString> map =
          internalGetStringToInt32Field().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      com.google.protobuf.GeneratedMessageV3
        .serializeIntegerMapTo(
          output,
          internalGetInt32ToInt32Field(),
          Int32ToInt32FieldDefaultEntryHolder.defaultEntry,
          1);
      com.google.protobuf.GeneratedMessageV3
        .serializeStringMapTo(
          output,
          internalGetInt32ToStringField(),
          Int32ToStringFieldDefaultEntryHolder.defaultEntry,
          2);
      com.google.protobuf.GeneratedMessageV3
        .serializeStringMapTo(
          output,
          internalGetInt32ToBytesField(),
          Int32ToBytesFieldDefaultEntryHolder.defaultEntry,
          3);
      com.google.protobuf.GeneratedMessageV3
        .serializeStringMapTo(
          output,
          internalGetInt32ToEnumField(),
          Int32ToEnumFieldDefaultEntryHolder.defaultEntry,
          4);
      com.google.protobuf.GeneratedMessageV3
        .serializeStringMapTo(
          output,
          internalGetInt32ToMessageField(),
          Int32ToMessageFieldDefaultEntryHolder.defaultEntry,
          5);
      com.google.protobuf.GeneratedMessageV3
        .serializeStringMapTo(
          output,
          internalGetStringToInt32Field(),
          StringToInt32FieldDefaultEntryHolder.defaultEntry,
          6);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (java.util.Map.Entry<java.lang.Integer, com.google.protobuf.ByteString> entry
           : internalGetInt32ToInt32Field().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.Integer, com.google.protobuf.ByteString>
        int32ToInt32Field__ = Int32ToInt32FieldDefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(1, int32ToInt32Field__);
      }
      for (java.util.Map.Entry<java.lang.String, java.lang.Integer> entry
           : internalGetInt32ToStringField().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.String, java.lang.Integer>
        int32ToStringField__ = Int32ToStringFieldDefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(2, int32ToStringField__);
      }
      for (java.util.Map.Entry<java.lang.String, java.lang.Integer> entry
           : internalGetInt32ToBytesField().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.String, java.lang.Integer>
        int32ToBytesField__ = Int32ToBytesFieldDefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(3, int32ToBytesField__);
      }
      for (java.util.Map.Entry<java.lang.String, com.google.protobuf.ByteString> entry
           : internalGetInt32ToEnumField().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.String, com.google.protobuf.ByteString>
        int32ToEnumField__ = Int32ToEnumFieldDefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(4, int32ToEnumField__);
      }
      for (java.util.Map.Entry<java.lang.String, com.google.protobuf.ByteString> entry
           : internalGetInt32ToMessageField().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.String, com.google.protobuf.ByteString>
        int32ToMessageField__ = Int32ToMessageFieldDefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(5, int32ToMessageField__);
      }
      for (java.util.Map.Entry<java.lang.String, com.google.protobuf.ByteString> entry
           : internalGetStringToInt32Field().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.String, com.google.protobuf.ByteString>
        stringToInt32Field__ = StringToInt32FieldDefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(6, stringToInt32Field__);
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof map_test.MapTestProto.BizarroTestMap)) {
        return super.equals(obj);
      }
      map_test.MapTestProto.BizarroTestMap other = (map_test.MapTestProto.BizarroTestMap) obj;

      boolean result = true;
      result = result && internalGetInt32ToInt32Field().equals(
          other.internalGetInt32ToInt32Field());
      result = result && internalGetInt32ToStringField().equals(
          other.internalGetInt32ToStringField());
      result = result && internalGetInt32ToBytesField().equals(
          other.internalGetInt32ToBytesField());
      result = result && internalGetInt32ToEnumField().equals(
          other.internalGetInt32ToEnumField());
      result = result && internalGetInt32ToMessageField().equals(
          other.internalGetInt32ToMessageField());
      result = result && internalGetStringToInt32Field().equals(
          other.internalGetStringToInt32Field());
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (!internalGetInt32ToInt32Field().getMap().isEmpty()) {
        hash = (37 * hash) + INT32_TO_INT32_FIELD_FIELD_NUMBER;
        hash = (53 * hash) + internalGetInt32ToInt32Field().hashCode();
      }
      if (!internalGetInt32ToStringField().getMap().isEmpty()) {
        hash = (37 * hash) + INT32_TO_STRING_FIELD_FIELD_NUMBER;
        hash = (53 * hash) + internalGetInt32ToStringField().hashCode();
      }
      if (!internalGetInt32ToBytesField().getMap().isEmpty()) {
        hash = (37 * hash) + INT32_TO_BYTES_FIELD_FIELD_NUMBER;
        hash = (53 * hash) + internalGetInt32ToBytesField().hashCode();
      }
      if (!internalGetInt32ToEnumField().getMap().isEmpty()) {
        hash = (37 * hash) + INT32_TO_ENUM_FIELD_FIELD_NUMBER;
        hash = (53 * hash) + internalGetInt32ToEnumField().hashCode();
      }
      if (!internalGetInt32ToMessageField().getMap().isEmpty()) {
        hash = (37 * hash) + INT32_TO_MESSAGE_FIELD_FIELD_NUMBER;
        hash = (53 * hash) + internalGetInt32ToMessageField().hashCode();
      }
      if (!internalGetStringToInt32Field().getMap().isEmpty()) {
        hash = (37 * hash) + STRING_TO_INT32_FIELD_FIELD_NUMBER;
        hash = (53 * hash) + internalGetStringToInt32Field().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static map_test.MapTestProto.BizarroTestMap parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static map_test.MapTestProto.BizarroTestMap parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static map_test.MapTestProto.BizarroTestMap parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static map_test.MapTestProto.BizarroTestMap parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static map_test.MapTestProto.BizarroTestMap parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static map_test.MapTestProto.BizarroTestMap parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static map_test.MapTestProto.BizarroTestMap parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static map_test.MapTestProto.BizarroTestMap parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static map_test.MapTestProto.BizarroTestMap parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static map_test.MapTestProto.BizarroTestMap parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static map_test.MapTestProto.BizarroTestMap parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static map_test.MapTestProto.BizarroTestMap parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(map_test.MapTestProto.BizarroTestMap prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * a decoy of TestMap for testing parsing errors
     * </pre>
     *
     * Protobuf type {@code map_test.BizarroTestMap}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:map_test.BizarroTestMap)
        map_test.MapTestProto.BizarroTestMapOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return map_test.MapTestProto.internal_static_map_test_BizarroTestMap_descriptor;
      }

      @SuppressWarnings({"rawtypes"})
      protected com.google.protobuf.MapField internalGetMapField(
          int number) {
        switch (number) {
          case 1:
            return internalGetInt32ToInt32Field();
          case 2:
            return internalGetInt32ToStringField();
          case 3:
            return internalGetInt32ToBytesField();
          case 4:
            return internalGetInt32ToEnumField();
          case 5:
            return internalGetInt32ToMessageField();
          case 6:
            return internalGetStringToInt32Field();
          default:
            throw new RuntimeException(
                "Invalid map field number: " + number);
        }
      }
      @SuppressWarnings({"rawtypes"})
      protected com.google.protobuf.MapField internalGetMutableMapField(
          int number) {
        switch (number) {
          case 1:
            return internalGetMutableInt32ToInt32Field();
          case 2:
            return internalGetMutableInt32ToStringField();
          case 3:
            return internalGetMutableInt32ToBytesField();
          case 4:
            return internalGetMutableInt32ToEnumField();
          case 5:
            return internalGetMutableInt32ToMessageField();
          case 6:
            return internalGetMutableStringToInt32Field();
          default:
            throw new RuntimeException(
                "Invalid map field number: " + number);
        }
      }
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return map_test.MapTestProto.internal_static_map_test_BizarroTestMap_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                map_test.MapTestProto.BizarroTestMap.class, map_test.MapTestProto.BizarroTestMap.Builder.class);
      }

      // Construct using map_test.MapTestProto.BizarroTestMap.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        internalGetMutableInt32ToInt32Field().clear();
        internalGetMutableInt32ToStringField().clear();
        internalGetMutableInt32ToBytesField().clear();
        internalGetMutableInt32ToEnumField().clear();
        internalGetMutableInt32ToMessageField().clear();
        internalGetMutableStringToInt32Field().clear();
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return map_test.MapTestProto.internal_static_map_test_BizarroTestMap_descriptor;
      }

      public map_test.MapTestProto.BizarroTestMap getDefaultInstanceForType() {
        return map_test.MapTestProto.BizarroTestMap.getDefaultInstance();
      }

      public map_test.MapTestProto.BizarroTestMap build() {
        map_test.MapTestProto.BizarroTestMap result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public map_test.MapTestProto.BizarroTestMap buildPartial() {
        map_test.MapTestProto.BizarroTestMap result = new map_test.MapTestProto.BizarroTestMap(this);
        int from_bitField0_ = bitField0_;
        result.int32ToInt32Field_ = internalGetInt32ToInt32Field();
        result.int32ToInt32Field_.makeImmutable();
        result.int32ToStringField_ = internalGetInt32ToStringField();
        result.int32ToStringField_.makeImmutable();
        result.int32ToBytesField_ = internalGetInt32ToBytesField();
        result.int32ToBytesField_.makeImmutable();
        result.int32ToEnumField_ = internalGetInt32ToEnumField();
        result.int32ToEnumField_.makeImmutable();
        result.int32ToMessageField_ = internalGetInt32ToMessageField();
        result.int32ToMessageField_.makeImmutable();
        result.stringToInt32Field_ = internalGetStringToInt32Field();
        result.stringToInt32Field_.makeImmutable();
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof map_test.MapTestProto.BizarroTestMap) {
          return mergeFrom((map_test.MapTestProto.BizarroTestMap)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(map_test.MapTestProto.BizarroTestMap other) {
        if (other == map_test.MapTestProto.BizarroTestMap.getDefaultInstance()) return this;
        internalGetMutableInt32ToInt32Field().mergeFrom(
            other.internalGetInt32ToInt32Field());
        internalGetMutableInt32ToStringField().mergeFrom(
            other.internalGetInt32ToStringField());
        internalGetMutableInt32ToBytesField().mergeFrom(
            other.internalGetInt32ToBytesField());
        internalGetMutableInt32ToEnumField().mergeFrom(
            other.internalGetInt32ToEnumField());
        internalGetMutableInt32ToMessageField().mergeFrom(
            other.internalGetInt32ToMessageField());
        internalGetMutableStringToInt32Field().mergeFrom(
            other.internalGetStringToInt32Field());
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        map_test.MapTestProto.BizarroTestMap parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (map_test.MapTestProto.BizarroTestMap) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private com.google.protobuf.MapField<
          java.lang.Integer, com.google.protobuf.ByteString> int32ToInt32Field_;
      private com.google.protobuf.MapField<java.lang.Integer, com.google.protobuf.ByteString>
      internalGetInt32ToInt32Field() {
        if (int32ToInt32Field_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              Int32ToInt32FieldDefaultEntryHolder.defaultEntry);
        }
        return int32ToInt32Field_;
      }
      private com.google.protobuf.MapField<java.lang.Integer, com.google.protobuf.ByteString>
      internalGetMutableInt32ToInt32Field() {
        onChanged();;
        if (int32ToInt32Field_ == null) {
          int32ToInt32Field_ = com.google.protobuf.MapField.newMapField(
              Int32ToInt32FieldDefaultEntryHolder.defaultEntry);
        }
        if (!int32ToInt32Field_.isMutable()) {
          int32ToInt32Field_ = int32ToInt32Field_.copy();
        }
        return int32ToInt32Field_;
      }

      public int getInt32ToInt32FieldCount() {
        return internalGetInt32ToInt32Field().getMap().size();
      }
      /**
       * <pre>
       * same key type, different value
       * </pre>
       *
       * <code>map&lt;int32, bytes&gt; int32_to_int32_field = 1;</code>
       */

      public boolean containsInt32ToInt32Field(
          int key) {
        
        return internalGetInt32ToInt32Field().getMap().containsKey(key);
      }
      /**
       * Use {@link #getInt32ToInt32FieldMap()} instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.Integer, com.google.protobuf.ByteString> getInt32ToInt32Field() {
        return getInt32ToInt32FieldMap();
      }
      /**
       * <pre>
       * same key type, different value
       * </pre>
       *
       * <code>map&lt;int32, bytes&gt; int32_to_int32_field = 1;</code>
       */

      public java.util.Map<java.lang.Integer, com.google.protobuf.ByteString> getInt32ToInt32FieldMap() {
        return internalGetInt32ToInt32Field().getMap();
      }
      /**
       * <pre>
       * same key type, different value
       * </pre>
       *
       * <code>map&lt;int32, bytes&gt; int32_to_int32_field = 1;</code>
       */

      public com.google.protobuf.ByteString getInt32ToInt32FieldOrDefault(
          int key,
          com.google.protobuf.ByteString defaultValue) {
        
        java.util.Map<java.lang.Integer, com.google.protobuf.ByteString> map =
            internalGetInt32ToInt32Field().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <pre>
       * same key type, different value
       * </pre>
       *
       * <code>map&lt;int32, bytes&gt; int32_to_int32_field = 1;</code>
       */

      public com.google.protobuf.ByteString getInt32ToInt32FieldOrThrow(
          int key) {
        
        java.util.Map<java.lang.Integer, com.google.protobuf.ByteString> map =
            internalGetInt32ToInt32Field().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }

      public Builder clearInt32ToInt32Field() {
        internalGetMutableInt32ToInt32Field().getMutableMap()
            .clear();
        return this;
      }
      /**
       * <pre>
       * same key type, different value
       * </pre>
       *
       * <code>map&lt;int32, bytes&gt; int32_to_int32_field = 1;</code>
       */

      public Builder removeInt32ToInt32Field(
          int key) {
        
        internalGetMutableInt32ToInt32Field().getMutableMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.Integer, com.google.protobuf.ByteString>
      getMutableInt32ToInt32Field() {
        return internalGetMutableInt32ToInt32Field().getMutableMap();
      }
      /**
       * <pre>
       * same key type, different value
       * </pre>
       *
       * <code>map&lt;int32, bytes&gt; int32_to_int32_field = 1;</code>
       */
      public Builder putInt32ToInt32Field(
          int key,
          com.google.protobuf.ByteString value) {
        
        if (value == null) { throw new java.lang.NullPointerException(); }
        internalGetMutableInt32ToInt32Field().getMutableMap()
            .put(key, value);
        return this;
      }
      /**
       * <pre>
       * same key type, different value
       * </pre>
       *
       * <code>map&lt;int32, bytes&gt; int32_to_int32_field = 1;</code>
       */

      public Builder putAllInt32ToInt32Field(
          java.util.Map<java.lang.Integer, com.google.protobuf.ByteString> values) {
        internalGetMutableInt32ToInt32Field().getMutableMap()
            .putAll(values);
        return this;
      }

      private com.google.protobuf.MapField<
          java.lang.String, java.lang.Integer> int32ToStringField_;
      private com.google.protobuf.MapField<java.lang.String, java.lang.Integer>
      internalGetInt32ToStringField() {
        if (int32ToStringField_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              Int32ToStringFieldDefaultEntryHolder.defaultEntry);
        }
        return int32ToStringField_;
      }
      private com.google.protobuf.MapField<java.lang.String, java.lang.Integer>
      internalGetMutableInt32ToStringField() {
        onChanged();;
        if (int32ToStringField_ == null) {
          int32ToStringField_ = com.google.protobuf.MapField.newMapField(
              Int32ToStringFieldDefaultEntryHolder.defaultEntry);
        }
        if (!int32ToStringField_.isMutable()) {
          int32ToStringField_ = int32ToStringField_.copy();
        }
        return int32ToStringField_;
      }

      public int getInt32ToStringFieldCount() {
        return internalGetInt32ToStringField().getMap().size();
      }
      /**
       * <pre>
       * different key and value types
       * </pre>
       *
       * <code>map&lt;string, int32&gt; int32_to_string_field = 2;</code>
       */

      public boolean containsInt32ToStringField(
          java.lang.String key) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        return internalGetInt32ToStringField().getMap().containsKey(key);
      }
      /**
       * Use {@link #getInt32ToStringFieldMap()} instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, java.lang.Integer> getInt32ToStringField() {
        return getInt32ToStringFieldMap();
      }
      /**
       * <pre>
       * different key and value types
       * </pre>
       *
       * <code>map&lt;string, int32&gt; int32_to_string_field = 2;</code>
       */

      public java.util.Map<java.lang.String, java.lang.Integer> getInt32ToStringFieldMap() {
        return internalGetInt32ToStringField().getMap();
      }
      /**
       * <pre>
       * different key and value types
       * </pre>
       *
       * <code>map&lt;string, int32&gt; int32_to_string_field = 2;</code>
       */

      public int getInt32ToStringFieldOrDefault(
          java.lang.String key,
          int defaultValue) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        java.util.Map<java.lang.String, java.lang.Integer> map =
            internalGetInt32ToStringField().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <pre>
       * different key and value types
       * </pre>
       *
       * <code>map&lt;string, int32&gt; int32_to_string_field = 2;</code>
       */

      public int getInt32ToStringFieldOrThrow(
          java.lang.String key) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        java.util.Map<java.lang.String, java.lang.Integer> map =
            internalGetInt32ToStringField().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }

      public Builder clearInt32ToStringField() {
        internalGetMutableInt32ToStringField().getMutableMap()
            .clear();
        return this;
      }
      /**
       * <pre>
       * different key and value types
       * </pre>
       *
       * <code>map&lt;string, int32&gt; int32_to_string_field = 2;</code>
       */

      public Builder removeInt32ToStringField(
          java.lang.String key) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        internalGetMutableInt32ToStringField().getMutableMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, java.lang.Integer>
      getMutableInt32ToStringField() {
        return internalGetMutableInt32ToStringField().getMutableMap();
      }
      /**
       * <pre>
       * different key and value types
       * </pre>
       *
       * <code>map&lt;string, int32&gt; int32_to_string_field = 2;</code>
       */
      public Builder putInt32ToStringField(
          java.lang.String key,
          int value) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        
        internalGetMutableInt32ToStringField().getMutableMap()
            .put(key, value);
        return this;
      }
      /**
       * <pre>
       * different key and value types
       * </pre>
       *
       * <code>map&lt;string, int32&gt; int32_to_string_field = 2;</code>
       */

      public Builder putAllInt32ToStringField(
          java.util.Map<java.lang.String, java.lang.Integer> values) {
        internalGetMutableInt32ToStringField().getMutableMap()
            .putAll(values);
        return this;
      }

      private com.google.protobuf.MapField<
          java.lang.String, java.lang.Integer> int32ToBytesField_;
      private com.google.protobuf.MapField<java.lang.String, java.lang.Integer>
      internalGetInt32ToBytesField() {
        if (int32ToBytesField_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              Int32ToBytesFieldDefaultEntryHolder.defaultEntry);
        }
        return int32ToBytesField_;
      }
      private com.google.protobuf.MapField<java.lang.String, java.lang.Integer>
      internalGetMutableInt32ToBytesField() {
        onChanged();;
        if (int32ToBytesField_ == null) {
          int32ToBytesField_ = com.google.protobuf.MapField.newMapField(
              Int32ToBytesFieldDefaultEntryHolder.defaultEntry);
        }
        if (!int32ToBytesField_.isMutable()) {
          int32ToBytesField_ = int32ToBytesField_.copy();
        }
        return int32ToBytesField_;
      }

      public int getInt32ToBytesFieldCount() {
        return internalGetInt32ToBytesField().getMap().size();
      }
      /**
       * <pre>
       * different key types, same value
       * </pre>
       *
       * <code>map&lt;string, int32&gt; int32_to_bytes_field = 3;</code>
       */

      public boolean containsInt32ToBytesField(
          java.lang.String key) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        return internalGetInt32ToBytesField().getMap().containsKey(key);
      }
      /**
       * Use {@link #getInt32ToBytesFieldMap()} instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, java.lang.Integer> getInt32ToBytesField() {
        return getInt32ToBytesFieldMap();
      }
      /**
       * <pre>
       * different key types, same value
       * </pre>
       *
       * <code>map&lt;string, int32&gt; int32_to_bytes_field = 3;</code>
       */

      public java.util.Map<java.lang.String, java.lang.Integer> getInt32ToBytesFieldMap() {
        return internalGetInt32ToBytesField().getMap();
      }
      /**
       * <pre>
       * different key types, same value
       * </pre>
       *
       * <code>map&lt;string, int32&gt; int32_to_bytes_field = 3;</code>
       */

      public int getInt32ToBytesFieldOrDefault(
          java.lang.String key,
          int defaultValue) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        java.util.Map<java.lang.String, java.lang.Integer> map =
            internalGetInt32ToBytesField().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <pre>
       * different key types, same value
       * </pre>
       *
       * <code>map&lt;string, int32&gt; int32_to_bytes_field = 3;</code>
       */

      public int getInt32ToBytesFieldOrThrow(
          java.lang.String key) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        java.util.Map<java.lang.String, java.lang.Integer> map =
            internalGetInt32ToBytesField().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }

      public Builder clearInt32ToBytesField() {
        internalGetMutableInt32ToBytesField().getMutableMap()
            .clear();
        return this;
      }
      /**
       * <pre>
       * different key types, same value
       * </pre>
       *
       * <code>map&lt;string, int32&gt; int32_to_bytes_field = 3;</code>
       */

      public Builder removeInt32ToBytesField(
          java.lang.String key) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        internalGetMutableInt32ToBytesField().getMutableMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, java.lang.Integer>
      getMutableInt32ToBytesField() {
        return internalGetMutableInt32ToBytesField().getMutableMap();
      }
      /**
       * <pre>
       * different key types, same value
       * </pre>
       *
       * <code>map&lt;string, int32&gt; int32_to_bytes_field = 3;</code>
       */
      public Builder putInt32ToBytesField(
          java.lang.String key,
          int value) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        
        internalGetMutableInt32ToBytesField().getMutableMap()
            .put(key, value);
        return this;
      }
      /**
       * <pre>
       * different key types, same value
       * </pre>
       *
       * <code>map&lt;string, int32&gt; int32_to_bytes_field = 3;</code>
       */

      public Builder putAllInt32ToBytesField(
          java.util.Map<java.lang.String, java.lang.Integer> values) {
        internalGetMutableInt32ToBytesField().getMutableMap()
            .putAll(values);
        return this;
      }

      private com.google.protobuf.MapField<
          java.lang.String, com.google.protobuf.ByteString> int32ToEnumField_;
      private com.google.protobuf.MapField<java.lang.String, com.google.protobuf.ByteString>
      internalGetInt32ToEnumField() {
        if (int32ToEnumField_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              Int32ToEnumFieldDefaultEntryHolder.defaultEntry);
        }
        return int32ToEnumField_;
      }
      private com.google.protobuf.MapField<java.lang.String, com.google.protobuf.ByteString>
      internalGetMutableInt32ToEnumField() {
        onChanged();;
        if (int32ToEnumField_ == null) {
          int32ToEnumField_ = com.google.protobuf.MapField.newMapField(
              Int32ToEnumFieldDefaultEntryHolder.defaultEntry);
        }
        if (!int32ToEnumField_.isMutable()) {
          int32ToEnumField_ = int32ToEnumField_.copy();
        }
        return int32ToEnumField_;
      }

      public int getInt32ToEnumFieldCount() {
        return internalGetInt32ToEnumField().getMap().size();
      }
      /**
       * <pre>
       * different key and value types
       * </pre>
       *
       * <code>map&lt;string, bytes&gt; int32_to_enum_field = 4;</code>
       */

      public boolean containsInt32ToEnumField(
          java.lang.String key) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        return internalGetInt32ToEnumField().getMap().containsKey(key);
      }
      /**
       * Use {@link #getInt32ToEnumFieldMap()} instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, com.google.protobuf.ByteString> getInt32ToEnumField() {
        return getInt32ToEnumFieldMap();
      }
      /**
       * <pre>
       * different key and value types
       * </pre>
       *
       * <code>map&lt;string, bytes&gt; int32_to_enum_field = 4;</code>
       */

      public java.util.Map<java.lang.String, com.google.protobuf.ByteString> getInt32ToEnumFieldMap() {
        return internalGetInt32ToEnumField().getMap();
      }
      /**
       * <pre>
       * different key and value types
       * </pre>
       *
       * <code>map&lt;string, bytes&gt; int32_to_enum_field = 4;</code>
       */

      public com.google.protobuf.ByteString getInt32ToEnumFieldOrDefault(
          java.lang.String key,
          com.google.protobuf.ByteString defaultValue) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        java.util.Map<java.lang.String, com.google.protobuf.ByteString> map =
            internalGetInt32ToEnumField().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <pre>
       * different key and value types
       * </pre>
       *
       * <code>map&lt;string, bytes&gt; int32_to_enum_field = 4;</code>
       */

      public com.google.protobuf.ByteString getInt32ToEnumFieldOrThrow(
          java.lang.String key) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        java.util.Map<java.lang.String, com.google.protobuf.ByteString> map =
            internalGetInt32ToEnumField().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }

      public Builder clearInt32ToEnumField() {
        internalGetMutableInt32ToEnumField().getMutableMap()
            .clear();
        return this;
      }
      /**
       * <pre>
       * different key and value types
       * </pre>
       *
       * <code>map&lt;string, bytes&gt; int32_to_enum_field = 4;</code>
       */

      public Builder removeInt32ToEnumField(
          java.lang.String key) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        internalGetMutableInt32ToEnumField().getMutableMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, com.google.protobuf.ByteString>
      getMutableInt32ToEnumField() {
        return internalGetMutableInt32ToEnumField().getMutableMap();
      }
      /**
       * <pre>
       * different key and value types
       * </pre>
       *
       * <code>map&lt;string, bytes&gt; int32_to_enum_field = 4;</code>
       */
      public Builder putInt32ToEnumField(
          java.lang.String key,
          com.google.protobuf.ByteString value) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        if (value == null) { throw new java.lang.NullPointerException(); }
        internalGetMutableInt32ToEnumField().getMutableMap()
            .put(key, value);
        return this;
      }
      /**
       * <pre>
       * different key and value types
       * </pre>
       *
       * <code>map&lt;string, bytes&gt; int32_to_enum_field = 4;</code>
       */

      public Builder putAllInt32ToEnumField(
          java.util.Map<java.lang.String, com.google.protobuf.ByteString> values) {
        internalGetMutableInt32ToEnumField().getMutableMap()
            .putAll(values);
        return this;
      }

      private com.google.protobuf.MapField<
          java.lang.String, com.google.protobuf.ByteString> int32ToMessageField_;
      private com.google.protobuf.MapField<java.lang.String, com.google.protobuf.ByteString>
      internalGetInt32ToMessageField() {
        if (int32ToMessageField_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              Int32ToMessageFieldDefaultEntryHolder.defaultEntry);
        }
        return int32ToMessageField_;
      }
      private com.google.protobuf.MapField<java.lang.String, com.google.protobuf.ByteString>
      internalGetMutableInt32ToMessageField() {
        onChanged();;
        if (int32ToMessageField_ == null) {
          int32ToMessageField_ = com.google.protobuf.MapField.newMapField(
              Int32ToMessageFieldDefaultEntryHolder.defaultEntry);
        }
        if (!int32ToMessageField_.isMutable()) {
          int32ToMessageField_ = int32ToMessageField_.copy();
        }
        return int32ToMessageField_;
      }

      public int getInt32ToMessageFieldCount() {
        return internalGetInt32ToMessageField().getMap().size();
      }
      /**
       * <pre>
       * different key and value types
       * </pre>
       *
       * <code>map&lt;string, bytes&gt; int32_to_message_field = 5;</code>
       */

      public boolean containsInt32ToMessageField(
          java.lang.String key) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        return internalGetInt32ToMessageField().getMap().containsKey(key);
      }
      /**
       * Use {@link #getInt32ToMessageFieldMap()} instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, com.google.protobuf.ByteString> getInt32ToMessageField() {
        return getInt32ToMessageFieldMap();
      }
      /**
       * <pre>
       * different key and value types
       * </pre>
       *
       * <code>map&lt;string, bytes&gt; int32_to_message_field = 5;</code>
       */

      public java.util.Map<java.lang.String, com.google.protobuf.ByteString> getInt32ToMessageFieldMap() {
        return internalGetInt32ToMessageField().getMap();
      }
      /**
       * <pre>
       * different key and value types
       * </pre>
       *
       * <code>map&lt;string, bytes&gt; int32_to_message_field = 5;</code>
       */

      public com.google.protobuf.ByteString getInt32ToMessageFieldOrDefault(
          java.lang.String key,
          com.google.protobuf.ByteString defaultValue) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        java.util.Map<java.lang.String, com.google.protobuf.ByteString> map =
            internalGetInt32ToMessageField().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <pre>
       * different key and value types
       * </pre>
       *
       * <code>map&lt;string, bytes&gt; int32_to_message_field = 5;</code>
       */

      public com.google.protobuf.ByteString getInt32ToMessageFieldOrThrow(
          java.lang.String key) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        java.util.Map<java.lang.String, com.google.protobuf.ByteString> map =
            internalGetInt32ToMessageField().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }

      public Builder clearInt32ToMessageField() {
        internalGetMutableInt32ToMessageField().getMutableMap()
            .clear();
        return this;
      }
      /**
       * <pre>
       * different key and value types
       * </pre>
       *
       * <code>map&lt;string, bytes&gt; int32_to_message_field = 5;</code>
       */

      public Builder removeInt32ToMessageField(
          java.lang.String key) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        internalGetMutableInt32ToMessageField().getMutableMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, com.google.protobuf.ByteString>
      getMutableInt32ToMessageField() {
        return internalGetMutableInt32ToMessageField().getMutableMap();
      }
      /**
       * <pre>
       * different key and value types
       * </pre>
       *
       * <code>map&lt;string, bytes&gt; int32_to_message_field = 5;</code>
       */
      public Builder putInt32ToMessageField(
          java.lang.String key,
          com.google.protobuf.ByteString value) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        if (value == null) { throw new java.lang.NullPointerException(); }
        internalGetMutableInt32ToMessageField().getMutableMap()
            .put(key, value);
        return this;
      }
      /**
       * <pre>
       * different key and value types
       * </pre>
       *
       * <code>map&lt;string, bytes&gt; int32_to_message_field = 5;</code>
       */

      public Builder putAllInt32ToMessageField(
          java.util.Map<java.lang.String, com.google.protobuf.ByteString> values) {
        internalGetMutableInt32ToMessageField().getMutableMap()
            .putAll(values);
        return this;
      }

      private com.google.protobuf.MapField<
          java.lang.String, com.google.protobuf.ByteString> stringToInt32Field_;
      private com.google.protobuf.MapField<java.lang.String, com.google.protobuf.ByteString>
      internalGetStringToInt32Field() {
        if (stringToInt32Field_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              StringToInt32FieldDefaultEntryHolder.defaultEntry);
        }
        return stringToInt32Field_;
      }
      private com.google.protobuf.MapField<java.lang.String, com.google.protobuf.ByteString>
      internalGetMutableStringToInt32Field() {
        onChanged();;
        if (stringToInt32Field_ == null) {
          stringToInt32Field_ = com.google.protobuf.MapField.newMapField(
              StringToInt32FieldDefaultEntryHolder.defaultEntry);
        }
        if (!stringToInt32Field_.isMutable()) {
          stringToInt32Field_ = stringToInt32Field_.copy();
        }
        return stringToInt32Field_;
      }

      public int getStringToInt32FieldCount() {
        return internalGetStringToInt32Field().getMap().size();
      }
      /**
       * <pre>
       * same key type, different value
       * </pre>
       *
       * <code>map&lt;string, bytes&gt; string_to_int32_field = 6;</code>
       */

      public boolean containsStringToInt32Field(
          java.lang.String key) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        return internalGetStringToInt32Field().getMap().containsKey(key);
      }
      /**
       * Use {@link #getStringToInt32FieldMap()} instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, com.google.protobuf.ByteString> getStringToInt32Field() {
        return getStringToInt32FieldMap();
      }
      /**
       * <pre>
       * same key type, different value
       * </pre>
       *
       * <code>map&lt;string, bytes&gt; string_to_int32_field = 6;</code>
       */

      public java.util.Map<java.lang.String, com.google.protobuf.ByteString> getStringToInt32FieldMap() {
        return internalGetStringToInt32Field().getMap();
      }
      /**
       * <pre>
       * same key type, different value
       * </pre>
       *
       * <code>map&lt;string, bytes&gt; string_to_int32_field = 6;</code>
       */

      public com.google.protobuf.ByteString getStringToInt32FieldOrDefault(
          java.lang.String key,
          com.google.protobuf.ByteString defaultValue) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        java.util.Map<java.lang.String, com.google.protobuf.ByteString> map =
            internalGetStringToInt32Field().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <pre>
       * same key type, different value
       * </pre>
       *
       * <code>map&lt;string, bytes&gt; string_to_int32_field = 6;</code>
       */

      public com.google.protobuf.ByteString getStringToInt32FieldOrThrow(
          java.lang.String key) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        java.util.Map<java.lang.String, com.google.protobuf.ByteString> map =
            internalGetStringToInt32Field().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }

      public Builder clearStringToInt32Field() {
        internalGetMutableStringToInt32Field().getMutableMap()
            .clear();
        return this;
      }
      /**
       * <pre>
       * same key type, different value
       * </pre>
       *
       * <code>map&lt;string, bytes&gt; string_to_int32_field = 6;</code>
       */

      public Builder removeStringToInt32Field(
          java.lang.String key) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        internalGetMutableStringToInt32Field().getMutableMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, com.google.protobuf.ByteString>
      getMutableStringToInt32Field() {
        return internalGetMutableStringToInt32Field().getMutableMap();
      }
      /**
       * <pre>
       * same key type, different value
       * </pre>
       *
       * <code>map&lt;string, bytes&gt; string_to_int32_field = 6;</code>
       */
      public Builder putStringToInt32Field(
          java.lang.String key,
          com.google.protobuf.ByteString value) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        if (value == null) { throw new java.lang.NullPointerException(); }
        internalGetMutableStringToInt32Field().getMutableMap()
            .put(key, value);
        return this;
      }
      /**
       * <pre>
       * same key type, different value
       * </pre>
       *
       * <code>map&lt;string, bytes&gt; string_to_int32_field = 6;</code>
       */

      public Builder putAllStringToInt32Field(
          java.util.Map<java.lang.String, com.google.protobuf.ByteString> values) {
        internalGetMutableStringToInt32Field().getMutableMap()
            .putAll(values);
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:map_test.BizarroTestMap)
    }

    // @@protoc_insertion_point(class_scope:map_test.BizarroTestMap)
    private static final map_test.MapTestProto.BizarroTestMap DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new map_test.MapTestProto.BizarroTestMap();
    }

    public static map_test.MapTestProto.BizarroTestMap getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<BizarroTestMap>
        PARSER = new com.google.protobuf.AbstractParser<BizarroTestMap>() {
      public BizarroTestMap parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new BizarroTestMap(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<BizarroTestMap> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<BizarroTestMap> getParserForType() {
      return PARSER;
    }

    public map_test.MapTestProto.BizarroTestMap getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ReservedAsMapFieldOrBuilder extends
      // @@protoc_insertion_point(interface_extends:map_test.ReservedAsMapField)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>map&lt;string, uint32&gt; if = 1;</code>
     */
    int getIfCount();
    /**
     * <code>map&lt;string, uint32&gt; if = 1;</code>
     */
    boolean containsIf(
        java.lang.String key);
    /**
     * Use {@link #getIfMap()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.String, java.lang.Integer>
    getIf();
    /**
     * <code>map&lt;string, uint32&gt; if = 1;</code>
     */
    java.util.Map<java.lang.String, java.lang.Integer>
    getIfMap();
    /**
     * <code>map&lt;string, uint32&gt; if = 1;</code>
     */

    int getIfOrDefault(
        java.lang.String key,
        int defaultValue);
    /**
     * <code>map&lt;string, uint32&gt; if = 1;</code>
     */

    int getIfOrThrow(
        java.lang.String key);

    /**
     * <code>map&lt;string, uint32&gt; const = 2;</code>
     */
    int getConstCount();
    /**
     * <code>map&lt;string, uint32&gt; const = 2;</code>
     */
    boolean containsConst(
        java.lang.String key);
    /**
     * Use {@link #getConstMap()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.String, java.lang.Integer>
    getConst();
    /**
     * <code>map&lt;string, uint32&gt; const = 2;</code>
     */
    java.util.Map<java.lang.String, java.lang.Integer>
    getConstMap();
    /**
     * <code>map&lt;string, uint32&gt; const = 2;</code>
     */

    int getConstOrDefault(
        java.lang.String key,
        int defaultValue);
    /**
     * <code>map&lt;string, uint32&gt; const = 2;</code>
     */

    int getConstOrThrow(
        java.lang.String key);

    /**
     * <code>map&lt;string, uint32&gt; private = 3;</code>
     */
    int getPrivateCount();
    /**
     * <code>map&lt;string, uint32&gt; private = 3;</code>
     */
    boolean containsPrivate(
        java.lang.String key);
    /**
     * Use {@link #getPrivateMap()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.String, java.lang.Integer>
    getPrivate();
    /**
     * <code>map&lt;string, uint32&gt; private = 3;</code>
     */
    java.util.Map<java.lang.String, java.lang.Integer>
    getPrivateMap();
    /**
     * <code>map&lt;string, uint32&gt; private = 3;</code>
     */

    int getPrivateOrDefault(
        java.lang.String key,
        int defaultValue);
    /**
     * <code>map&lt;string, uint32&gt; private = 3;</code>
     */

    int getPrivateOrThrow(
        java.lang.String key);

    /**
     * <code>map&lt;string, uint32&gt; class = 4;</code>
     */
    int getClass_Count();
    /**
     * <code>map&lt;string, uint32&gt; class = 4;</code>
     */
    boolean containsClass_(
        java.lang.String key);
    /**
     * Use {@link #getClass_Map()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.String, java.lang.Integer>
    getClass_();
    /**
     * <code>map&lt;string, uint32&gt; class = 4;</code>
     */
    java.util.Map<java.lang.String, java.lang.Integer>
    getClass_Map();
    /**
     * <code>map&lt;string, uint32&gt; class = 4;</code>
     */

    int getClass_OrDefault(
        java.lang.String key,
        int defaultValue);
    /**
     * <code>map&lt;string, uint32&gt; class = 4;</code>
     */

    int getClass_OrThrow(
        java.lang.String key);

    /**
     * <code>map&lt;string, uint32&gt; int = 5;</code>
     */
    int getIntCount();
    /**
     * <code>map&lt;string, uint32&gt; int = 5;</code>
     */
    boolean containsInt(
        java.lang.String key);
    /**
     * Use {@link #getIntMap()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.String, java.lang.Integer>
    getInt();
    /**
     * <code>map&lt;string, uint32&gt; int = 5;</code>
     */
    java.util.Map<java.lang.String, java.lang.Integer>
    getIntMap();
    /**
     * <code>map&lt;string, uint32&gt; int = 5;</code>
     */

    int getIntOrDefault(
        java.lang.String key,
        int defaultValue);
    /**
     * <code>map&lt;string, uint32&gt; int = 5;</code>
     */

    int getIntOrThrow(
        java.lang.String key);

    /**
     * <code>map&lt;string, uint32&gt; void = 6;</code>
     */
    int getVoidCount();
    /**
     * <code>map&lt;string, uint32&gt; void = 6;</code>
     */
    boolean containsVoid(
        java.lang.String key);
    /**
     * Use {@link #getVoidMap()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.String, java.lang.Integer>
    getVoid();
    /**
     * <code>map&lt;string, uint32&gt; void = 6;</code>
     */
    java.util.Map<java.lang.String, java.lang.Integer>
    getVoidMap();
    /**
     * <code>map&lt;string, uint32&gt; void = 6;</code>
     */

    int getVoidOrDefault(
        java.lang.String key,
        int defaultValue);
    /**
     * <code>map&lt;string, uint32&gt; void = 6;</code>
     */

    int getVoidOrThrow(
        java.lang.String key);

    /**
     * <pre>
     * These are also proto keywords
     * </pre>
     *
     * <code>map&lt;string, uint32&gt; string = 7;</code>
     */
    int getStringCount();
    /**
     * <pre>
     * These are also proto keywords
     * </pre>
     *
     * <code>map&lt;string, uint32&gt; string = 7;</code>
     */
    boolean containsString(
        java.lang.String key);
    /**
     * Use {@link #getStringMap()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.String, java.lang.Integer>
    getString();
    /**
     * <pre>
     * These are also proto keywords
     * </pre>
     *
     * <code>map&lt;string, uint32&gt; string = 7;</code>
     */
    java.util.Map<java.lang.String, java.lang.Integer>
    getStringMap();
    /**
     * <pre>
     * These are also proto keywords
     * </pre>
     *
     * <code>map&lt;string, uint32&gt; string = 7;</code>
     */

    int getStringOrDefault(
        java.lang.String key,
        int defaultValue);
    /**
     * <pre>
     * These are also proto keywords
     * </pre>
     *
     * <code>map&lt;string, uint32&gt; string = 7;</code>
     */

    int getStringOrThrow(
        java.lang.String key);

    /**
     * <code>map&lt;string, uint32&gt; package = 8;</code>
     */
    int getPackageCount();
    /**
     * <code>map&lt;string, uint32&gt; package = 8;</code>
     */
    boolean containsPackage(
        java.lang.String key);
    /**
     * Use {@link #getPackageMap()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.String, java.lang.Integer>
    getPackage();
    /**
     * <code>map&lt;string, uint32&gt; package = 8;</code>
     */
    java.util.Map<java.lang.String, java.lang.Integer>
    getPackageMap();
    /**
     * <code>map&lt;string, uint32&gt; package = 8;</code>
     */

    int getPackageOrDefault(
        java.lang.String key,
        int defaultValue);
    /**
     * <code>map&lt;string, uint32&gt; package = 8;</code>
     */

    int getPackageOrThrow(
        java.lang.String key);

    /**
     * <pre>
     * Most recent Java reserved word
     * </pre>
     *
     * <code>map&lt;string, uint32&gt; enum = 9;</code>
     */
    int getEnumCount();
    /**
     * <pre>
     * Most recent Java reserved word
     * </pre>
     *
     * <code>map&lt;string, uint32&gt; enum = 9;</code>
     */
    boolean containsEnum(
        java.lang.String key);
    /**
     * Use {@link #getEnumMap()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.String, java.lang.Integer>
    getEnum();
    /**
     * <pre>
     * Most recent Java reserved word
     * </pre>
     *
     * <code>map&lt;string, uint32&gt; enum = 9;</code>
     */
    java.util.Map<java.lang.String, java.lang.Integer>
    getEnumMap();
    /**
     * <pre>
     * Most recent Java reserved word
     * </pre>
     *
     * <code>map&lt;string, uint32&gt; enum = 9;</code>
     */

    int getEnumOrDefault(
        java.lang.String key,
        int defaultValue);
    /**
     * <pre>
     * Most recent Java reserved word
     * </pre>
     *
     * <code>map&lt;string, uint32&gt; enum = 9;</code>
     */

    int getEnumOrThrow(
        java.lang.String key);

    /**
     * <pre>
     * null is not a 'reserved word' per se but as a literal needs similar care
     * </pre>
     *
     * <code>map&lt;string, uint32&gt; null = 10;</code>
     */
    int getNullCount();
    /**
     * <pre>
     * null is not a 'reserved word' per se but as a literal needs similar care
     * </pre>
     *
     * <code>map&lt;string, uint32&gt; null = 10;</code>
     */
    boolean containsNull(
        java.lang.String key);
    /**
     * Use {@link #getNullMap()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.String, java.lang.Integer>
    getNull();
    /**
     * <pre>
     * null is not a 'reserved word' per se but as a literal needs similar care
     * </pre>
     *
     * <code>map&lt;string, uint32&gt; null = 10;</code>
     */
    java.util.Map<java.lang.String, java.lang.Integer>
    getNullMap();
    /**
     * <pre>
     * null is not a 'reserved word' per se but as a literal needs similar care
     * </pre>
     *
     * <code>map&lt;string, uint32&gt; null = 10;</code>
     */

    int getNullOrDefault(
        java.lang.String key,
        int defaultValue);
    /**
     * <pre>
     * null is not a 'reserved word' per se but as a literal needs similar care
     * </pre>
     *
     * <code>map&lt;string, uint32&gt; null = 10;</code>
     */

    int getNullOrThrow(
        java.lang.String key);
  }
  /**
   * <pre>
   * Used to test that java reserved words can be used as protobuf field names
   * Not all reserved words are tested (to avoid bloat) but instead an arbitrary
   * subset of them chosen to cover various keyword categories like
   * type, modifier, declaration, etc.
   * </pre>
   *
   * Protobuf type {@code map_test.ReservedAsMapField}
   */
  public  static final class ReservedAsMapField extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:map_test.ReservedAsMapField)
      ReservedAsMapFieldOrBuilder {
    // Use ReservedAsMapField.newBuilder() to construct.
    private ReservedAsMapField(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private ReservedAsMapField() {
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private ReservedAsMapField(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                if_ = com.google.protobuf.MapField.newMapField(
                    IfDefaultEntryHolder.defaultEntry);
                mutable_bitField0_ |= 0x00000001;
              }
              com.google.protobuf.MapEntry<java.lang.String, java.lang.Integer>
              if__ = input.readMessage(
                  IfDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              if_.getMutableMap().put(
                  if__.getKey(), if__.getValue());
              break;
            }
            case 18: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                const_ = com.google.protobuf.MapField.newMapField(
                    ConstDefaultEntryHolder.defaultEntry);
                mutable_bitField0_ |= 0x00000002;
              }
              com.google.protobuf.MapEntry<java.lang.String, java.lang.Integer>
              const__ = input.readMessage(
                  ConstDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              const_.getMutableMap().put(
                  const__.getKey(), const__.getValue());
              break;
            }
            case 26: {
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                private_ = com.google.protobuf.MapField.newMapField(
                    PrivateDefaultEntryHolder.defaultEntry);
                mutable_bitField0_ |= 0x00000004;
              }
              com.google.protobuf.MapEntry<java.lang.String, java.lang.Integer>
              private__ = input.readMessage(
                  PrivateDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              private_.getMutableMap().put(
                  private__.getKey(), private__.getValue());
              break;
            }
            case 34: {
              if (!((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
                class__ = com.google.protobuf.MapField.newMapField(
                    Class_DefaultEntryHolder.defaultEntry);
                mutable_bitField0_ |= 0x00000008;
              }
              com.google.protobuf.MapEntry<java.lang.String, java.lang.Integer>
              class___ = input.readMessage(
                  Class_DefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              class__.getMutableMap().put(
                  class___.getKey(), class___.getValue());
              break;
            }
            case 42: {
              if (!((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
                int_ = com.google.protobuf.MapField.newMapField(
                    IntDefaultEntryHolder.defaultEntry);
                mutable_bitField0_ |= 0x00000010;
              }
              com.google.protobuf.MapEntry<java.lang.String, java.lang.Integer>
              int__ = input.readMessage(
                  IntDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              int_.getMutableMap().put(
                  int__.getKey(), int__.getValue());
              break;
            }
            case 50: {
              if (!((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
                void_ = com.google.protobuf.MapField.newMapField(
                    VoidDefaultEntryHolder.defaultEntry);
                mutable_bitField0_ |= 0x00000020;
              }
              com.google.protobuf.MapEntry<java.lang.String, java.lang.Integer>
              void__ = input.readMessage(
                  VoidDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              void_.getMutableMap().put(
                  void__.getKey(), void__.getValue());
              break;
            }
            case 58: {
              if (!((mutable_bitField0_ & 0x00000040) == 0x00000040)) {
                string_ = com.google.protobuf.MapField.newMapField(
                    StringDefaultEntryHolder.defaultEntry);
                mutable_bitField0_ |= 0x00000040;
              }
              com.google.protobuf.MapEntry<java.lang.String, java.lang.Integer>
              string__ = input.readMessage(
                  StringDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              string_.getMutableMap().put(
                  string__.getKey(), string__.getValue());
              break;
            }
            case 66: {
              if (!((mutable_bitField0_ & 0x00000080) == 0x00000080)) {
                package_ = com.google.protobuf.MapField.newMapField(
                    PackageDefaultEntryHolder.defaultEntry);
                mutable_bitField0_ |= 0x00000080;
              }
              com.google.protobuf.MapEntry<java.lang.String, java.lang.Integer>
              package__ = input.readMessage(
                  PackageDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              package_.getMutableMap().put(
                  package__.getKey(), package__.getValue());
              break;
            }
            case 74: {
              if (!((mutable_bitField0_ & 0x00000100) == 0x00000100)) {
                enum_ = com.google.protobuf.MapField.newMapField(
                    EnumDefaultEntryHolder.defaultEntry);
                mutable_bitField0_ |= 0x00000100;
              }
              com.google.protobuf.MapEntry<java.lang.String, java.lang.Integer>
              enum__ = input.readMessage(
                  EnumDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              enum_.getMutableMap().put(
                  enum__.getKey(), enum__.getValue());
              break;
            }
            case 82: {
              if (!((mutable_bitField0_ & 0x00000200) == 0x00000200)) {
                null_ = com.google.protobuf.MapField.newMapField(
                    NullDefaultEntryHolder.defaultEntry);
                mutable_bitField0_ |= 0x00000200;
              }
              com.google.protobuf.MapEntry<java.lang.String, java.lang.Integer>
              null__ = input.readMessage(
                  NullDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              null_.getMutableMap().put(
                  null__.getKey(), null__.getValue());
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return map_test.MapTestProto.internal_static_map_test_ReservedAsMapField_descriptor;
    }

    @SuppressWarnings({"rawtypes"})
    protected com.google.protobuf.MapField internalGetMapField(
        int number) {
      switch (number) {
        case 1:
          return internalGetIf();
        case 2:
          return internalGetConst();
        case 3:
          return internalGetPrivate();
        case 4:
          return internalGetClass_();
        case 5:
          return internalGetInt();
        case 6:
          return internalGetVoid();
        case 7:
          return internalGetString();
        case 8:
          return internalGetPackage();
        case 9:
          return internalGetEnum();
        case 10:
          return internalGetNull();
        default:
          throw new RuntimeException(
              "Invalid map field number: " + number);
      }
    }
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return map_test.MapTestProto.internal_static_map_test_ReservedAsMapField_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              map_test.MapTestProto.ReservedAsMapField.class, map_test.MapTestProto.ReservedAsMapField.Builder.class);
    }

    public static final int IF_FIELD_NUMBER = 1;
    private static final class IfDefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          java.lang.String, java.lang.Integer> defaultEntry =
              com.google.protobuf.MapEntry
              .<java.lang.String, java.lang.Integer>newDefaultInstance(
                  map_test.MapTestProto.internal_static_map_test_ReservedAsMapField_IfEntry_descriptor, 
                  com.google.protobuf.WireFormat.FieldType.STRING,
                  "",
                  com.google.protobuf.WireFormat.FieldType.UINT32,
                  0);
    }
    private com.google.protobuf.MapField<
        java.lang.String, java.lang.Integer> if_;
    private com.google.protobuf.MapField<java.lang.String, java.lang.Integer>
    internalGetIf() {
      if (if_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            IfDefaultEntryHolder.defaultEntry);
      }
      return if_;
    }

    public int getIfCount() {
      return internalGetIf().getMap().size();
    }
    /**
     * <code>map&lt;string, uint32&gt; if = 1;</code>
     */

    public boolean containsIf(
        java.lang.String key) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      return internalGetIf().getMap().containsKey(key);
    }
    /**
     * Use {@link #getIfMap()} instead.
     */
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, java.lang.Integer> getIf() {
      return getIfMap();
    }
    /**
     * <code>map&lt;string, uint32&gt; if = 1;</code>
     */

    public java.util.Map<java.lang.String, java.lang.Integer> getIfMap() {
      return internalGetIf().getMap();
    }
    /**
     * <code>map&lt;string, uint32&gt; if = 1;</code>
     */

    public int getIfOrDefault(
        java.lang.String key,
        int defaultValue) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      java.util.Map<java.lang.String, java.lang.Integer> map =
          internalGetIf().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <code>map&lt;string, uint32&gt; if = 1;</code>
     */

    public int getIfOrThrow(
        java.lang.String key) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      java.util.Map<java.lang.String, java.lang.Integer> map =
          internalGetIf().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    public static final int CONST_FIELD_NUMBER = 2;
    private static final class ConstDefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          java.lang.String, java.lang.Integer> defaultEntry =
              com.google.protobuf.MapEntry
              .<java.lang.String, java.lang.Integer>newDefaultInstance(
                  map_test.MapTestProto.internal_static_map_test_ReservedAsMapField_ConstEntry_descriptor, 
                  com.google.protobuf.WireFormat.FieldType.STRING,
                  "",
                  com.google.protobuf.WireFormat.FieldType.UINT32,
                  0);
    }
    private com.google.protobuf.MapField<
        java.lang.String, java.lang.Integer> const_;
    private com.google.protobuf.MapField<java.lang.String, java.lang.Integer>
    internalGetConst() {
      if (const_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            ConstDefaultEntryHolder.defaultEntry);
      }
      return const_;
    }

    public int getConstCount() {
      return internalGetConst().getMap().size();
    }
    /**
     * <code>map&lt;string, uint32&gt; const = 2;</code>
     */

    public boolean containsConst(
        java.lang.String key) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      return internalGetConst().getMap().containsKey(key);
    }
    /**
     * Use {@link #getConstMap()} instead.
     */
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, java.lang.Integer> getConst() {
      return getConstMap();
    }
    /**
     * <code>map&lt;string, uint32&gt; const = 2;</code>
     */

    public java.util.Map<java.lang.String, java.lang.Integer> getConstMap() {
      return internalGetConst().getMap();
    }
    /**
     * <code>map&lt;string, uint32&gt; const = 2;</code>
     */

    public int getConstOrDefault(
        java.lang.String key,
        int defaultValue) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      java.util.Map<java.lang.String, java.lang.Integer> map =
          internalGetConst().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <code>map&lt;string, uint32&gt; const = 2;</code>
     */

    public int getConstOrThrow(
        java.lang.String key) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      java.util.Map<java.lang.String, java.lang.Integer> map =
          internalGetConst().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    public static final int PRIVATE_FIELD_NUMBER = 3;
    private static final class PrivateDefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          java.lang.String, java.lang.Integer> defaultEntry =
              com.google.protobuf.MapEntry
              .<java.lang.String, java.lang.Integer>newDefaultInstance(
                  map_test.MapTestProto.internal_static_map_test_ReservedAsMapField_PrivateEntry_descriptor, 
                  com.google.protobuf.WireFormat.FieldType.STRING,
                  "",
                  com.google.protobuf.WireFormat.FieldType.UINT32,
                  0);
    }
    private com.google.protobuf.MapField<
        java.lang.String, java.lang.Integer> private_;
    private com.google.protobuf.MapField<java.lang.String, java.lang.Integer>
    internalGetPrivate() {
      if (private_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            PrivateDefaultEntryHolder.defaultEntry);
      }
      return private_;
    }

    public int getPrivateCount() {
      return internalGetPrivate().getMap().size();
    }
    /**
     * <code>map&lt;string, uint32&gt; private = 3;</code>
     */

    public boolean containsPrivate(
        java.lang.String key) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      return internalGetPrivate().getMap().containsKey(key);
    }
    /**
     * Use {@link #getPrivateMap()} instead.
     */
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, java.lang.Integer> getPrivate() {
      return getPrivateMap();
    }
    /**
     * <code>map&lt;string, uint32&gt; private = 3;</code>
     */

    public java.util.Map<java.lang.String, java.lang.Integer> getPrivateMap() {
      return internalGetPrivate().getMap();
    }
    /**
     * <code>map&lt;string, uint32&gt; private = 3;</code>
     */

    public int getPrivateOrDefault(
        java.lang.String key,
        int defaultValue) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      java.util.Map<java.lang.String, java.lang.Integer> map =
          internalGetPrivate().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <code>map&lt;string, uint32&gt; private = 3;</code>
     */

    public int getPrivateOrThrow(
        java.lang.String key) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      java.util.Map<java.lang.String, java.lang.Integer> map =
          internalGetPrivate().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    public static final int CLASS_FIELD_NUMBER = 4;
    private static final class Class_DefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          java.lang.String, java.lang.Integer> defaultEntry =
              com.google.protobuf.MapEntry
              .<java.lang.String, java.lang.Integer>newDefaultInstance(
                  map_test.MapTestProto.internal_static_map_test_ReservedAsMapField_ClassEntry_descriptor, 
                  com.google.protobuf.WireFormat.FieldType.STRING,
                  "",
                  com.google.protobuf.WireFormat.FieldType.UINT32,
                  0);
    }
    private com.google.protobuf.MapField<
        java.lang.String, java.lang.Integer> class__;
    private com.google.protobuf.MapField<java.lang.String, java.lang.Integer>
    internalGetClass_() {
      if (class__ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            Class_DefaultEntryHolder.defaultEntry);
      }
      return class__;
    }

    public int getClass_Count() {
      return internalGetClass_().getMap().size();
    }
    /**
     * <code>map&lt;string, uint32&gt; class = 4;</code>
     */

    public boolean containsClass_(
        java.lang.String key) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      return internalGetClass_().getMap().containsKey(key);
    }
    /**
     * Use {@link #getClass_Map()} instead.
     */
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, java.lang.Integer> getClass_() {
      return getClass_Map();
    }
    /**
     * <code>map&lt;string, uint32&gt; class = 4;</code>
     */

    public java.util.Map<java.lang.String, java.lang.Integer> getClass_Map() {
      return internalGetClass_().getMap();
    }
    /**
     * <code>map&lt;string, uint32&gt; class = 4;</code>
     */

    public int getClass_OrDefault(
        java.lang.String key,
        int defaultValue) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      java.util.Map<java.lang.String, java.lang.Integer> map =
          internalGetClass_().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <code>map&lt;string, uint32&gt; class = 4;</code>
     */

    public int getClass_OrThrow(
        java.lang.String key) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      java.util.Map<java.lang.String, java.lang.Integer> map =
          internalGetClass_().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    public static final int INT_FIELD_NUMBER = 5;
    private static final class IntDefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          java.lang.String, java.lang.Integer> defaultEntry =
              com.google.protobuf.MapEntry
              .<java.lang.String, java.lang.Integer>newDefaultInstance(
                  map_test.MapTestProto.internal_static_map_test_ReservedAsMapField_IntEntry_descriptor, 
                  com.google.protobuf.WireFormat.FieldType.STRING,
                  "",
                  com.google.protobuf.WireFormat.FieldType.UINT32,
                  0);
    }
    private com.google.protobuf.MapField<
        java.lang.String, java.lang.Integer> int_;
    private com.google.protobuf.MapField<java.lang.String, java.lang.Integer>
    internalGetInt() {
      if (int_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            IntDefaultEntryHolder.defaultEntry);
      }
      return int_;
    }

    public int getIntCount() {
      return internalGetInt().getMap().size();
    }
    /**
     * <code>map&lt;string, uint32&gt; int = 5;</code>
     */

    public boolean containsInt(
        java.lang.String key) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      return internalGetInt().getMap().containsKey(key);
    }
    /**
     * Use {@link #getIntMap()} instead.
     */
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, java.lang.Integer> getInt() {
      return getIntMap();
    }
    /**
     * <code>map&lt;string, uint32&gt; int = 5;</code>
     */

    public java.util.Map<java.lang.String, java.lang.Integer> getIntMap() {
      return internalGetInt().getMap();
    }
    /**
     * <code>map&lt;string, uint32&gt; int = 5;</code>
     */

    public int getIntOrDefault(
        java.lang.String key,
        int defaultValue) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      java.util.Map<java.lang.String, java.lang.Integer> map =
          internalGetInt().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <code>map&lt;string, uint32&gt; int = 5;</code>
     */

    public int getIntOrThrow(
        java.lang.String key) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      java.util.Map<java.lang.String, java.lang.Integer> map =
          internalGetInt().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    public static final int VOID_FIELD_NUMBER = 6;
    private static final class VoidDefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          java.lang.String, java.lang.Integer> defaultEntry =
              com.google.protobuf.MapEntry
              .<java.lang.String, java.lang.Integer>newDefaultInstance(
                  map_test.MapTestProto.internal_static_map_test_ReservedAsMapField_VoidEntry_descriptor, 
                  com.google.protobuf.WireFormat.FieldType.STRING,
                  "",
                  com.google.protobuf.WireFormat.FieldType.UINT32,
                  0);
    }
    private com.google.protobuf.MapField<
        java.lang.String, java.lang.Integer> void_;
    private com.google.protobuf.MapField<java.lang.String, java.lang.Integer>
    internalGetVoid() {
      if (void_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            VoidDefaultEntryHolder.defaultEntry);
      }
      return void_;
    }

    public int getVoidCount() {
      return internalGetVoid().getMap().size();
    }
    /**
     * <code>map&lt;string, uint32&gt; void = 6;</code>
     */

    public boolean containsVoid(
        java.lang.String key) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      return internalGetVoid().getMap().containsKey(key);
    }
    /**
     * Use {@link #getVoidMap()} instead.
     */
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, java.lang.Integer> getVoid() {
      return getVoidMap();
    }
    /**
     * <code>map&lt;string, uint32&gt; void = 6;</code>
     */

    public java.util.Map<java.lang.String, java.lang.Integer> getVoidMap() {
      return internalGetVoid().getMap();
    }
    /**
     * <code>map&lt;string, uint32&gt; void = 6;</code>
     */

    public int getVoidOrDefault(
        java.lang.String key,
        int defaultValue) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      java.util.Map<java.lang.String, java.lang.Integer> map =
          internalGetVoid().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <code>map&lt;string, uint32&gt; void = 6;</code>
     */

    public int getVoidOrThrow(
        java.lang.String key) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      java.util.Map<java.lang.String, java.lang.Integer> map =
          internalGetVoid().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    public static final int STRING_FIELD_NUMBER = 7;
    private static final class StringDefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          java.lang.String, java.lang.Integer> defaultEntry =
              com.google.protobuf.MapEntry
              .<java.lang.String, java.lang.Integer>newDefaultInstance(
                  map_test.MapTestProto.internal_static_map_test_ReservedAsMapField_StringEntry_descriptor, 
                  com.google.protobuf.WireFormat.FieldType.STRING,
                  "",
                  com.google.protobuf.WireFormat.FieldType.UINT32,
                  0);
    }
    private com.google.protobuf.MapField<
        java.lang.String, java.lang.Integer> string_;
    private com.google.protobuf.MapField<java.lang.String, java.lang.Integer>
    internalGetString() {
      if (string_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            StringDefaultEntryHolder.defaultEntry);
      }
      return string_;
    }

    public int getStringCount() {
      return internalGetString().getMap().size();
    }
    /**
     * <pre>
     * These are also proto keywords
     * </pre>
     *
     * <code>map&lt;string, uint32&gt; string = 7;</code>
     */

    public boolean containsString(
        java.lang.String key) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      return internalGetString().getMap().containsKey(key);
    }
    /**
     * Use {@link #getStringMap()} instead.
     */
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, java.lang.Integer> getString() {
      return getStringMap();
    }
    /**
     * <pre>
     * These are also proto keywords
     * </pre>
     *
     * <code>map&lt;string, uint32&gt; string = 7;</code>
     */

    public java.util.Map<java.lang.String, java.lang.Integer> getStringMap() {
      return internalGetString().getMap();
    }
    /**
     * <pre>
     * These are also proto keywords
     * </pre>
     *
     * <code>map&lt;string, uint32&gt; string = 7;</code>
     */

    public int getStringOrDefault(
        java.lang.String key,
        int defaultValue) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      java.util.Map<java.lang.String, java.lang.Integer> map =
          internalGetString().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <pre>
     * These are also proto keywords
     * </pre>
     *
     * <code>map&lt;string, uint32&gt; string = 7;</code>
     */

    public int getStringOrThrow(
        java.lang.String key) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      java.util.Map<java.lang.String, java.lang.Integer> map =
          internalGetString().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    public static final int PACKAGE_FIELD_NUMBER = 8;
    private static final class PackageDefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          java.lang.String, java.lang.Integer> defaultEntry =
              com.google.protobuf.MapEntry
              .<java.lang.String, java.lang.Integer>newDefaultInstance(
                  map_test.MapTestProto.internal_static_map_test_ReservedAsMapField_PackageEntry_descriptor, 
                  com.google.protobuf.WireFormat.FieldType.STRING,
                  "",
                  com.google.protobuf.WireFormat.FieldType.UINT32,
                  0);
    }
    private com.google.protobuf.MapField<
        java.lang.String, java.lang.Integer> package_;
    private com.google.protobuf.MapField<java.lang.String, java.lang.Integer>
    internalGetPackage() {
      if (package_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            PackageDefaultEntryHolder.defaultEntry);
      }
      return package_;
    }

    public int getPackageCount() {
      return internalGetPackage().getMap().size();
    }
    /**
     * <code>map&lt;string, uint32&gt; package = 8;</code>
     */

    public boolean containsPackage(
        java.lang.String key) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      return internalGetPackage().getMap().containsKey(key);
    }
    /**
     * Use {@link #getPackageMap()} instead.
     */
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, java.lang.Integer> getPackage() {
      return getPackageMap();
    }
    /**
     * <code>map&lt;string, uint32&gt; package = 8;</code>
     */

    public java.util.Map<java.lang.String, java.lang.Integer> getPackageMap() {
      return internalGetPackage().getMap();
    }
    /**
     * <code>map&lt;string, uint32&gt; package = 8;</code>
     */

    public int getPackageOrDefault(
        java.lang.String key,
        int defaultValue) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      java.util.Map<java.lang.String, java.lang.Integer> map =
          internalGetPackage().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <code>map&lt;string, uint32&gt; package = 8;</code>
     */

    public int getPackageOrThrow(
        java.lang.String key) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      java.util.Map<java.lang.String, java.lang.Integer> map =
          internalGetPackage().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    public static final int ENUM_FIELD_NUMBER = 9;
    private static final class EnumDefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          java.lang.String, java.lang.Integer> defaultEntry =
              com.google.protobuf.MapEntry
              .<java.lang.String, java.lang.Integer>newDefaultInstance(
                  map_test.MapTestProto.internal_static_map_test_ReservedAsMapField_EnumEntry_descriptor, 
                  com.google.protobuf.WireFormat.FieldType.STRING,
                  "",
                  com.google.protobuf.WireFormat.FieldType.UINT32,
                  0);
    }
    private com.google.protobuf.MapField<
        java.lang.String, java.lang.Integer> enum_;
    private com.google.protobuf.MapField<java.lang.String, java.lang.Integer>
    internalGetEnum() {
      if (enum_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            EnumDefaultEntryHolder.defaultEntry);
      }
      return enum_;
    }

    public int getEnumCount() {
      return internalGetEnum().getMap().size();
    }
    /**
     * <pre>
     * Most recent Java reserved word
     * </pre>
     *
     * <code>map&lt;string, uint32&gt; enum = 9;</code>
     */

    public boolean containsEnum(
        java.lang.String key) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      return internalGetEnum().getMap().containsKey(key);
    }
    /**
     * Use {@link #getEnumMap()} instead.
     */
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, java.lang.Integer> getEnum() {
      return getEnumMap();
    }
    /**
     * <pre>
     * Most recent Java reserved word
     * </pre>
     *
     * <code>map&lt;string, uint32&gt; enum = 9;</code>
     */

    public java.util.Map<java.lang.String, java.lang.Integer> getEnumMap() {
      return internalGetEnum().getMap();
    }
    /**
     * <pre>
     * Most recent Java reserved word
     * </pre>
     *
     * <code>map&lt;string, uint32&gt; enum = 9;</code>
     */

    public int getEnumOrDefault(
        java.lang.String key,
        int defaultValue) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      java.util.Map<java.lang.String, java.lang.Integer> map =
          internalGetEnum().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <pre>
     * Most recent Java reserved word
     * </pre>
     *
     * <code>map&lt;string, uint32&gt; enum = 9;</code>
     */

    public int getEnumOrThrow(
        java.lang.String key) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      java.util.Map<java.lang.String, java.lang.Integer> map =
          internalGetEnum().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    public static final int NULL_FIELD_NUMBER = 10;
    private static final class NullDefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          java.lang.String, java.lang.Integer> defaultEntry =
              com.google.protobuf.MapEntry
              .<java.lang.String, java.lang.Integer>newDefaultInstance(
                  map_test.MapTestProto.internal_static_map_test_ReservedAsMapField_NullEntry_descriptor, 
                  com.google.protobuf.WireFormat.FieldType.STRING,
                  "",
                  com.google.protobuf.WireFormat.FieldType.UINT32,
                  0);
    }
    private com.google.protobuf.MapField<
        java.lang.String, java.lang.Integer> null_;
    private com.google.protobuf.MapField<java.lang.String, java.lang.Integer>
    internalGetNull() {
      if (null_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            NullDefaultEntryHolder.defaultEntry);
      }
      return null_;
    }

    public int getNullCount() {
      return internalGetNull().getMap().size();
    }
    /**
     * <pre>
     * null is not a 'reserved word' per se but as a literal needs similar care
     * </pre>
     *
     * <code>map&lt;string, uint32&gt; null = 10;</code>
     */

    public boolean containsNull(
        java.lang.String key) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      return internalGetNull().getMap().containsKey(key);
    }
    /**
     * Use {@link #getNullMap()} instead.
     */
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, java.lang.Integer> getNull() {
      return getNullMap();
    }
    /**
     * <pre>
     * null is not a 'reserved word' per se but as a literal needs similar care
     * </pre>
     *
     * <code>map&lt;string, uint32&gt; null = 10;</code>
     */

    public java.util.Map<java.lang.String, java.lang.Integer> getNullMap() {
      return internalGetNull().getMap();
    }
    /**
     * <pre>
     * null is not a 'reserved word' per se but as a literal needs similar care
     * </pre>
     *
     * <code>map&lt;string, uint32&gt; null = 10;</code>
     */

    public int getNullOrDefault(
        java.lang.String key,
        int defaultValue) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      java.util.Map<java.lang.String, java.lang.Integer> map =
          internalGetNull().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <pre>
     * null is not a 'reserved word' per se but as a literal needs similar care
     * </pre>
     *
     * <code>map&lt;string, uint32&gt; null = 10;</code>
     */

    public int getNullOrThrow(
        java.lang.String key) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      java.util.Map<java.lang.String, java.lang.Integer> map =
          internalGetNull().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      com.google.protobuf.GeneratedMessageV3
        .serializeStringMapTo(
          output,
          internalGetIf(),
          IfDefaultEntryHolder.defaultEntry,
          1);
      com.google.protobuf.GeneratedMessageV3
        .serializeStringMapTo(
          output,
          internalGetConst(),
          ConstDefaultEntryHolder.defaultEntry,
          2);
      com.google.protobuf.GeneratedMessageV3
        .serializeStringMapTo(
          output,
          internalGetPrivate(),
          PrivateDefaultEntryHolder.defaultEntry,
          3);
      com.google.protobuf.GeneratedMessageV3
        .serializeStringMapTo(
          output,
          internalGetClass_(),
          Class_DefaultEntryHolder.defaultEntry,
          4);
      com.google.protobuf.GeneratedMessageV3
        .serializeStringMapTo(
          output,
          internalGetInt(),
          IntDefaultEntryHolder.defaultEntry,
          5);
      com.google.protobuf.GeneratedMessageV3
        .serializeStringMapTo(
          output,
          internalGetVoid(),
          VoidDefaultEntryHolder.defaultEntry,
          6);
      com.google.protobuf.GeneratedMessageV3
        .serializeStringMapTo(
          output,
          internalGetString(),
          StringDefaultEntryHolder.defaultEntry,
          7);
      com.google.protobuf.GeneratedMessageV3
        .serializeStringMapTo(
          output,
          internalGetPackage(),
          PackageDefaultEntryHolder.defaultEntry,
          8);
      com.google.protobuf.GeneratedMessageV3
        .serializeStringMapTo(
          output,
          internalGetEnum(),
          EnumDefaultEntryHolder.defaultEntry,
          9);
      com.google.protobuf.GeneratedMessageV3
        .serializeStringMapTo(
          output,
          internalGetNull(),
          NullDefaultEntryHolder.defaultEntry,
          10);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (java.util.Map.Entry<java.lang.String, java.lang.Integer> entry
           : internalGetIf().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.String, java.lang.Integer>
        if__ = IfDefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(1, if__);
      }
      for (java.util.Map.Entry<java.lang.String, java.lang.Integer> entry
           : internalGetConst().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.String, java.lang.Integer>
        const__ = ConstDefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(2, const__);
      }
      for (java.util.Map.Entry<java.lang.String, java.lang.Integer> entry
           : internalGetPrivate().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.String, java.lang.Integer>
        private__ = PrivateDefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(3, private__);
      }
      for (java.util.Map.Entry<java.lang.String, java.lang.Integer> entry
           : internalGetClass_().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.String, java.lang.Integer>
        class___ = Class_DefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(4, class___);
      }
      for (java.util.Map.Entry<java.lang.String, java.lang.Integer> entry
           : internalGetInt().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.String, java.lang.Integer>
        int__ = IntDefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(5, int__);
      }
      for (java.util.Map.Entry<java.lang.String, java.lang.Integer> entry
           : internalGetVoid().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.String, java.lang.Integer>
        void__ = VoidDefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(6, void__);
      }
      for (java.util.Map.Entry<java.lang.String, java.lang.Integer> entry
           : internalGetString().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.String, java.lang.Integer>
        string__ = StringDefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(7, string__);
      }
      for (java.util.Map.Entry<java.lang.String, java.lang.Integer> entry
           : internalGetPackage().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.String, java.lang.Integer>
        package__ = PackageDefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(8, package__);
      }
      for (java.util.Map.Entry<java.lang.String, java.lang.Integer> entry
           : internalGetEnum().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.String, java.lang.Integer>
        enum__ = EnumDefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(9, enum__);
      }
      for (java.util.Map.Entry<java.lang.String, java.lang.Integer> entry
           : internalGetNull().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.String, java.lang.Integer>
        null__ = NullDefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10, null__);
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof map_test.MapTestProto.ReservedAsMapField)) {
        return super.equals(obj);
      }
      map_test.MapTestProto.ReservedAsMapField other = (map_test.MapTestProto.ReservedAsMapField) obj;

      boolean result = true;
      result = result && internalGetIf().equals(
          other.internalGetIf());
      result = result && internalGetConst().equals(
          other.internalGetConst());
      result = result && internalGetPrivate().equals(
          other.internalGetPrivate());
      result = result && internalGetClass_().equals(
          other.internalGetClass_());
      result = result && internalGetInt().equals(
          other.internalGetInt());
      result = result && internalGetVoid().equals(
          other.internalGetVoid());
      result = result && internalGetString().equals(
          other.internalGetString());
      result = result && internalGetPackage().equals(
          other.internalGetPackage());
      result = result && internalGetEnum().equals(
          other.internalGetEnum());
      result = result && internalGetNull().equals(
          other.internalGetNull());
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (!internalGetIf().getMap().isEmpty()) {
        hash = (37 * hash) + IF_FIELD_NUMBER;
        hash = (53 * hash) + internalGetIf().hashCode();
      }
      if (!internalGetConst().getMap().isEmpty()) {
        hash = (37 * hash) + CONST_FIELD_NUMBER;
        hash = (53 * hash) + internalGetConst().hashCode();
      }
      if (!internalGetPrivate().getMap().isEmpty()) {
        hash = (37 * hash) + PRIVATE_FIELD_NUMBER;
        hash = (53 * hash) + internalGetPrivate().hashCode();
      }
      if (!internalGetClass_().getMap().isEmpty()) {
        hash = (37 * hash) + CLASS_FIELD_NUMBER;
        hash = (53 * hash) + internalGetClass_().hashCode();
      }
      if (!internalGetInt().getMap().isEmpty()) {
        hash = (37 * hash) + INT_FIELD_NUMBER;
        hash = (53 * hash) + internalGetInt().hashCode();
      }
      if (!internalGetVoid().getMap().isEmpty()) {
        hash = (37 * hash) + VOID_FIELD_NUMBER;
        hash = (53 * hash) + internalGetVoid().hashCode();
      }
      if (!internalGetString().getMap().isEmpty()) {
        hash = (37 * hash) + STRING_FIELD_NUMBER;
        hash = (53 * hash) + internalGetString().hashCode();
      }
      if (!internalGetPackage().getMap().isEmpty()) {
        hash = (37 * hash) + PACKAGE_FIELD_NUMBER;
        hash = (53 * hash) + internalGetPackage().hashCode();
      }
      if (!internalGetEnum().getMap().isEmpty()) {
        hash = (37 * hash) + ENUM_FIELD_NUMBER;
        hash = (53 * hash) + internalGetEnum().hashCode();
      }
      if (!internalGetNull().getMap().isEmpty()) {
        hash = (37 * hash) + NULL_FIELD_NUMBER;
        hash = (53 * hash) + internalGetNull().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static map_test.MapTestProto.ReservedAsMapField parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static map_test.MapTestProto.ReservedAsMapField parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static map_test.MapTestProto.ReservedAsMapField parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static map_test.MapTestProto.ReservedAsMapField parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static map_test.MapTestProto.ReservedAsMapField parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static map_test.MapTestProto.ReservedAsMapField parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static map_test.MapTestProto.ReservedAsMapField parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static map_test.MapTestProto.ReservedAsMapField parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static map_test.MapTestProto.ReservedAsMapField parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static map_test.MapTestProto.ReservedAsMapField parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static map_test.MapTestProto.ReservedAsMapField parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static map_test.MapTestProto.ReservedAsMapField parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(map_test.MapTestProto.ReservedAsMapField prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Used to test that java reserved words can be used as protobuf field names
     * Not all reserved words are tested (to avoid bloat) but instead an arbitrary
     * subset of them chosen to cover various keyword categories like
     * type, modifier, declaration, etc.
     * </pre>
     *
     * Protobuf type {@code map_test.ReservedAsMapField}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:map_test.ReservedAsMapField)
        map_test.MapTestProto.ReservedAsMapFieldOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return map_test.MapTestProto.internal_static_map_test_ReservedAsMapField_descriptor;
      }

      @SuppressWarnings({"rawtypes"})
      protected com.google.protobuf.MapField internalGetMapField(
          int number) {
        switch (number) {
          case 1:
            return internalGetIf();
          case 2:
            return internalGetConst();
          case 3:
            return internalGetPrivate();
          case 4:
            return internalGetClass_();
          case 5:
            return internalGetInt();
          case 6:
            return internalGetVoid();
          case 7:
            return internalGetString();
          case 8:
            return internalGetPackage();
          case 9:
            return internalGetEnum();
          case 10:
            return internalGetNull();
          default:
            throw new RuntimeException(
                "Invalid map field number: " + number);
        }
      }
      @SuppressWarnings({"rawtypes"})
      protected com.google.protobuf.MapField internalGetMutableMapField(
          int number) {
        switch (number) {
          case 1:
            return internalGetMutableIf();
          case 2:
            return internalGetMutableConst();
          case 3:
            return internalGetMutablePrivate();
          case 4:
            return internalGetMutableClass_();
          case 5:
            return internalGetMutableInt();
          case 6:
            return internalGetMutableVoid();
          case 7:
            return internalGetMutableString();
          case 8:
            return internalGetMutablePackage();
          case 9:
            return internalGetMutableEnum();
          case 10:
            return internalGetMutableNull();
          default:
            throw new RuntimeException(
                "Invalid map field number: " + number);
        }
      }
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return map_test.MapTestProto.internal_static_map_test_ReservedAsMapField_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                map_test.MapTestProto.ReservedAsMapField.class, map_test.MapTestProto.ReservedAsMapField.Builder.class);
      }

      // Construct using map_test.MapTestProto.ReservedAsMapField.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        internalGetMutableIf().clear();
        internalGetMutableConst().clear();
        internalGetMutablePrivate().clear();
        internalGetMutableClass_().clear();
        internalGetMutableInt().clear();
        internalGetMutableVoid().clear();
        internalGetMutableString().clear();
        internalGetMutablePackage().clear();
        internalGetMutableEnum().clear();
        internalGetMutableNull().clear();
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return map_test.MapTestProto.internal_static_map_test_ReservedAsMapField_descriptor;
      }

      public map_test.MapTestProto.ReservedAsMapField getDefaultInstanceForType() {
        return map_test.MapTestProto.ReservedAsMapField.getDefaultInstance();
      }

      public map_test.MapTestProto.ReservedAsMapField build() {
        map_test.MapTestProto.ReservedAsMapField result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public map_test.MapTestProto.ReservedAsMapField buildPartial() {
        map_test.MapTestProto.ReservedAsMapField result = new map_test.MapTestProto.ReservedAsMapField(this);
        int from_bitField0_ = bitField0_;
        result.if_ = internalGetIf();
        result.if_.makeImmutable();
        result.const_ = internalGetConst();
        result.const_.makeImmutable();
        result.private_ = internalGetPrivate();
        result.private_.makeImmutable();
        result.class__ = internalGetClass_();
        result.class__.makeImmutable();
        result.int_ = internalGetInt();
        result.int_.makeImmutable();
        result.void_ = internalGetVoid();
        result.void_.makeImmutable();
        result.string_ = internalGetString();
        result.string_.makeImmutable();
        result.package_ = internalGetPackage();
        result.package_.makeImmutable();
        result.enum_ = internalGetEnum();
        result.enum_.makeImmutable();
        result.null_ = internalGetNull();
        result.null_.makeImmutable();
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof map_test.MapTestProto.ReservedAsMapField) {
          return mergeFrom((map_test.MapTestProto.ReservedAsMapField)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(map_test.MapTestProto.ReservedAsMapField other) {
        if (other == map_test.MapTestProto.ReservedAsMapField.getDefaultInstance()) return this;
        internalGetMutableIf().mergeFrom(
            other.internalGetIf());
        internalGetMutableConst().mergeFrom(
            other.internalGetConst());
        internalGetMutablePrivate().mergeFrom(
            other.internalGetPrivate());
        internalGetMutableClass_().mergeFrom(
            other.internalGetClass_());
        internalGetMutableInt().mergeFrom(
            other.internalGetInt());
        internalGetMutableVoid().mergeFrom(
            other.internalGetVoid());
        internalGetMutableString().mergeFrom(
            other.internalGetString());
        internalGetMutablePackage().mergeFrom(
            other.internalGetPackage());
        internalGetMutableEnum().mergeFrom(
            other.internalGetEnum());
        internalGetMutableNull().mergeFrom(
            other.internalGetNull());
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        map_test.MapTestProto.ReservedAsMapField parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (map_test.MapTestProto.ReservedAsMapField) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private com.google.protobuf.MapField<
          java.lang.String, java.lang.Integer> if_;
      private com.google.protobuf.MapField<java.lang.String, java.lang.Integer>
      internalGetIf() {
        if (if_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              IfDefaultEntryHolder.defaultEntry);
        }
        return if_;
      }
      private com.google.protobuf.MapField<java.lang.String, java.lang.Integer>
      internalGetMutableIf() {
        onChanged();;
        if (if_ == null) {
          if_ = com.google.protobuf.MapField.newMapField(
              IfDefaultEntryHolder.defaultEntry);
        }
        if (!if_.isMutable()) {
          if_ = if_.copy();
        }
        return if_;
      }

      public int getIfCount() {
        return internalGetIf().getMap().size();
      }
      /**
       * <code>map&lt;string, uint32&gt; if = 1;</code>
       */

      public boolean containsIf(
          java.lang.String key) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        return internalGetIf().getMap().containsKey(key);
      }
      /**
       * Use {@link #getIfMap()} instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, java.lang.Integer> getIf() {
        return getIfMap();
      }
      /**
       * <code>map&lt;string, uint32&gt; if = 1;</code>
       */

      public java.util.Map<java.lang.String, java.lang.Integer> getIfMap() {
        return internalGetIf().getMap();
      }
      /**
       * <code>map&lt;string, uint32&gt; if = 1;</code>
       */

      public int getIfOrDefault(
          java.lang.String key,
          int defaultValue) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        java.util.Map<java.lang.String, java.lang.Integer> map =
            internalGetIf().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <code>map&lt;string, uint32&gt; if = 1;</code>
       */

      public int getIfOrThrow(
          java.lang.String key) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        java.util.Map<java.lang.String, java.lang.Integer> map =
            internalGetIf().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }

      public Builder clearIf() {
        internalGetMutableIf().getMutableMap()
            .clear();
        return this;
      }
      /**
       * <code>map&lt;string, uint32&gt; if = 1;</code>
       */

      public Builder removeIf(
          java.lang.String key) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        internalGetMutableIf().getMutableMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, java.lang.Integer>
      getMutableIf() {
        return internalGetMutableIf().getMutableMap();
      }
      /**
       * <code>map&lt;string, uint32&gt; if = 1;</code>
       */
      public Builder putIf(
          java.lang.String key,
          int value) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        
        internalGetMutableIf().getMutableMap()
            .put(key, value);
        return this;
      }
      /**
       * <code>map&lt;string, uint32&gt; if = 1;</code>
       */

      public Builder putAllIf(
          java.util.Map<java.lang.String, java.lang.Integer> values) {
        internalGetMutableIf().getMutableMap()
            .putAll(values);
        return this;
      }

      private com.google.protobuf.MapField<
          java.lang.String, java.lang.Integer> const_;
      private com.google.protobuf.MapField<java.lang.String, java.lang.Integer>
      internalGetConst() {
        if (const_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              ConstDefaultEntryHolder.defaultEntry);
        }
        return const_;
      }
      private com.google.protobuf.MapField<java.lang.String, java.lang.Integer>
      internalGetMutableConst() {
        onChanged();;
        if (const_ == null) {
          const_ = com.google.protobuf.MapField.newMapField(
              ConstDefaultEntryHolder.defaultEntry);
        }
        if (!const_.isMutable()) {
          const_ = const_.copy();
        }
        return const_;
      }

      public int getConstCount() {
        return internalGetConst().getMap().size();
      }
      /**
       * <code>map&lt;string, uint32&gt; const = 2;</code>
       */

      public boolean containsConst(
          java.lang.String key) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        return internalGetConst().getMap().containsKey(key);
      }
      /**
       * Use {@link #getConstMap()} instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, java.lang.Integer> getConst() {
        return getConstMap();
      }
      /**
       * <code>map&lt;string, uint32&gt; const = 2;</code>
       */

      public java.util.Map<java.lang.String, java.lang.Integer> getConstMap() {
        return internalGetConst().getMap();
      }
      /**
       * <code>map&lt;string, uint32&gt; const = 2;</code>
       */

      public int getConstOrDefault(
          java.lang.String key,
          int defaultValue) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        java.util.Map<java.lang.String, java.lang.Integer> map =
            internalGetConst().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <code>map&lt;string, uint32&gt; const = 2;</code>
       */

      public int getConstOrThrow(
          java.lang.String key) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        java.util.Map<java.lang.String, java.lang.Integer> map =
            internalGetConst().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }

      public Builder clearConst() {
        internalGetMutableConst().getMutableMap()
            .clear();
        return this;
      }
      /**
       * <code>map&lt;string, uint32&gt; const = 2;</code>
       */

      public Builder removeConst(
          java.lang.String key) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        internalGetMutableConst().getMutableMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, java.lang.Integer>
      getMutableConst() {
        return internalGetMutableConst().getMutableMap();
      }
      /**
       * <code>map&lt;string, uint32&gt; const = 2;</code>
       */
      public Builder putConst(
          java.lang.String key,
          int value) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        
        internalGetMutableConst().getMutableMap()
            .put(key, value);
        return this;
      }
      /**
       * <code>map&lt;string, uint32&gt; const = 2;</code>
       */

      public Builder putAllConst(
          java.util.Map<java.lang.String, java.lang.Integer> values) {
        internalGetMutableConst().getMutableMap()
            .putAll(values);
        return this;
      }

      private com.google.protobuf.MapField<
          java.lang.String, java.lang.Integer> private_;
      private com.google.protobuf.MapField<java.lang.String, java.lang.Integer>
      internalGetPrivate() {
        if (private_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              PrivateDefaultEntryHolder.defaultEntry);
        }
        return private_;
      }
      private com.google.protobuf.MapField<java.lang.String, java.lang.Integer>
      internalGetMutablePrivate() {
        onChanged();;
        if (private_ == null) {
          private_ = com.google.protobuf.MapField.newMapField(
              PrivateDefaultEntryHolder.defaultEntry);
        }
        if (!private_.isMutable()) {
          private_ = private_.copy();
        }
        return private_;
      }

      public int getPrivateCount() {
        return internalGetPrivate().getMap().size();
      }
      /**
       * <code>map&lt;string, uint32&gt; private = 3;</code>
       */

      public boolean containsPrivate(
          java.lang.String key) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        return internalGetPrivate().getMap().containsKey(key);
      }
      /**
       * Use {@link #getPrivateMap()} instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, java.lang.Integer> getPrivate() {
        return getPrivateMap();
      }
      /**
       * <code>map&lt;string, uint32&gt; private = 3;</code>
       */

      public java.util.Map<java.lang.String, java.lang.Integer> getPrivateMap() {
        return internalGetPrivate().getMap();
      }
      /**
       * <code>map&lt;string, uint32&gt; private = 3;</code>
       */

      public int getPrivateOrDefault(
          java.lang.String key,
          int defaultValue) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        java.util.Map<java.lang.String, java.lang.Integer> map =
            internalGetPrivate().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <code>map&lt;string, uint32&gt; private = 3;</code>
       */

      public int getPrivateOrThrow(
          java.lang.String key) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        java.util.Map<java.lang.String, java.lang.Integer> map =
            internalGetPrivate().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }

      public Builder clearPrivate() {
        internalGetMutablePrivate().getMutableMap()
            .clear();
        return this;
      }
      /**
       * <code>map&lt;string, uint32&gt; private = 3;</code>
       */

      public Builder removePrivate(
          java.lang.String key) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        internalGetMutablePrivate().getMutableMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, java.lang.Integer>
      getMutablePrivate() {
        return internalGetMutablePrivate().getMutableMap();
      }
      /**
       * <code>map&lt;string, uint32&gt; private = 3;</code>
       */
      public Builder putPrivate(
          java.lang.String key,
          int value) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        
        internalGetMutablePrivate().getMutableMap()
            .put(key, value);
        return this;
      }
      /**
       * <code>map&lt;string, uint32&gt; private = 3;</code>
       */

      public Builder putAllPrivate(
          java.util.Map<java.lang.String, java.lang.Integer> values) {
        internalGetMutablePrivate().getMutableMap()
            .putAll(values);
        return this;
      }

      private com.google.protobuf.MapField<
          java.lang.String, java.lang.Integer> class__;
      private com.google.protobuf.MapField<java.lang.String, java.lang.Integer>
      internalGetClass_() {
        if (class__ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              Class_DefaultEntryHolder.defaultEntry);
        }
        return class__;
      }
      private com.google.protobuf.MapField<java.lang.String, java.lang.Integer>
      internalGetMutableClass_() {
        onChanged();;
        if (class__ == null) {
          class__ = com.google.protobuf.MapField.newMapField(
              Class_DefaultEntryHolder.defaultEntry);
        }
        if (!class__.isMutable()) {
          class__ = class__.copy();
        }
        return class__;
      }

      public int getClass_Count() {
        return internalGetClass_().getMap().size();
      }
      /**
       * <code>map&lt;string, uint32&gt; class = 4;</code>
       */

      public boolean containsClass_(
          java.lang.String key) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        return internalGetClass_().getMap().containsKey(key);
      }
      /**
       * Use {@link #getClass_Map()} instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, java.lang.Integer> getClass_() {
        return getClass_Map();
      }
      /**
       * <code>map&lt;string, uint32&gt; class = 4;</code>
       */

      public java.util.Map<java.lang.String, java.lang.Integer> getClass_Map() {
        return internalGetClass_().getMap();
      }
      /**
       * <code>map&lt;string, uint32&gt; class = 4;</code>
       */

      public int getClass_OrDefault(
          java.lang.String key,
          int defaultValue) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        java.util.Map<java.lang.String, java.lang.Integer> map =
            internalGetClass_().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <code>map&lt;string, uint32&gt; class = 4;</code>
       */

      public int getClass_OrThrow(
          java.lang.String key) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        java.util.Map<java.lang.String, java.lang.Integer> map =
            internalGetClass_().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }

      public Builder clearClass_() {
        internalGetMutableClass_().getMutableMap()
            .clear();
        return this;
      }
      /**
       * <code>map&lt;string, uint32&gt; class = 4;</code>
       */

      public Builder removeClass_(
          java.lang.String key) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        internalGetMutableClass_().getMutableMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, java.lang.Integer>
      getMutableClass_() {
        return internalGetMutableClass_().getMutableMap();
      }
      /**
       * <code>map&lt;string, uint32&gt; class = 4;</code>
       */
      public Builder putClass_(
          java.lang.String key,
          int value) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        
        internalGetMutableClass_().getMutableMap()
            .put(key, value);
        return this;
      }
      /**
       * <code>map&lt;string, uint32&gt; class = 4;</code>
       */

      public Builder putAllClass_(
          java.util.Map<java.lang.String, java.lang.Integer> values) {
        internalGetMutableClass_().getMutableMap()
            .putAll(values);
        return this;
      }

      private com.google.protobuf.MapField<
          java.lang.String, java.lang.Integer> int_;
      private com.google.protobuf.MapField<java.lang.String, java.lang.Integer>
      internalGetInt() {
        if (int_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              IntDefaultEntryHolder.defaultEntry);
        }
        return int_;
      }
      private com.google.protobuf.MapField<java.lang.String, java.lang.Integer>
      internalGetMutableInt() {
        onChanged();;
        if (int_ == null) {
          int_ = com.google.protobuf.MapField.newMapField(
              IntDefaultEntryHolder.defaultEntry);
        }
        if (!int_.isMutable()) {
          int_ = int_.copy();
        }
        return int_;
      }

      public int getIntCount() {
        return internalGetInt().getMap().size();
      }
      /**
       * <code>map&lt;string, uint32&gt; int = 5;</code>
       */

      public boolean containsInt(
          java.lang.String key) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        return internalGetInt().getMap().containsKey(key);
      }
      /**
       * Use {@link #getIntMap()} instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, java.lang.Integer> getInt() {
        return getIntMap();
      }
      /**
       * <code>map&lt;string, uint32&gt; int = 5;</code>
       */

      public java.util.Map<java.lang.String, java.lang.Integer> getIntMap() {
        return internalGetInt().getMap();
      }
      /**
       * <code>map&lt;string, uint32&gt; int = 5;</code>
       */

      public int getIntOrDefault(
          java.lang.String key,
          int defaultValue) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        java.util.Map<java.lang.String, java.lang.Integer> map =
            internalGetInt().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <code>map&lt;string, uint32&gt; int = 5;</code>
       */

      public int getIntOrThrow(
          java.lang.String key) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        java.util.Map<java.lang.String, java.lang.Integer> map =
            internalGetInt().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }

      public Builder clearInt() {
        internalGetMutableInt().getMutableMap()
            .clear();
        return this;
      }
      /**
       * <code>map&lt;string, uint32&gt; int = 5;</code>
       */

      public Builder removeInt(
          java.lang.String key) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        internalGetMutableInt().getMutableMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, java.lang.Integer>
      getMutableInt() {
        return internalGetMutableInt().getMutableMap();
      }
      /**
       * <code>map&lt;string, uint32&gt; int = 5;</code>
       */
      public Builder putInt(
          java.lang.String key,
          int value) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        
        internalGetMutableInt().getMutableMap()
            .put(key, value);
        return this;
      }
      /**
       * <code>map&lt;string, uint32&gt; int = 5;</code>
       */

      public Builder putAllInt(
          java.util.Map<java.lang.String, java.lang.Integer> values) {
        internalGetMutableInt().getMutableMap()
            .putAll(values);
        return this;
      }

      private com.google.protobuf.MapField<
          java.lang.String, java.lang.Integer> void_;
      private com.google.protobuf.MapField<java.lang.String, java.lang.Integer>
      internalGetVoid() {
        if (void_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              VoidDefaultEntryHolder.defaultEntry);
        }
        return void_;
      }
      private com.google.protobuf.MapField<java.lang.String, java.lang.Integer>
      internalGetMutableVoid() {
        onChanged();;
        if (void_ == null) {
          void_ = com.google.protobuf.MapField.newMapField(
              VoidDefaultEntryHolder.defaultEntry);
        }
        if (!void_.isMutable()) {
          void_ = void_.copy();
        }
        return void_;
      }

      public int getVoidCount() {
        return internalGetVoid().getMap().size();
      }
      /**
       * <code>map&lt;string, uint32&gt; void = 6;</code>
       */

      public boolean containsVoid(
          java.lang.String key) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        return internalGetVoid().getMap().containsKey(key);
      }
      /**
       * Use {@link #getVoidMap()} instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, java.lang.Integer> getVoid() {
        return getVoidMap();
      }
      /**
       * <code>map&lt;string, uint32&gt; void = 6;</code>
       */

      public java.util.Map<java.lang.String, java.lang.Integer> getVoidMap() {
        return internalGetVoid().getMap();
      }
      /**
       * <code>map&lt;string, uint32&gt; void = 6;</code>
       */

      public int getVoidOrDefault(
          java.lang.String key,
          int defaultValue) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        java.util.Map<java.lang.String, java.lang.Integer> map =
            internalGetVoid().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <code>map&lt;string, uint32&gt; void = 6;</code>
       */

      public int getVoidOrThrow(
          java.lang.String key) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        java.util.Map<java.lang.String, java.lang.Integer> map =
            internalGetVoid().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }

      public Builder clearVoid() {
        internalGetMutableVoid().getMutableMap()
            .clear();
        return this;
      }
      /**
       * <code>map&lt;string, uint32&gt; void = 6;</code>
       */

      public Builder removeVoid(
          java.lang.String key) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        internalGetMutableVoid().getMutableMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, java.lang.Integer>
      getMutableVoid() {
        return internalGetMutableVoid().getMutableMap();
      }
      /**
       * <code>map&lt;string, uint32&gt; void = 6;</code>
       */
      public Builder putVoid(
          java.lang.String key,
          int value) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        
        internalGetMutableVoid().getMutableMap()
            .put(key, value);
        return this;
      }
      /**
       * <code>map&lt;string, uint32&gt; void = 6;</code>
       */

      public Builder putAllVoid(
          java.util.Map<java.lang.String, java.lang.Integer> values) {
        internalGetMutableVoid().getMutableMap()
            .putAll(values);
        return this;
      }

      private com.google.protobuf.MapField<
          java.lang.String, java.lang.Integer> string_;
      private com.google.protobuf.MapField<java.lang.String, java.lang.Integer>
      internalGetString() {
        if (string_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              StringDefaultEntryHolder.defaultEntry);
        }
        return string_;
      }
      private com.google.protobuf.MapField<java.lang.String, java.lang.Integer>
      internalGetMutableString() {
        onChanged();;
        if (string_ == null) {
          string_ = com.google.protobuf.MapField.newMapField(
              StringDefaultEntryHolder.defaultEntry);
        }
        if (!string_.isMutable()) {
          string_ = string_.copy();
        }
        return string_;
      }

      public int getStringCount() {
        return internalGetString().getMap().size();
      }
      /**
       * <pre>
       * These are also proto keywords
       * </pre>
       *
       * <code>map&lt;string, uint32&gt; string = 7;</code>
       */

      public boolean containsString(
          java.lang.String key) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        return internalGetString().getMap().containsKey(key);
      }
      /**
       * Use {@link #getStringMap()} instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, java.lang.Integer> getString() {
        return getStringMap();
      }
      /**
       * <pre>
       * These are also proto keywords
       * </pre>
       *
       * <code>map&lt;string, uint32&gt; string = 7;</code>
       */

      public java.util.Map<java.lang.String, java.lang.Integer> getStringMap() {
        return internalGetString().getMap();
      }
      /**
       * <pre>
       * These are also proto keywords
       * </pre>
       *
       * <code>map&lt;string, uint32&gt; string = 7;</code>
       */

      public int getStringOrDefault(
          java.lang.String key,
          int defaultValue) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        java.util.Map<java.lang.String, java.lang.Integer> map =
            internalGetString().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <pre>
       * These are also proto keywords
       * </pre>
       *
       * <code>map&lt;string, uint32&gt; string = 7;</code>
       */

      public int getStringOrThrow(
          java.lang.String key) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        java.util.Map<java.lang.String, java.lang.Integer> map =
            internalGetString().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }

      public Builder clearString() {
        internalGetMutableString().getMutableMap()
            .clear();
        return this;
      }
      /**
       * <pre>
       * These are also proto keywords
       * </pre>
       *
       * <code>map&lt;string, uint32&gt; string = 7;</code>
       */

      public Builder removeString(
          java.lang.String key) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        internalGetMutableString().getMutableMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, java.lang.Integer>
      getMutableString() {
        return internalGetMutableString().getMutableMap();
      }
      /**
       * <pre>
       * These are also proto keywords
       * </pre>
       *
       * <code>map&lt;string, uint32&gt; string = 7;</code>
       */
      public Builder putString(
          java.lang.String key,
          int value) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        
        internalGetMutableString().getMutableMap()
            .put(key, value);
        return this;
      }
      /**
       * <pre>
       * These are also proto keywords
       * </pre>
       *
       * <code>map&lt;string, uint32&gt; string = 7;</code>
       */

      public Builder putAllString(
          java.util.Map<java.lang.String, java.lang.Integer> values) {
        internalGetMutableString().getMutableMap()
            .putAll(values);
        return this;
      }

      private com.google.protobuf.MapField<
          java.lang.String, java.lang.Integer> package_;
      private com.google.protobuf.MapField<java.lang.String, java.lang.Integer>
      internalGetPackage() {
        if (package_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              PackageDefaultEntryHolder.defaultEntry);
        }
        return package_;
      }
      private com.google.protobuf.MapField<java.lang.String, java.lang.Integer>
      internalGetMutablePackage() {
        onChanged();;
        if (package_ == null) {
          package_ = com.google.protobuf.MapField.newMapField(
              PackageDefaultEntryHolder.defaultEntry);
        }
        if (!package_.isMutable()) {
          package_ = package_.copy();
        }
        return package_;
      }

      public int getPackageCount() {
        return internalGetPackage().getMap().size();
      }
      /**
       * <code>map&lt;string, uint32&gt; package = 8;</code>
       */

      public boolean containsPackage(
          java.lang.String key) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        return internalGetPackage().getMap().containsKey(key);
      }
      /**
       * Use {@link #getPackageMap()} instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, java.lang.Integer> getPackage() {
        return getPackageMap();
      }
      /**
       * <code>map&lt;string, uint32&gt; package = 8;</code>
       */

      public java.util.Map<java.lang.String, java.lang.Integer> getPackageMap() {
        return internalGetPackage().getMap();
      }
      /**
       * <code>map&lt;string, uint32&gt; package = 8;</code>
       */

      public int getPackageOrDefault(
          java.lang.String key,
          int defaultValue) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        java.util.Map<java.lang.String, java.lang.Integer> map =
            internalGetPackage().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <code>map&lt;string, uint32&gt; package = 8;</code>
       */

      public int getPackageOrThrow(
          java.lang.String key) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        java.util.Map<java.lang.String, java.lang.Integer> map =
            internalGetPackage().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }

      public Builder clearPackage() {
        internalGetMutablePackage().getMutableMap()
            .clear();
        return this;
      }
      /**
       * <code>map&lt;string, uint32&gt; package = 8;</code>
       */

      public Builder removePackage(
          java.lang.String key) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        internalGetMutablePackage().getMutableMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, java.lang.Integer>
      getMutablePackage() {
        return internalGetMutablePackage().getMutableMap();
      }
      /**
       * <code>map&lt;string, uint32&gt; package = 8;</code>
       */
      public Builder putPackage(
          java.lang.String key,
          int value) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        
        internalGetMutablePackage().getMutableMap()
            .put(key, value);
        return this;
      }
      /**
       * <code>map&lt;string, uint32&gt; package = 8;</code>
       */

      public Builder putAllPackage(
          java.util.Map<java.lang.String, java.lang.Integer> values) {
        internalGetMutablePackage().getMutableMap()
            .putAll(values);
        return this;
      }

      private com.google.protobuf.MapField<
          java.lang.String, java.lang.Integer> enum_;
      private com.google.protobuf.MapField<java.lang.String, java.lang.Integer>
      internalGetEnum() {
        if (enum_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              EnumDefaultEntryHolder.defaultEntry);
        }
        return enum_;
      }
      private com.google.protobuf.MapField<java.lang.String, java.lang.Integer>
      internalGetMutableEnum() {
        onChanged();;
        if (enum_ == null) {
          enum_ = com.google.protobuf.MapField.newMapField(
              EnumDefaultEntryHolder.defaultEntry);
        }
        if (!enum_.isMutable()) {
          enum_ = enum_.copy();
        }
        return enum_;
      }

      public int getEnumCount() {
        return internalGetEnum().getMap().size();
      }
      /**
       * <pre>
       * Most recent Java reserved word
       * </pre>
       *
       * <code>map&lt;string, uint32&gt; enum = 9;</code>
       */

      public boolean containsEnum(
          java.lang.String key) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        return internalGetEnum().getMap().containsKey(key);
      }
      /**
       * Use {@link #getEnumMap()} instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, java.lang.Integer> getEnum() {
        return getEnumMap();
      }
      /**
       * <pre>
       * Most recent Java reserved word
       * </pre>
       *
       * <code>map&lt;string, uint32&gt; enum = 9;</code>
       */

      public java.util.Map<java.lang.String, java.lang.Integer> getEnumMap() {
        return internalGetEnum().getMap();
      }
      /**
       * <pre>
       * Most recent Java reserved word
       * </pre>
       *
       * <code>map&lt;string, uint32&gt; enum = 9;</code>
       */

      public int getEnumOrDefault(
          java.lang.String key,
          int defaultValue) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        java.util.Map<java.lang.String, java.lang.Integer> map =
            internalGetEnum().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <pre>
       * Most recent Java reserved word
       * </pre>
       *
       * <code>map&lt;string, uint32&gt; enum = 9;</code>
       */

      public int getEnumOrThrow(
          java.lang.String key) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        java.util.Map<java.lang.String, java.lang.Integer> map =
            internalGetEnum().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }

      public Builder clearEnum() {
        internalGetMutableEnum().getMutableMap()
            .clear();
        return this;
      }
      /**
       * <pre>
       * Most recent Java reserved word
       * </pre>
       *
       * <code>map&lt;string, uint32&gt; enum = 9;</code>
       */

      public Builder removeEnum(
          java.lang.String key) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        internalGetMutableEnum().getMutableMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, java.lang.Integer>
      getMutableEnum() {
        return internalGetMutableEnum().getMutableMap();
      }
      /**
       * <pre>
       * Most recent Java reserved word
       * </pre>
       *
       * <code>map&lt;string, uint32&gt; enum = 9;</code>
       */
      public Builder putEnum(
          java.lang.String key,
          int value) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        
        internalGetMutableEnum().getMutableMap()
            .put(key, value);
        return this;
      }
      /**
       * <pre>
       * Most recent Java reserved word
       * </pre>
       *
       * <code>map&lt;string, uint32&gt; enum = 9;</code>
       */

      public Builder putAllEnum(
          java.util.Map<java.lang.String, java.lang.Integer> values) {
        internalGetMutableEnum().getMutableMap()
            .putAll(values);
        return this;
      }

      private com.google.protobuf.MapField<
          java.lang.String, java.lang.Integer> null_;
      private com.google.protobuf.MapField<java.lang.String, java.lang.Integer>
      internalGetNull() {
        if (null_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              NullDefaultEntryHolder.defaultEntry);
        }
        return null_;
      }
      private com.google.protobuf.MapField<java.lang.String, java.lang.Integer>
      internalGetMutableNull() {
        onChanged();;
        if (null_ == null) {
          null_ = com.google.protobuf.MapField.newMapField(
              NullDefaultEntryHolder.defaultEntry);
        }
        if (!null_.isMutable()) {
          null_ = null_.copy();
        }
        return null_;
      }

      public int getNullCount() {
        return internalGetNull().getMap().size();
      }
      /**
       * <pre>
       * null is not a 'reserved word' per se but as a literal needs similar care
       * </pre>
       *
       * <code>map&lt;string, uint32&gt; null = 10;</code>
       */

      public boolean containsNull(
          java.lang.String key) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        return internalGetNull().getMap().containsKey(key);
      }
      /**
       * Use {@link #getNullMap()} instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, java.lang.Integer> getNull() {
        return getNullMap();
      }
      /**
       * <pre>
       * null is not a 'reserved word' per se but as a literal needs similar care
       * </pre>
       *
       * <code>map&lt;string, uint32&gt; null = 10;</code>
       */

      public java.util.Map<java.lang.String, java.lang.Integer> getNullMap() {
        return internalGetNull().getMap();
      }
      /**
       * <pre>
       * null is not a 'reserved word' per se but as a literal needs similar care
       * </pre>
       *
       * <code>map&lt;string, uint32&gt; null = 10;</code>
       */

      public int getNullOrDefault(
          java.lang.String key,
          int defaultValue) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        java.util.Map<java.lang.String, java.lang.Integer> map =
            internalGetNull().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <pre>
       * null is not a 'reserved word' per se but as a literal needs similar care
       * </pre>
       *
       * <code>map&lt;string, uint32&gt; null = 10;</code>
       */

      public int getNullOrThrow(
          java.lang.String key) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        java.util.Map<java.lang.String, java.lang.Integer> map =
            internalGetNull().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }

      public Builder clearNull() {
        internalGetMutableNull().getMutableMap()
            .clear();
        return this;
      }
      /**
       * <pre>
       * null is not a 'reserved word' per se but as a literal needs similar care
       * </pre>
       *
       * <code>map&lt;string, uint32&gt; null = 10;</code>
       */

      public Builder removeNull(
          java.lang.String key) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        internalGetMutableNull().getMutableMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, java.lang.Integer>
      getMutableNull() {
        return internalGetMutableNull().getMutableMap();
      }
      /**
       * <pre>
       * null is not a 'reserved word' per se but as a literal needs similar care
       * </pre>
       *
       * <code>map&lt;string, uint32&gt; null = 10;</code>
       */
      public Builder putNull(
          java.lang.String key,
          int value) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        
        internalGetMutableNull().getMutableMap()
            .put(key, value);
        return this;
      }
      /**
       * <pre>
       * null is not a 'reserved word' per se but as a literal needs similar care
       * </pre>
       *
       * <code>map&lt;string, uint32&gt; null = 10;</code>
       */

      public Builder putAllNull(
          java.util.Map<java.lang.String, java.lang.Integer> values) {
        internalGetMutableNull().getMutableMap()
            .putAll(values);
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:map_test.ReservedAsMapField)
    }

    // @@protoc_insertion_point(class_scope:map_test.ReservedAsMapField)
    private static final map_test.MapTestProto.ReservedAsMapField DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new map_test.MapTestProto.ReservedAsMapField();
    }

    public static map_test.MapTestProto.ReservedAsMapField getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<ReservedAsMapField>
        PARSER = new com.google.protobuf.AbstractParser<ReservedAsMapField>() {
      public ReservedAsMapField parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new ReservedAsMapField(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<ReservedAsMapField> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ReservedAsMapField> getParserForType() {
      return PARSER;
    }

    public map_test.MapTestProto.ReservedAsMapField getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ReservedAsMapFieldWithEnumValueOrBuilder extends
      // @@protoc_insertion_point(interface_extends:map_test.ReservedAsMapFieldWithEnumValue)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>map&lt;string, .map_test.ReservedAsMapFieldWithEnumValue.SampleEnum&gt; if = 1;</code>
     */
    int getIfCount();
    /**
     * <code>map&lt;string, .map_test.ReservedAsMapFieldWithEnumValue.SampleEnum&gt; if = 1;</code>
     */
    boolean containsIf(
        java.lang.String key);
    /**
     * Use {@link #getIfMap()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.String, map_test.MapTestProto.ReservedAsMapFieldWithEnumValue.SampleEnum>
    getIf();
    /**
     * <code>map&lt;string, .map_test.ReservedAsMapFieldWithEnumValue.SampleEnum&gt; if = 1;</code>
     */
    java.util.Map<java.lang.String, map_test.MapTestProto.ReservedAsMapFieldWithEnumValue.SampleEnum>
    getIfMap();
    /**
     * <code>map&lt;string, .map_test.ReservedAsMapFieldWithEnumValue.SampleEnum&gt; if = 1;</code>
     */
    map_test.MapTestProto.ReservedAsMapFieldWithEnumValue.SampleEnum getIfOrDefault(
        java.lang.String key,
        map_test.MapTestProto.ReservedAsMapFieldWithEnumValue.SampleEnum defaultValue);
    /**
     * <code>map&lt;string, .map_test.ReservedAsMapFieldWithEnumValue.SampleEnum&gt; if = 1;</code>
     */
    map_test.MapTestProto.ReservedAsMapFieldWithEnumValue.SampleEnum getIfOrThrow(
        java.lang.String key);
    /**
     * Use {@link #getIfValueMap()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.String, java.lang.Integer>
    getIfValue();
    /**
     * <code>map&lt;string, .map_test.ReservedAsMapFieldWithEnumValue.SampleEnum&gt; if = 1;</code>
     */
    java.util.Map<java.lang.String, java.lang.Integer>
    getIfValueMap();
    /**
     * <code>map&lt;string, .map_test.ReservedAsMapFieldWithEnumValue.SampleEnum&gt; if = 1;</code>
     */

    int getIfValueOrDefault(
        java.lang.String key,
        int defaultValue);
    /**
     * <code>map&lt;string, .map_test.ReservedAsMapFieldWithEnumValue.SampleEnum&gt; if = 1;</code>
     */

    int getIfValueOrThrow(
        java.lang.String key);

    /**
     * <code>map&lt;string, .map_test.ReservedAsMapFieldWithEnumValue.SampleEnum&gt; const = 2;</code>
     */
    int getConstCount();
    /**
     * <code>map&lt;string, .map_test.ReservedAsMapFieldWithEnumValue.SampleEnum&gt; const = 2;</code>
     */
    boolean containsConst(
        java.lang.String key);
    /**
     * Use {@link #getConstMap()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.String, map_test.MapTestProto.ReservedAsMapFieldWithEnumValue.SampleEnum>
    getConst();
    /**
     * <code>map&lt;string, .map_test.ReservedAsMapFieldWithEnumValue.SampleEnum&gt; const = 2;</code>
     */
    java.util.Map<java.lang.String, map_test.MapTestProto.ReservedAsMapFieldWithEnumValue.SampleEnum>
    getConstMap();
    /**
     * <code>map&lt;string, .map_test.ReservedAsMapFieldWithEnumValue.SampleEnum&gt; const = 2;</code>
     */
    map_test.MapTestProto.ReservedAsMapFieldWithEnumValue.SampleEnum getConstOrDefault(
        java.lang.String key,
        map_test.MapTestProto.ReservedAsMapFieldWithEnumValue.SampleEnum defaultValue);
    /**
     * <code>map&lt;string, .map_test.ReservedAsMapFieldWithEnumValue.SampleEnum&gt; const = 2;</code>
     */
    map_test.MapTestProto.ReservedAsMapFieldWithEnumValue.SampleEnum getConstOrThrow(
        java.lang.String key);
    /**
     * Use {@link #getConstValueMap()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.String, java.lang.Integer>
    getConstValue();
    /**
     * <code>map&lt;string, .map_test.ReservedAsMapFieldWithEnumValue.SampleEnum&gt; const = 2;</code>
     */
    java.util.Map<java.lang.String, java.lang.Integer>
    getConstValueMap();
    /**
     * <code>map&lt;string, .map_test.ReservedAsMapFieldWithEnumValue.SampleEnum&gt; const = 2;</code>
     */

    int getConstValueOrDefault(
        java.lang.String key,
        int defaultValue);
    /**
     * <code>map&lt;string, .map_test.ReservedAsMapFieldWithEnumValue.SampleEnum&gt; const = 2;</code>
     */

    int getConstValueOrThrow(
        java.lang.String key);

    /**
     * <code>map&lt;string, .map_test.ReservedAsMapFieldWithEnumValue.SampleEnum&gt; private = 3;</code>
     */
    int getPrivateCount();
    /**
     * <code>map&lt;string, .map_test.ReservedAsMapFieldWithEnumValue.SampleEnum&gt; private = 3;</code>
     */
    boolean containsPrivate(
        java.lang.String key);
    /**
     * Use {@link #getPrivateMap()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.String, map_test.MapTestProto.ReservedAsMapFieldWithEnumValue.SampleEnum>
    getPrivate();
    /**
     * <code>map&lt;string, .map_test.ReservedAsMapFieldWithEnumValue.SampleEnum&gt; private = 3;</code>
     */
    java.util.Map<java.lang.String, map_test.MapTestProto.ReservedAsMapFieldWithEnumValue.SampleEnum>
    getPrivateMap();
    /**
     * <code>map&lt;string, .map_test.ReservedAsMapFieldWithEnumValue.SampleEnum&gt; private = 3;</code>
     */
    map_test.MapTestProto.ReservedAsMapFieldWithEnumValue.SampleEnum getPrivateOrDefault(
        java.lang.String key,
        map_test.MapTestProto.ReservedAsMapFieldWithEnumValue.SampleEnum defaultValue);
    /**
     * <code>map&lt;string, .map_test.ReservedAsMapFieldWithEnumValue.SampleEnum&gt; private = 3;</code>
     */
    map_test.MapTestProto.ReservedAsMapFieldWithEnumValue.SampleEnum getPrivateOrThrow(
        java.lang.String key);
    /**
     * Use {@link #getPrivateValueMap()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.String, java.lang.Integer>
    getPrivateValue();
    /**
     * <code>map&lt;string, .map_test.ReservedAsMapFieldWithEnumValue.SampleEnum&gt; private = 3;</code>
     */
    java.util.Map<java.lang.String, java.lang.Integer>
    getPrivateValueMap();
    /**
     * <code>map&lt;string, .map_test.ReservedAsMapFieldWithEnumValue.SampleEnum&gt; private = 3;</code>
     */

    int getPrivateValueOrDefault(
        java.lang.String key,
        int defaultValue);
    /**
     * <code>map&lt;string, .map_test.ReservedAsMapFieldWithEnumValue.SampleEnum&gt; private = 3;</code>
     */

    int getPrivateValueOrThrow(
        java.lang.String key);

    /**
     * <code>map&lt;string, .map_test.ReservedAsMapFieldWithEnumValue.SampleEnum&gt; class = 4;</code>
     */
    int getClass_Count();
    /**
     * <code>map&lt;string, .map_test.ReservedAsMapFieldWithEnumValue.SampleEnum&gt; class = 4;</code>
     */
    boolean containsClass_(
        java.lang.String key);
    /**
     * Use {@link #getClass_Map()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.String, map_test.MapTestProto.ReservedAsMapFieldWithEnumValue.SampleEnum>
    getClass_();
    /**
     * <code>map&lt;string, .map_test.ReservedAsMapFieldWithEnumValue.SampleEnum&gt; class = 4;</code>
     */
    java.util.Map<java.lang.String, map_test.MapTestProto.ReservedAsMapFieldWithEnumValue.SampleEnum>
    getClass_Map();
    /**
     * <code>map&lt;string, .map_test.ReservedAsMapFieldWithEnumValue.SampleEnum&gt; class = 4;</code>
     */
    map_test.MapTestProto.ReservedAsMapFieldWithEnumValue.SampleEnum getClass_OrDefault(
        java.lang.String key,
        map_test.MapTestProto.ReservedAsMapFieldWithEnumValue.SampleEnum defaultValue);
    /**
     * <code>map&lt;string, .map_test.ReservedAsMapFieldWithEnumValue.SampleEnum&gt; class = 4;</code>
     */
    map_test.MapTestProto.ReservedAsMapFieldWithEnumValue.SampleEnum getClass_OrThrow(
        java.lang.String key);
    /**
     * Use {@link #getClass_ValueMap()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.String, java.lang.Integer>
    getClass_Value();
    /**
     * <code>map&lt;string, .map_test.ReservedAsMapFieldWithEnumValue.SampleEnum&gt; class = 4;</code>
     */
    java.util.Map<java.lang.String, java.lang.Integer>
    getClass_ValueMap();
    /**
     * <code>map&lt;string, .map_test.ReservedAsMapFieldWithEnumValue.SampleEnum&gt; class = 4;</code>
     */

    int getClass_ValueOrDefault(
        java.lang.String key,
        int defaultValue);
    /**
     * <code>map&lt;string, .map_test.ReservedAsMapFieldWithEnumValue.SampleEnum&gt; class = 4;</code>
     */

    int getClass_ValueOrThrow(
        java.lang.String key);

    /**
     * <code>map&lt;string, .map_test.ReservedAsMapFieldWithEnumValue.SampleEnum&gt; int = 5;</code>
     */
    int getIntCount();
    /**
     * <code>map&lt;string, .map_test.ReservedAsMapFieldWithEnumValue.SampleEnum&gt; int = 5;</code>
     */
    boolean containsInt(
        java.lang.String key);
    /**
     * Use {@link #getIntMap()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.String, map_test.MapTestProto.ReservedAsMapFieldWithEnumValue.SampleEnum>
    getInt();
    /**
     * <code>map&lt;string, .map_test.ReservedAsMapFieldWithEnumValue.SampleEnum&gt; int = 5;</code>
     */
    java.util.Map<java.lang.String, map_test.MapTestProto.ReservedAsMapFieldWithEnumValue.SampleEnum>
    getIntMap();
    /**
     * <code>map&lt;string, .map_test.ReservedAsMapFieldWithEnumValue.SampleEnum&gt; int = 5;</code>
     */
    map_test.MapTestProto.ReservedAsMapFieldWithEnumValue.SampleEnum getIntOrDefault(
        java.lang.String key,
        map_test.MapTestProto.ReservedAsMapFieldWithEnumValue.SampleEnum defaultValue);
    /**
     * <code>map&lt;string, .map_test.ReservedAsMapFieldWithEnumValue.SampleEnum&gt; int = 5;</code>
     */
    map_test.MapTestProto.ReservedAsMapFieldWithEnumValue.SampleEnum getIntOrThrow(
        java.lang.String key);
    /**
     * Use {@link #getIntValueMap()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.String, java.lang.Integer>
    getIntValue();
    /**
     * <code>map&lt;string, .map_test.ReservedAsMapFieldWithEnumValue.SampleEnum&gt; int = 5;</code>
     */
    java.util.Map<java.lang.String, java.lang.Integer>
    getIntValueMap();
    /**
     * <code>map&lt;string, .map_test.ReservedAsMapFieldWithEnumValue.SampleEnum&gt; int = 5;</code>
     */

    int getIntValueOrDefault(
        java.lang.String key,
        int defaultValue);
    /**
     * <code>map&lt;string, .map_test.ReservedAsMapFieldWithEnumValue.SampleEnum&gt; int = 5;</code>
     */

    int getIntValueOrThrow(
        java.lang.String key);

    /**
     * <code>map&lt;string, .map_test.ReservedAsMapFieldWithEnumValue.SampleEnum&gt; void = 6;</code>
     */
    int getVoidCount();
    /**
     * <code>map&lt;string, .map_test.ReservedAsMapFieldWithEnumValue.SampleEnum&gt; void = 6;</code>
     */
    boolean containsVoid(
        java.lang.String key);
    /**
     * Use {@link #getVoidMap()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.String, map_test.MapTestProto.ReservedAsMapFieldWithEnumValue.SampleEnum>
    getVoid();
    /**
     * <code>map&lt;string, .map_test.ReservedAsMapFieldWithEnumValue.SampleEnum&gt; void = 6;</code>
     */
    java.util.Map<java.lang.String, map_test.MapTestProto.ReservedAsMapFieldWithEnumValue.SampleEnum>
    getVoidMap();
    /**
     * <code>map&lt;string, .map_test.ReservedAsMapFieldWithEnumValue.SampleEnum&gt; void = 6;</code>
     */
    map_test.MapTestProto.ReservedAsMapFieldWithEnumValue.SampleEnum getVoidOrDefault(
        java.lang.String key,
        map_test.MapTestProto.ReservedAsMapFieldWithEnumValue.SampleEnum defaultValue);
    /**
     * <code>map&lt;string, .map_test.ReservedAsMapFieldWithEnumValue.SampleEnum&gt; void = 6;</code>
     */
    map_test.MapTestProto.ReservedAsMapFieldWithEnumValue.SampleEnum getVoidOrThrow(
        java.lang.String key);
    /**
     * Use {@link #getVoidValueMap()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.String, java.lang.Integer>
    getVoidValue();
    /**
     * <code>map&lt;string, .map_test.ReservedAsMapFieldWithEnumValue.SampleEnum&gt; void = 6;</code>
     */
    java.util.Map<java.lang.String, java.lang.Integer>
    getVoidValueMap();
    /**
     * <code>map&lt;string, .map_test.ReservedAsMapFieldWithEnumValue.SampleEnum&gt; void = 6;</code>
     */

    int getVoidValueOrDefault(
        java.lang.String key,
        int defaultValue);
    /**
     * <code>map&lt;string, .map_test.ReservedAsMapFieldWithEnumValue.SampleEnum&gt; void = 6;</code>
     */

    int getVoidValueOrThrow(
        java.lang.String key);

    /**
     * <pre>
     * These are also proto keywords
     * </pre>
     *
     * <code>map&lt;string, .map_test.ReservedAsMapFieldWithEnumValue.SampleEnum&gt; string = 7;</code>
     */
    int getStringCount();
    /**
     * <pre>
     * These are also proto keywords
     * </pre>
     *
     * <code>map&lt;string, .map_test.ReservedAsMapFieldWithEnumValue.SampleEnum&gt; string = 7;</code>
     */
    boolean containsString(
        java.lang.String key);
    /**
     * Use {@link #getStringMap()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.String, map_test.MapTestProto.ReservedAsMapFieldWithEnumValue.SampleEnum>
    getString();
    /**
     * <pre>
     * These are also proto keywords
     * </pre>
     *
     * <code>map&lt;string, .map_test.ReservedAsMapFieldWithEnumValue.SampleEnum&gt; string = 7;</code>
     */
    java.util.Map<java.lang.String, map_test.MapTestProto.ReservedAsMapFieldWithEnumValue.SampleEnum>
    getStringMap();
    /**
     * <pre>
     * These are also proto keywords
     * </pre>
     *
     * <code>map&lt;string, .map_test.ReservedAsMapFieldWithEnumValue.SampleEnum&gt; string = 7;</code>
     */
    map_test.MapTestProto.ReservedAsMapFieldWithEnumValue.SampleEnum getStringOrDefault(
        java.lang.String key,
        map_test.MapTestProto.ReservedAsMapFieldWithEnumValue.SampleEnum defaultValue);
    /**
     * <pre>
     * These are also proto keywords
     * </pre>
     *
     * <code>map&lt;string, .map_test.ReservedAsMapFieldWithEnumValue.SampleEnum&gt; string = 7;</code>
     */
    map_test.MapTestProto.ReservedAsMapFieldWithEnumValue.SampleEnum getStringOrThrow(
        java.lang.String key);
    /**
     * Use {@link #getStringValueMap()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.String, java.lang.Integer>
    getStringValue();
    /**
     * <pre>
     * These are also proto keywords
     * </pre>
     *
     * <code>map&lt;string, .map_test.ReservedAsMapFieldWithEnumValue.SampleEnum&gt; string = 7;</code>
     */
    java.util.Map<java.lang.String, java.lang.Integer>
    getStringValueMap();
    /**
     * <pre>
     * These are also proto keywords
     * </pre>
     *
     * <code>map&lt;string, .map_test.ReservedAsMapFieldWithEnumValue.SampleEnum&gt; string = 7;</code>
     */

    int getStringValueOrDefault(
        java.lang.String key,
        int defaultValue);
    /**
     * <pre>
     * These are also proto keywords
     * </pre>
     *
     * <code>map&lt;string, .map_test.ReservedAsMapFieldWithEnumValue.SampleEnum&gt; string = 7;</code>
     */

    int getStringValueOrThrow(
        java.lang.String key);

    /**
     * <code>map&lt;string, .map_test.ReservedAsMapFieldWithEnumValue.SampleEnum&gt; package = 8;</code>
     */
    int getPackageCount();
    /**
     * <code>map&lt;string, .map_test.ReservedAsMapFieldWithEnumValue.SampleEnum&gt; package = 8;</code>
     */
    boolean containsPackage(
        java.lang.String key);
    /**
     * Use {@link #getPackageMap()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.String, map_test.MapTestProto.ReservedAsMapFieldWithEnumValue.SampleEnum>
    getPackage();
    /**
     * <code>map&lt;string, .map_test.ReservedAsMapFieldWithEnumValue.SampleEnum&gt; package = 8;</code>
     */
    java.util.Map<java.lang.String, map_test.MapTestProto.ReservedAsMapFieldWithEnumValue.SampleEnum>
    getPackageMap();
    /**
     * <code>map&lt;string, .map_test.ReservedAsMapFieldWithEnumValue.SampleEnum&gt; package = 8;</code>
     */
    map_test.MapTestProto.ReservedAsMapFieldWithEnumValue.SampleEnum getPackageOrDefault(
        java.lang.String key,
        map_test.MapTestProto.ReservedAsMapFieldWithEnumValue.SampleEnum defaultValue);
    /**
     * <code>map&lt;string, .map_test.ReservedAsMapFieldWithEnumValue.SampleEnum&gt; package = 8;</code>
     */
    map_test.MapTestProto.ReservedAsMapFieldWithEnumValue.SampleEnum getPackageOrThrow(
        java.lang.String key);
    /**
     * Use {@link #getPackageValueMap()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.String, java.lang.Integer>
    getPackageValue();
    /**
     * <code>map&lt;string, .map_test.ReservedAsMapFieldWithEnumValue.SampleEnum&gt; package = 8;</code>
     */
    java.util.Map<java.lang.String, java.lang.Integer>
    getPackageValueMap();
    /**
     * <code>map&lt;string, .map_test.ReservedAsMapFieldWithEnumValue.SampleEnum&gt; package = 8;</code>
     */

    int getPackageValueOrDefault(
        java.lang.String key,
        int defaultValue);
    /**
     * <code>map&lt;string, .map_test.ReservedAsMapFieldWithEnumValue.SampleEnum&gt; package = 8;</code>
     */

    int getPackageValueOrThrow(
        java.lang.String key);

    /**
     * <pre>
     * Most recent Java reserved word
     * </pre>
     *
     * <code>map&lt;string, .map_test.ReservedAsMapFieldWithEnumValue.SampleEnum&gt; enum = 9;</code>
     */
    int getEnumCount();
    /**
     * <pre>
     * Most recent Java reserved word
     * </pre>
     *
     * <code>map&lt;string, .map_test.ReservedAsMapFieldWithEnumValue.SampleEnum&gt; enum = 9;</code>
     */
    boolean containsEnum(
        java.lang.String key);
    /**
     * Use {@link #getEnumMap()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.String, map_test.MapTestProto.ReservedAsMapFieldWithEnumValue.SampleEnum>
    getEnum();
    /**
     * <pre>
     * Most recent Java reserved word
     * </pre>
     *
     * <code>map&lt;string, .map_test.ReservedAsMapFieldWithEnumValue.SampleEnum&gt; enum = 9;</code>
     */
    java.util.Map<java.lang.String, map_test.MapTestProto.ReservedAsMapFieldWithEnumValue.SampleEnum>
    getEnumMap();
    /**
     * <pre>
     * Most recent Java reserved word
     * </pre>
     *
     * <code>map&lt;string, .map_test.ReservedAsMapFieldWithEnumValue.SampleEnum&gt; enum = 9;</code>
     */
    map_test.MapTestProto.ReservedAsMapFieldWithEnumValue.SampleEnum getEnumOrDefault(
        java.lang.String key,
        map_test.MapTestProto.ReservedAsMapFieldWithEnumValue.SampleEnum defaultValue);
    /**
     * <pre>
     * Most recent Java reserved word
     * </pre>
     *
     * <code>map&lt;string, .map_test.ReservedAsMapFieldWithEnumValue.SampleEnum&gt; enum = 9;</code>
     */
    map_test.MapTestProto.ReservedAsMapFieldWithEnumValue.SampleEnum getEnumOrThrow(
        java.lang.String key);
    /**
     * Use {@link #getEnumValueMap()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.String, java.lang.Integer>
    getEnumValue();
    /**
     * <pre>
     * Most recent Java reserved word
     * </pre>
     *
     * <code>map&lt;string, .map_test.ReservedAsMapFieldWithEnumValue.SampleEnum&gt; enum = 9;</code>
     */
    java.util.Map<java.lang.String, java.lang.Integer>
    getEnumValueMap();
    /**
     * <pre>
     * Most recent Java reserved word
     * </pre>
     *
     * <code>map&lt;string, .map_test.ReservedAsMapFieldWithEnumValue.SampleEnum&gt; enum = 9;</code>
     */

    int getEnumValueOrDefault(
        java.lang.String key,
        int defaultValue);
    /**
     * <pre>
     * Most recent Java reserved word
     * </pre>
     *
     * <code>map&lt;string, .map_test.ReservedAsMapFieldWithEnumValue.SampleEnum&gt; enum = 9;</code>
     */

    int getEnumValueOrThrow(
        java.lang.String key);

    /**
     * <pre>
     * null is not a 'reserved word' per se but as a literal needs similar care
     * </pre>
     *
     * <code>map&lt;string, .map_test.ReservedAsMapFieldWithEnumValue.SampleEnum&gt; null = 10;</code>
     */
    int getNullCount();
    /**
     * <pre>
     * null is not a 'reserved word' per se but as a literal needs similar care
     * </pre>
     *
     * <code>map&lt;string, .map_test.ReservedAsMapFieldWithEnumValue.SampleEnum&gt; null = 10;</code>
     */
    boolean containsNull(
        java.lang.String key);
    /**
     * Use {@link #getNullMap()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.String, map_test.MapTestProto.ReservedAsMapFieldWithEnumValue.SampleEnum>
    getNull();
    /**
     * <pre>
     * null is not a 'reserved word' per se but as a literal needs similar care
     * </pre>
     *
     * <code>map&lt;string, .map_test.ReservedAsMapFieldWithEnumValue.SampleEnum&gt; null = 10;</code>
     */
    java.util.Map<java.lang.String, map_test.MapTestProto.ReservedAsMapFieldWithEnumValue.SampleEnum>
    getNullMap();
    /**
     * <pre>
     * null is not a 'reserved word' per se but as a literal needs similar care
     * </pre>
     *
     * <code>map&lt;string, .map_test.ReservedAsMapFieldWithEnumValue.SampleEnum&gt; null = 10;</code>
     */
    map_test.MapTestProto.ReservedAsMapFieldWithEnumValue.SampleEnum getNullOrDefault(
        java.lang.String key,
        map_test.MapTestProto.ReservedAsMapFieldWithEnumValue.SampleEnum defaultValue);
    /**
     * <pre>
     * null is not a 'reserved word' per se but as a literal needs similar care
     * </pre>
     *
     * <code>map&lt;string, .map_test.ReservedAsMapFieldWithEnumValue.SampleEnum&gt; null = 10;</code>
     */
    map_test.MapTestProto.ReservedAsMapFieldWithEnumValue.SampleEnum getNullOrThrow(
        java.lang.String key);
    /**
     * Use {@link #getNullValueMap()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.String, java.lang.Integer>
    getNullValue();
    /**
     * <pre>
     * null is not a 'reserved word' per se but as a literal needs similar care
     * </pre>
     *
     * <code>map&lt;string, .map_test.ReservedAsMapFieldWithEnumValue.SampleEnum&gt; null = 10;</code>
     */
    java.util.Map<java.lang.String, java.lang.Integer>
    getNullValueMap();
    /**
     * <pre>
     * null is not a 'reserved word' per se but as a literal needs similar care
     * </pre>
     *
     * <code>map&lt;string, .map_test.ReservedAsMapFieldWithEnumValue.SampleEnum&gt; null = 10;</code>
     */

    int getNullValueOrDefault(
        java.lang.String key,
        int defaultValue);
    /**
     * <pre>
     * null is not a 'reserved word' per se but as a literal needs similar care
     * </pre>
     *
     * <code>map&lt;string, .map_test.ReservedAsMapFieldWithEnumValue.SampleEnum&gt; null = 10;</code>
     */

    int getNullValueOrThrow(
        java.lang.String key);
  }
  /**
   * Protobuf type {@code map_test.ReservedAsMapFieldWithEnumValue}
   */
  public  static final class ReservedAsMapFieldWithEnumValue extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:map_test.ReservedAsMapFieldWithEnumValue)
      ReservedAsMapFieldWithEnumValueOrBuilder {
    // Use ReservedAsMapFieldWithEnumValue.newBuilder() to construct.
    private ReservedAsMapFieldWithEnumValue(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private ReservedAsMapFieldWithEnumValue() {
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private ReservedAsMapFieldWithEnumValue(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                if_ = com.google.protobuf.MapField.newMapField(
                    IfDefaultEntryHolder.defaultEntry);
                mutable_bitField0_ |= 0x00000001;
              }
              com.google.protobuf.MapEntry<java.lang.String, java.lang.Integer>
              if__ = input.readMessage(
                  IfDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              if_.getMutableMap().put(
                  if__.getKey(), if__.getValue());
              break;
            }
            case 18: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                const_ = com.google.protobuf.MapField.newMapField(
                    ConstDefaultEntryHolder.defaultEntry);
                mutable_bitField0_ |= 0x00000002;
              }
              com.google.protobuf.MapEntry<java.lang.String, java.lang.Integer>
              const__ = input.readMessage(
                  ConstDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              const_.getMutableMap().put(
                  const__.getKey(), const__.getValue());
              break;
            }
            case 26: {
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                private_ = com.google.protobuf.MapField.newMapField(
                    PrivateDefaultEntryHolder.defaultEntry);
                mutable_bitField0_ |= 0x00000004;
              }
              com.google.protobuf.MapEntry<java.lang.String, java.lang.Integer>
              private__ = input.readMessage(
                  PrivateDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              private_.getMutableMap().put(
                  private__.getKey(), private__.getValue());
              break;
            }
            case 34: {
              if (!((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
                class__ = com.google.protobuf.MapField.newMapField(
                    Class_DefaultEntryHolder.defaultEntry);
                mutable_bitField0_ |= 0x00000008;
              }
              com.google.protobuf.MapEntry<java.lang.String, java.lang.Integer>
              class___ = input.readMessage(
                  Class_DefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              class__.getMutableMap().put(
                  class___.getKey(), class___.getValue());
              break;
            }
            case 42: {
              if (!((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
                int_ = com.google.protobuf.MapField.newMapField(
                    IntDefaultEntryHolder.defaultEntry);
                mutable_bitField0_ |= 0x00000010;
              }
              com.google.protobuf.MapEntry<java.lang.String, java.lang.Integer>
              int__ = input.readMessage(
                  IntDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              int_.getMutableMap().put(
                  int__.getKey(), int__.getValue());
              break;
            }
            case 50: {
              if (!((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
                void_ = com.google.protobuf.MapField.newMapField(
                    VoidDefaultEntryHolder.defaultEntry);
                mutable_bitField0_ |= 0x00000020;
              }
              com.google.protobuf.MapEntry<java.lang.String, java.lang.Integer>
              void__ = input.readMessage(
                  VoidDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              void_.getMutableMap().put(
                  void__.getKey(), void__.getValue());
              break;
            }
            case 58: {
              if (!((mutable_bitField0_ & 0x00000040) == 0x00000040)) {
                string_ = com.google.protobuf.MapField.newMapField(
                    StringDefaultEntryHolder.defaultEntry);
                mutable_bitField0_ |= 0x00000040;
              }
              com.google.protobuf.MapEntry<java.lang.String, java.lang.Integer>
              string__ = input.readMessage(
                  StringDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              string_.getMutableMap().put(
                  string__.getKey(), string__.getValue());
              break;
            }
            case 66: {
              if (!((mutable_bitField0_ & 0x00000080) == 0x00000080)) {
                package_ = com.google.protobuf.MapField.newMapField(
                    PackageDefaultEntryHolder.defaultEntry);
                mutable_bitField0_ |= 0x00000080;
              }
              com.google.protobuf.MapEntry<java.lang.String, java.lang.Integer>
              package__ = input.readMessage(
                  PackageDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              package_.getMutableMap().put(
                  package__.getKey(), package__.getValue());
              break;
            }
            case 74: {
              if (!((mutable_bitField0_ & 0x00000100) == 0x00000100)) {
                enum_ = com.google.protobuf.MapField.newMapField(
                    EnumDefaultEntryHolder.defaultEntry);
                mutable_bitField0_ |= 0x00000100;
              }
              com.google.protobuf.MapEntry<java.lang.String, java.lang.Integer>
              enum__ = input.readMessage(
                  EnumDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              enum_.getMutableMap().put(
                  enum__.getKey(), enum__.getValue());
              break;
            }
            case 82: {
              if (!((mutable_bitField0_ & 0x00000200) == 0x00000200)) {
                null_ = com.google.protobuf.MapField.newMapField(
                    NullDefaultEntryHolder.defaultEntry);
                mutable_bitField0_ |= 0x00000200;
              }
              com.google.protobuf.MapEntry<java.lang.String, java.lang.Integer>
              null__ = input.readMessage(
                  NullDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              null_.getMutableMap().put(
                  null__.getKey(), null__.getValue());
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return map_test.MapTestProto.internal_static_map_test_ReservedAsMapFieldWithEnumValue_descriptor;
    }

    @SuppressWarnings({"rawtypes"})
    protected com.google.protobuf.MapField internalGetMapField(
        int number) {
      switch (number) {
        case 1:
          return internalGetIf();
        case 2:
          return internalGetConst();
        case 3:
          return internalGetPrivate();
        case 4:
          return internalGetClass_();
        case 5:
          return internalGetInt();
        case 6:
          return internalGetVoid();
        case 7:
          return internalGetString();
        case 8:
          return internalGetPackage();
        case 9:
          return internalGetEnum();
        case 10:
          return internalGetNull();
        default:
          throw new RuntimeException(
              "Invalid map field number: " + number);
      }
    }
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return map_test.MapTestProto.internal_static_map_test_ReservedAsMapFieldWithEnumValue_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              map_test.MapTestProto.ReservedAsMapFieldWithEnumValue.class, map_test.MapTestProto.ReservedAsMapFieldWithEnumValue.Builder.class);
    }

    /**
     * Protobuf enum {@code map_test.ReservedAsMapFieldWithEnumValue.SampleEnum}
     */
    public enum SampleEnum
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>A = 0;</code>
       */
      A(0),
      /**
       * <code>B = 1;</code>
       */
      B(1),
      UNRECOGNIZED(-1),
      ;

      /**
       * <code>A = 0;</code>
       */
      public static final int A_VALUE = 0;
      /**
       * <code>B = 1;</code>
       */
      public static final int B_VALUE = 1;


      public final int getNumber() {
        if (this == UNRECOGNIZED) {
          throw new java.lang.IllegalArgumentException(
              "Can't get the number of an unknown enum value.");
        }
        return value;
      }

      /**
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static SampleEnum valueOf(int value) {
        return forNumber(value);
      }

      public static SampleEnum forNumber(int value) {
        switch (value) {
          case 0: return A;
          case 1: return B;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<SampleEnum>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          SampleEnum> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<SampleEnum>() {
              public SampleEnum findValueByNumber(int number) {
                return SampleEnum.forNumber(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(ordinal());
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return map_test.MapTestProto.ReservedAsMapFieldWithEnumValue.getDescriptor().getEnumTypes().get(0);
      }

      private static final SampleEnum[] VALUES = values();

      public static SampleEnum valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        if (desc.getIndex() == -1) {
          return UNRECOGNIZED;
        }
        return VALUES[desc.getIndex()];
      }

      private final int value;

      private SampleEnum(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:map_test.ReservedAsMapFieldWithEnumValue.SampleEnum)
    }

    public static final int IF_FIELD_NUMBER = 1;
    private static final class IfDefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          java.lang.String, java.lang.Integer> defaultEntry =
              com.google.protobuf.MapEntry
              .<java.lang.String, java.lang.Integer>newDefaultInstance(
                  map_test.MapTestProto.internal_static_map_test_ReservedAsMapFieldWithEnumValue_IfEntry_descriptor, 
                  com.google.protobuf.WireFormat.FieldType.STRING,
                  "",
                  com.google.protobuf.WireFormat.FieldType.ENUM,
                  map_test.MapTestProto.ReservedAsMapFieldWithEnumValue.SampleEnum.A.getNumber());
    }
    private com.google.protobuf.MapField<
        java.lang.String, java.lang.Integer> if_;
    private com.google.protobuf.MapField<java.lang.String, java.lang.Integer>
    internalGetIf() {
      if (if_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            IfDefaultEntryHolder.defaultEntry);
      }
      return if_;
    }
    private static final
    com.google.protobuf.Internal.MapAdapter.Converter<
        java.lang.Integer, map_test.MapTestProto.ReservedAsMapFieldWithEnumValue.SampleEnum> ifValueConverter =
            com.google.protobuf.Internal.MapAdapter.newEnumConverter(
                map_test.MapTestProto.ReservedAsMapFieldWithEnumValue.SampleEnum.internalGetValueMap(),
                map_test.MapTestProto.ReservedAsMapFieldWithEnumValue.SampleEnum.UNRECOGNIZED);
    private static final java.util.Map<java.lang.String, map_test.MapTestProto.ReservedAsMapFieldWithEnumValue.SampleEnum>
    internalGetAdaptedIfMap(
        java.util.Map<java.lang.String, java.lang.Integer> map) {
      return new com.google.protobuf.Internal.MapAdapter<
          java.lang.String, map_test.MapTestProto.ReservedAsMapFieldWithEnumValue.SampleEnum, java.lang.Integer>(
              map, ifValueConverter);
    }

    public int getIfCount() {
      return internalGetIf().getMap().size();
    }
    /**
     * <code>map&lt;string, .map_test.ReservedAsMapFieldWithEnumValue.SampleEnum&gt; if = 1;</code>
     */

    public boolean containsIf(
        java.lang.String key) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      return internalGetIf().getMap().containsKey(key);
    }
    /**
     * Use {@link #getIfMap()} instead.
     */
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, map_test.MapTestProto.ReservedAsMapFieldWithEnumValue.SampleEnum>
    getIf() {
      return getIfMap();
    }
    /**
     * <code>map&lt;string, .map_test.ReservedAsMapFieldWithEnumValue.SampleEnum&gt; if = 1;</code>
     */

    public java.util.Map<java.lang.String, map_test.MapTestProto.ReservedAsMapFieldWithEnumValue.SampleEnum>
    getIfMap() {
      return internalGetAdaptedIfMap(
          internalGetIf().getMap());}
    /**
     * <code>map&lt;string, .map_test.ReservedAsMapFieldWithEnumValue.SampleEnum&gt; if = 1;</code>
     */

    public map_test.MapTestProto.ReservedAsMapFieldWithEnumValue.SampleEnum getIfOrDefault(
        java.lang.String key,
        map_test.MapTestProto.ReservedAsMapFieldWithEnumValue.SampleEnum defaultValue) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      java.util.Map<java.lang.String, java.lang.Integer> map =
          internalGetIf().getMap();
      return map.containsKey(key)
             ? ifValueConverter.doForward(map.get(key))
             : defaultValue;
    }
    /**
     * <code>map&lt;string, .map_test.ReservedAsMapFieldWithEnumValue.SampleEnum&gt; if = 1;</code>
     */

    public map_test.MapTestProto.ReservedAsMapFieldWithEnumValue.SampleEnum getIfOrThrow(
        java.lang.String key) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      java.util.Map<java.lang.String, java.lang.Integer> map =
          internalGetIf().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return ifValueConverter.doForward(map.get(key));
    }
    /**
     * Use {@link #getIfValueMap()} instead.
     */
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, java.lang.Integer>
    getIfValue() {
      return getIfValueMap();
    }
    /**
     * <code>map&lt;string, .map_test.ReservedAsMapFieldWithEnumValue.SampleEnum&gt; if = 1;</code>
     */

    public java.util.Map<java.lang.String, java.lang.Integer>
    getIfValueMap() {
      return internalGetIf().getMap();
    }
    /**
     * <code>map&lt;string, .map_test.ReservedAsMapFieldWithEnumValue.SampleEnum&gt; if = 1;</code>
     */

    public int getIfValueOrDefault(
        java.lang.String key,
        int defaultValue) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      java.util.Map<java.lang.String, java.lang.Integer> map =
          internalGetIf().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <code>map&lt;string, .map_test.ReservedAsMapFieldWithEnumValue.SampleEnum&gt; if = 1;</code>
     */

    public int getIfValueOrThrow(
        java.lang.String key) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      java.util.Map<java.lang.String, java.lang.Integer> map =
          internalGetIf().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    public static final int CONST_FIELD_NUMBER = 2;
    private static final class ConstDefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          java.lang.String, java.lang.Integer> defaultEntry =
              com.google.protobuf.MapEntry
              .<java.lang.String, java.lang.Integer>newDefaultInstance(
                  map_test.MapTestProto.internal_static_map_test_ReservedAsMapFieldWithEnumValue_ConstEntry_descriptor, 
                  com.google.protobuf.WireFormat.FieldType.STRING,
                  "",
                  com.google.protobuf.WireFormat.FieldType.ENUM,
                  map_test.MapTestProto.ReservedAsMapFieldWithEnumValue.SampleEnum.A.getNumber());
    }
    private com.google.protobuf.MapField<
        java.lang.String, java.lang.Integer> const_;
    private com.google.protobuf.MapField<java.lang.String, java.lang.Integer>
    internalGetConst() {
      if (const_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            ConstDefaultEntryHolder.defaultEntry);
      }
      return const_;
    }
    private static final
    com.google.protobuf.Internal.MapAdapter.Converter<
        java.lang.Integer, map_test.MapTestProto.ReservedAsMapFieldWithEnumValue.SampleEnum> constValueConverter =
            com.google.protobuf.Internal.MapAdapter.newEnumConverter(
                map_test.MapTestProto.ReservedAsMapFieldWithEnumValue.SampleEnum.internalGetValueMap(),
                map_test.MapTestProto.ReservedAsMapFieldWithEnumValue.SampleEnum.UNRECOGNIZED);
    private static final java.util.Map<java.lang.String, map_test.MapTestProto.ReservedAsMapFieldWithEnumValue.SampleEnum>
    internalGetAdaptedConstMap(
        java.util.Map<java.lang.String, java.lang.Integer> map) {
      return new com.google.protobuf.Internal.MapAdapter<
          java.lang.String, map_test.MapTestProto.ReservedAsMapFieldWithEnumValue.SampleEnum, java.lang.Integer>(
              map, constValueConverter);
    }

    public int getConstCount() {
      return internalGetConst().getMap().size();
    }
    /**
     * <code>map&lt;string, .map_test.ReservedAsMapFieldWithEnumValue.SampleEnum&gt; const = 2;</code>
     */

    public boolean containsConst(
        java.lang.String key) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      return internalGetConst().getMap().containsKey(key);
    }
    /**
     * Use {@link #getConstMap()} instead.
     */
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, map_test.MapTestProto.ReservedAsMapFieldWithEnumValue.SampleEnum>
    getConst() {
      return getConstMap();
    }
    /**
     * <code>map&lt;string, .map_test.ReservedAsMapFieldWithEnumValue.SampleEnum&gt; const = 2;</code>
     */

    public java.util.Map<java.lang.String, map_test.MapTestProto.ReservedAsMapFieldWithEnumValue.SampleEnum>
    getConstMap() {
      return internalGetAdaptedConstMap(
          internalGetConst().getMap());}
    /**
     * <code>map&lt;string, .map_test.ReservedAsMapFieldWithEnumValue.SampleEnum&gt; const = 2;</code>
     */

    public map_test.MapTestProto.ReservedAsMapFieldWithEnumValue.SampleEnum getConstOrDefault(
        java.lang.String key,
        map_test.MapTestProto.ReservedAsMapFieldWithEnumValue.SampleEnum defaultValue) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      java.util.Map<java.lang.String, java.lang.Integer> map =
          internalGetConst().getMap();
      return map.containsKey(key)
             ? constValueConverter.doForward(map.get(key))
             : defaultValue;
    }
    /**
     * <code>map&lt;string, .map_test.ReservedAsMapFieldWithEnumValue.SampleEnum&gt; const = 2;</code>
     */

    public map_test.MapTestProto.ReservedAsMapFieldWithEnumValue.SampleEnum getConstOrThrow(
        java.lang.String key) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      java.util.Map<java.lang.String, java.lang.Integer> map =
          internalGetConst().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return constValueConverter.doForward(map.get(key));
    }
    /**
     * Use {@link #getConstValueMap()} instead.
     */
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, java.lang.Integer>
    getConstValue() {
      return getConstValueMap();
    }
    /**
     * <code>map&lt;string, .map_test.ReservedAsMapFieldWithEnumValue.SampleEnum&gt; const = 2;</code>
     */

    public java.util.Map<java.lang.String, java.lang.Integer>
    getConstValueMap() {
      return internalGetConst().getMap();
    }
    /**
     * <code>map&lt;string, .map_test.ReservedAsMapFieldWithEnumValue.SampleEnum&gt; const = 2;</code>
     */

    public int getConstValueOrDefault(
        java.lang.String key,
        int defaultValue) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      java.util.Map<java.lang.String, java.lang.Integer> map =
          internalGetConst().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <code>map&lt;string, .map_test.ReservedAsMapFieldWithEnumValue.SampleEnum&gt; const = 2;</code>
     */

    public int getConstValueOrThrow(
        java.lang.String key) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      java.util.Map<java.lang.String, java.lang.Integer> map =
          internalGetConst().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    public static final int PRIVATE_FIELD_NUMBER = 3;
    private static final class PrivateDefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          java.lang.String, java.lang.Integer> defaultEntry =
              com.google.protobuf.MapEntry
              .<java.lang.String, java.lang.Integer>newDefaultInstance(
                  map_test.MapTestProto.internal_static_map_test_ReservedAsMapFieldWithEnumValue_PrivateEntry_descriptor, 
                  com.google.protobuf.WireFormat.FieldType.STRING,
                  "",
                  com.google.protobuf.WireFormat.FieldType.ENUM,
                  map_test.MapTestProto.ReservedAsMapFieldWithEnumValue.SampleEnum.A.getNumber());
    }
    private com.google.protobuf.MapField<
        java.lang.String, java.lang.Integer> private_;
    private com.google.protobuf.MapField<java.lang.String, java.lang.Integer>
    internalGetPrivate() {
      if (private_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            PrivateDefaultEntryHolder.defaultEntry);
      }
      return private_;
    }
    private static final
    com.google.protobuf.Internal.MapAdapter.Converter<
        java.lang.Integer, map_test.MapTestProto.ReservedAsMapFieldWithEnumValue.SampleEnum> privateValueConverter =
            com.google.protobuf.Internal.MapAdapter.newEnumConverter(
                map_test.MapTestProto.ReservedAsMapFieldWithEnumValue.SampleEnum.internalGetValueMap(),
                map_test.MapTestProto.ReservedAsMapFieldWithEnumValue.SampleEnum.UNRECOGNIZED);
    private static final java.util.Map<java.lang.String, map_test.MapTestProto.ReservedAsMapFieldWithEnumValue.SampleEnum>
    internalGetAdaptedPrivateMap(
        java.util.Map<java.lang.String, java.lang.Integer> map) {
      return new com.google.protobuf.Internal.MapAdapter<
          java.lang.String, map_test.MapTestProto.ReservedAsMapFieldWithEnumValue.SampleEnum, java.lang.Integer>(
              map, privateValueConverter);
    }

    public int getPrivateCount() {
      return internalGetPrivate().getMap().size();
    }
    /**
     * <code>map&lt;string, .map_test.ReservedAsMapFieldWithEnumValue.SampleEnum&gt; private = 3;</code>
     */

    public boolean containsPrivate(
        java.lang.String key) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      return internalGetPrivate().getMap().containsKey(key);
    }
    /**
     * Use {@link #getPrivateMap()} instead.
     */
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, map_test.MapTestProto.ReservedAsMapFieldWithEnumValue.SampleEnum>
    getPrivate() {
      return getPrivateMap();
    }
    /**
     * <code>map&lt;string, .map_test.ReservedAsMapFieldWithEnumValue.SampleEnum&gt; private = 3;</code>
     */

    public java.util.Map<java.lang.String, map_test.MapTestProto.ReservedAsMapFieldWithEnumValue.SampleEnum>
    getPrivateMap() {
      return internalGetAdaptedPrivateMap(
          internalGetPrivate().getMap());}
    /**
     * <code>map&lt;string, .map_test.ReservedAsMapFieldWithEnumValue.SampleEnum&gt; private = 3;</code>
     */

    public map_test.MapTestProto.ReservedAsMapFieldWithEnumValue.SampleEnum getPrivateOrDefault(
        java.lang.String key,
        map_test.MapTestProto.ReservedAsMapFieldWithEnumValue.SampleEnum defaultValue) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      java.util.Map<java.lang.String, java.lang.Integer> map =
          internalGetPrivate().getMap();
      return map.containsKey(key)
             ? privateValueConverter.doForward(map.get(key))
             : defaultValue;
    }
    /**
     * <code>map&lt;string, .map_test.ReservedAsMapFieldWithEnumValue.SampleEnum&gt; private = 3;</code>
     */

    public map_test.MapTestProto.ReservedAsMapFieldWithEnumValue.SampleEnum getPrivateOrThrow(
        java.lang.String key) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      java.util.Map<java.lang.String, java.lang.Integer> map =
          internalGetPrivate().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return privateValueConverter.doForward(map.get(key));
    }
    /**
     * Use {@link #getPrivateValueMap()} instead.
     */
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, java.lang.Integer>
    getPrivateValue() {
      return getPrivateValueMap();
    }
    /**
     * <code>map&lt;string, .map_test.ReservedAsMapFieldWithEnumValue.SampleEnum&gt; private = 3;</code>
     */

    public java.util.Map<java.lang.String, java.lang.Integer>
    getPrivateValueMap() {
      return internalGetPrivate().getMap();
    }
    /**
     * <code>map&lt;string, .map_test.ReservedAsMapFieldWithEnumValue.SampleEnum&gt; private = 3;</code>
     */

    public int getPrivateValueOrDefault(
        java.lang.String key,
        int defaultValue) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      java.util.Map<java.lang.String, java.lang.Integer> map =
          internalGetPrivate().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <code>map&lt;string, .map_test.ReservedAsMapFieldWithEnumValue.SampleEnum&gt; private = 3;</code>
     */

    public int getPrivateValueOrThrow(
        java.lang.String key) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      java.util.Map<java.lang.String, java.lang.Integer> map =
          internalGetPrivate().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    public static final int CLASS_FIELD_NUMBER = 4;
    private static final class Class_DefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          java.lang.String, java.lang.Integer> defaultEntry =
              com.google.protobuf.MapEntry
              .<java.lang.String, java.lang.Integer>newDefaultInstance(
                  map_test.MapTestProto.internal_static_map_test_ReservedAsMapFieldWithEnumValue_ClassEntry_descriptor, 
                  com.google.protobuf.WireFormat.FieldType.STRING,
                  "",
                  com.google.protobuf.WireFormat.FieldType.ENUM,
                  map_test.MapTestProto.ReservedAsMapFieldWithEnumValue.SampleEnum.A.getNumber());
    }
    private com.google.protobuf.MapField<
        java.lang.String, java.lang.Integer> class__;
    private com.google.protobuf.MapField<java.lang.String, java.lang.Integer>
    internalGetClass_() {
      if (class__ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            Class_DefaultEntryHolder.defaultEntry);
      }
      return class__;
    }
    private static final
    com.google.protobuf.Internal.MapAdapter.Converter<
        java.lang.Integer, map_test.MapTestProto.ReservedAsMapFieldWithEnumValue.SampleEnum> class_ValueConverter =
            com.google.protobuf.Internal.MapAdapter.newEnumConverter(
                map_test.MapTestProto.ReservedAsMapFieldWithEnumValue.SampleEnum.internalGetValueMap(),
                map_test.MapTestProto.ReservedAsMapFieldWithEnumValue.SampleEnum.UNRECOGNIZED);
    private static final java.util.Map<java.lang.String, map_test.MapTestProto.ReservedAsMapFieldWithEnumValue.SampleEnum>
    internalGetAdaptedClass_Map(
        java.util.Map<java.lang.String, java.lang.Integer> map) {
      return new com.google.protobuf.Internal.MapAdapter<
          java.lang.String, map_test.MapTestProto.ReservedAsMapFieldWithEnumValue.SampleEnum, java.lang.Integer>(
              map, class_ValueConverter);
    }

    public int getClass_Count() {
      return internalGetClass_().getMap().size();
    }
    /**
     * <code>map&lt;string, .map_test.ReservedAsMapFieldWithEnumValue.SampleEnum&gt; class = 4;</code>
     */

    public boolean containsClass_(
        java.lang.String key) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      return internalGetClass_().getMap().containsKey(key);
    }
    /**
     * Use {@link #getClass_Map()} instead.
     */
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, map_test.MapTestProto.ReservedAsMapFieldWithEnumValue.SampleEnum>
    getClass_() {
      return getClass_Map();
    }
    /**
     * <code>map&lt;string, .map_test.ReservedAsMapFieldWithEnumValue.SampleEnum&gt; class = 4;</code>
     */

    public java.util.Map<java.lang.String, map_test.MapTestProto.ReservedAsMapFieldWithEnumValue.SampleEnum>
    getClass_Map() {
      return internalGetAdaptedClass_Map(
          internalGetClass_().getMap());}
    /**
     * <code>map&lt;string, .map_test.ReservedAsMapFieldWithEnumValue.SampleEnum&gt; class = 4;</code>
     */

    public map_test.MapTestProto.ReservedAsMapFieldWithEnumValue.SampleEnum getClass_OrDefault(
        java.lang.String key,
        map_test.MapTestProto.ReservedAsMapFieldWithEnumValue.SampleEnum defaultValue) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      java.util.Map<java.lang.String, java.lang.Integer> map =
          internalGetClass_().getMap();
      return map.containsKey(key)
             ? class_ValueConverter.doForward(map.get(key))
             : defaultValue;
    }
    /**
     * <code>map&lt;string, .map_test.ReservedAsMapFieldWithEnumValue.SampleEnum&gt; class = 4;</code>
     */

    public map_test.MapTestProto.ReservedAsMapFieldWithEnumValue.SampleEnum getClass_OrThrow(
        java.lang.String key) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      java.util.Map<java.lang.String, java.lang.Integer> map =
          internalGetClass_().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return class_ValueConverter.doForward(map.get(key));
    }
    /**
     * Use {@link #getClass_ValueMap()} instead.
     */
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, java.lang.Integer>
    getClass_Value() {
      return getClass_ValueMap();
    }
    /**
     * <code>map&lt;string, .map_test.ReservedAsMapFieldWithEnumValue.SampleEnum&gt; class = 4;</code>
     */

    public java.util.Map<java.lang.String, java.lang.Integer>
    getClass_ValueMap() {
      return internalGetClass_().getMap();
    }
    /**
     * <code>map&lt;string, .map_test.ReservedAsMapFieldWithEnumValue.SampleEnum&gt; class = 4;</code>
     */

    public int getClass_ValueOrDefault(
        java.lang.String key,
        int defaultValue) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      java.util.Map<java.lang.String, java.lang.Integer> map =
          internalGetClass_().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <code>map&lt;string, .map_test.ReservedAsMapFieldWithEnumValue.SampleEnum&gt; class = 4;</code>
     */

    public int getClass_ValueOrThrow(
        java.lang.String key) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      java.util.Map<java.lang.String, java.lang.Integer> map =
          internalGetClass_().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    public static final int INT_FIELD_NUMBER = 5;
    private static final class IntDefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          java.lang.String, java.lang.Integer> defaultEntry =
              com.google.protobuf.MapEntry
              .<java.lang.String, java.lang.Integer>newDefaultInstance(
                  map_test.MapTestProto.internal_static_map_test_ReservedAsMapFieldWithEnumValue_IntEntry_descriptor, 
                  com.google.protobuf.WireFormat.FieldType.STRING,
                  "",
                  com.google.protobuf.WireFormat.FieldType.ENUM,
                  map_test.MapTestProto.ReservedAsMapFieldWithEnumValue.SampleEnum.A.getNumber());
    }
    private com.google.protobuf.MapField<
        java.lang.String, java.lang.Integer> int_;
    private com.google.protobuf.MapField<java.lang.String, java.lang.Integer>
    internalGetInt() {
      if (int_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            IntDefaultEntryHolder.defaultEntry);
      }
      return int_;
    }
    private static final
    com.google.protobuf.Internal.MapAdapter.Converter<
        java.lang.Integer, map_test.MapTestProto.ReservedAsMapFieldWithEnumValue.SampleEnum> intValueConverter =
            com.google.protobuf.Internal.MapAdapter.newEnumConverter(
                map_test.MapTestProto.ReservedAsMapFieldWithEnumValue.SampleEnum.internalGetValueMap(),
                map_test.MapTestProto.ReservedAsMapFieldWithEnumValue.SampleEnum.UNRECOGNIZED);
    private static final java.util.Map<java.lang.String, map_test.MapTestProto.ReservedAsMapFieldWithEnumValue.SampleEnum>
    internalGetAdaptedIntMap(
        java.util.Map<java.lang.String, java.lang.Integer> map) {
      return new com.google.protobuf.Internal.MapAdapter<
          java.lang.String, map_test.MapTestProto.ReservedAsMapFieldWithEnumValue.SampleEnum, java.lang.Integer>(
              map, intValueConverter);
    }

    public int getIntCount() {
      return internalGetInt().getMap().size();
    }
    /**
     * <code>map&lt;string, .map_test.ReservedAsMapFieldWithEnumValue.SampleEnum&gt; int = 5;</code>
     */

    public boolean containsInt(
        java.lang.String key) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      return internalGetInt().getMap().containsKey(key);
    }
    /**
     * Use {@link #getIntMap()} instead.
     */
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, map_test.MapTestProto.ReservedAsMapFieldWithEnumValue.SampleEnum>
    getInt() {
      return getIntMap();
    }
    /**
     * <code>map&lt;string, .map_test.ReservedAsMapFieldWithEnumValue.SampleEnum&gt; int = 5;</code>
     */

    public java.util.Map<java.lang.String, map_test.MapTestProto.ReservedAsMapFieldWithEnumValue.SampleEnum>
    getIntMap() {
      return internalGetAdaptedIntMap(
          internalGetInt().getMap());}
    /**
     * <code>map&lt;string, .map_test.ReservedAsMapFieldWithEnumValue.SampleEnum&gt; int = 5;</code>
     */

    public map_test.MapTestProto.ReservedAsMapFieldWithEnumValue.SampleEnum getIntOrDefault(
        java.lang.String key,
        map_test.MapTestProto.ReservedAsMapFieldWithEnumValue.SampleEnum defaultValue) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      java.util.Map<java.lang.String, java.lang.Integer> map =
          internalGetInt().getMap();
      return map.containsKey(key)
             ? intValueConverter.doForward(map.get(key))
             : defaultValue;
    }
    /**
     * <code>map&lt;string, .map_test.ReservedAsMapFieldWithEnumValue.SampleEnum&gt; int = 5;</code>
     */

    public map_test.MapTestProto.ReservedAsMapFieldWithEnumValue.SampleEnum getIntOrThrow(
        java.lang.String key) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      java.util.Map<java.lang.String, java.lang.Integer> map =
          internalGetInt().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return intValueConverter.doForward(map.get(key));
    }
    /**
     * Use {@link #getIntValueMap()} instead.
     */
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, java.lang.Integer>
    getIntValue() {
      return getIntValueMap();
    }
    /**
     * <code>map&lt;string, .map_test.ReservedAsMapFieldWithEnumValue.SampleEnum&gt; int = 5;</code>
     */

    public java.util.Map<java.lang.String, java.lang.Integer>
    getIntValueMap() {
      return internalGetInt().getMap();
    }
    /**
     * <code>map&lt;string, .map_test.ReservedAsMapFieldWithEnumValue.SampleEnum&gt; int = 5;</code>
     */

    public int getIntValueOrDefault(
        java.lang.String key,
        int defaultValue) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      java.util.Map<java.lang.String, java.lang.Integer> map =
          internalGetInt().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <code>map&lt;string, .map_test.ReservedAsMapFieldWithEnumValue.SampleEnum&gt; int = 5;</code>
     */

    public int getIntValueOrThrow(
        java.lang.String key) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      java.util.Map<java.lang.String, java.lang.Integer> map =
          internalGetInt().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    public static final int VOID_FIELD_NUMBER = 6;
    private static final class VoidDefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          java.lang.String, java.lang.Integer> defaultEntry =
              com.google.protobuf.MapEntry
              .<java.lang.String, java.lang.Integer>newDefaultInstance(
                  map_test.MapTestProto.internal_static_map_test_ReservedAsMapFieldWithEnumValue_VoidEntry_descriptor, 
                  com.google.protobuf.WireFormat.FieldType.STRING,
                  "",
                  com.google.protobuf.WireFormat.FieldType.ENUM,
                  map_test.MapTestProto.ReservedAsMapFieldWithEnumValue.SampleEnum.A.getNumber());
    }
    private com.google.protobuf.MapField<
        java.lang.String, java.lang.Integer> void_;
    private com.google.protobuf.MapField<java.lang.String, java.lang.Integer>
    internalGetVoid() {
      if (void_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            VoidDefaultEntryHolder.defaultEntry);
      }
      return void_;
    }
    private static final
    com.google.protobuf.Internal.MapAdapter.Converter<
        java.lang.Integer, map_test.MapTestProto.ReservedAsMapFieldWithEnumValue.SampleEnum> voidValueConverter =
            com.google.protobuf.Internal.MapAdapter.newEnumConverter(
                map_test.MapTestProto.ReservedAsMapFieldWithEnumValue.SampleEnum.internalGetValueMap(),
                map_test.MapTestProto.ReservedAsMapFieldWithEnumValue.SampleEnum.UNRECOGNIZED);
    private static final java.util.Map<java.lang.String, map_test.MapTestProto.ReservedAsMapFieldWithEnumValue.SampleEnum>
    internalGetAdaptedVoidMap(
        java.util.Map<java.lang.String, java.lang.Integer> map) {
      return new com.google.protobuf.Internal.MapAdapter<
          java.lang.String, map_test.MapTestProto.ReservedAsMapFieldWithEnumValue.SampleEnum, java.lang.Integer>(
              map, voidValueConverter);
    }

    public int getVoidCount() {
      return internalGetVoid().getMap().size();
    }
    /**
     * <code>map&lt;string, .map_test.ReservedAsMapFieldWithEnumValue.SampleEnum&gt; void = 6;</code>
     */

    public boolean containsVoid(
        java.lang.String key) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      return internalGetVoid().getMap().containsKey(key);
    }
    /**
     * Use {@link #getVoidMap()} instead.
     */
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, map_test.MapTestProto.ReservedAsMapFieldWithEnumValue.SampleEnum>
    getVoid() {
      return getVoidMap();
    }
    /**
     * <code>map&lt;string, .map_test.ReservedAsMapFieldWithEnumValue.SampleEnum&gt; void = 6;</code>
     */

    public java.util.Map<java.lang.String, map_test.MapTestProto.ReservedAsMapFieldWithEnumValue.SampleEnum>
    getVoidMap() {
      return internalGetAdaptedVoidMap(
          internalGetVoid().getMap());}
    /**
     * <code>map&lt;string, .map_test.ReservedAsMapFieldWithEnumValue.SampleEnum&gt; void = 6;</code>
     */

    public map_test.MapTestProto.ReservedAsMapFieldWithEnumValue.SampleEnum getVoidOrDefault(
        java.lang.String key,
        map_test.MapTestProto.ReservedAsMapFieldWithEnumValue.SampleEnum defaultValue) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      java.util.Map<java.lang.String, java.lang.Integer> map =
          internalGetVoid().getMap();
      return map.containsKey(key)
             ? voidValueConverter.doForward(map.get(key))
             : defaultValue;
    }
    /**
     * <code>map&lt;string, .map_test.ReservedAsMapFieldWithEnumValue.SampleEnum&gt; void = 6;</code>
     */

    public map_test.MapTestProto.ReservedAsMapFieldWithEnumValue.SampleEnum getVoidOrThrow(
        java.lang.String key) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      java.util.Map<java.lang.String, java.lang.Integer> map =
          internalGetVoid().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return voidValueConverter.doForward(map.get(key));
    }
    /**
     * Use {@link #getVoidValueMap()} instead.
     */
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, java.lang.Integer>
    getVoidValue() {
      return getVoidValueMap();
    }
    /**
     * <code>map&lt;string, .map_test.ReservedAsMapFieldWithEnumValue.SampleEnum&gt; void = 6;</code>
     */

    public java.util.Map<java.lang.String, java.lang.Integer>
    getVoidValueMap() {
      return internalGetVoid().getMap();
    }
    /**
     * <code>map&lt;string, .map_test.ReservedAsMapFieldWithEnumValue.SampleEnum&gt; void = 6;</code>
     */

    public int getVoidValueOrDefault(
        java.lang.String key,
        int defaultValue) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      java.util.Map<java.lang.String, java.lang.Integer> map =
          internalGetVoid().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <code>map&lt;string, .map_test.ReservedAsMapFieldWithEnumValue.SampleEnum&gt; void = 6;</code>
     */

    public int getVoidValueOrThrow(
        java.lang.String key) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      java.util.Map<java.lang.String, java.lang.Integer> map =
          internalGetVoid().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    public static final int STRING_FIELD_NUMBER = 7;
    private static final class StringDefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          java.lang.String, java.lang.Integer> defaultEntry =
              com.google.protobuf.MapEntry
              .<java.lang.String, java.lang.Integer>newDefaultInstance(
                  map_test.MapTestProto.internal_static_map_test_ReservedAsMapFieldWithEnumValue_StringEntry_descriptor, 
                  com.google.protobuf.WireFormat.FieldType.STRING,
                  "",
                  com.google.protobuf.WireFormat.FieldType.ENUM,
                  map_test.MapTestProto.ReservedAsMapFieldWithEnumValue.SampleEnum.A.getNumber());
    }
    private com.google.protobuf.MapField<
        java.lang.String, java.lang.Integer> string_;
    private com.google.protobuf.MapField<java.lang.String, java.lang.Integer>
    internalGetString() {
      if (string_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            StringDefaultEntryHolder.defaultEntry);
      }
      return string_;
    }
    private static final
    com.google.protobuf.Internal.MapAdapter.Converter<
        java.lang.Integer, map_test.MapTestProto.ReservedAsMapFieldWithEnumValue.SampleEnum> stringValueConverter =
            com.google.protobuf.Internal.MapAdapter.newEnumConverter(
                map_test.MapTestProto.ReservedAsMapFieldWithEnumValue.SampleEnum.internalGetValueMap(),
                map_test.MapTestProto.ReservedAsMapFieldWithEnumValue.SampleEnum.UNRECOGNIZED);
    private static final java.util.Map<java.lang.String, map_test.MapTestProto.ReservedAsMapFieldWithEnumValue.SampleEnum>
    internalGetAdaptedStringMap(
        java.util.Map<java.lang.String, java.lang.Integer> map) {
      return new com.google.protobuf.Internal.MapAdapter<
          java.lang.String, map_test.MapTestProto.ReservedAsMapFieldWithEnumValue.SampleEnum, java.lang.Integer>(
              map, stringValueConverter);
    }

    public int getStringCount() {
      return internalGetString().getMap().size();
    }
    /**
     * <pre>
     * These are also proto keywords
     * </pre>
     *
     * <code>map&lt;string, .map_test.ReservedAsMapFieldWithEnumValue.SampleEnum&gt; string = 7;</code>
     */

    public boolean containsString(
        java.lang.String key) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      return internalGetString().getMap().containsKey(key);
    }
    /**
     * Use {@link #getStringMap()} instead.
     */
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, map_test.MapTestProto.ReservedAsMapFieldWithEnumValue.SampleEnum>
    getString() {
      return getStringMap();
    }
    /**
     * <pre>
     * These are also proto keywords
     * </pre>
     *
     * <code>map&lt;string, .map_test.ReservedAsMapFieldWithEnumValue.SampleEnum&gt; string = 7;</code>
     */

    public java.util.Map<java.lang.String, map_test.MapTestProto.ReservedAsMapFieldWithEnumValue.SampleEnum>
    getStringMap() {
      return internalGetAdaptedStringMap(
          internalGetString().getMap());}
    /**
     * <pre>
     * These are also proto keywords
     * </pre>
     *
     * <code>map&lt;string, .map_test.ReservedAsMapFieldWithEnumValue.SampleEnum&gt; string = 7;</code>
     */

    public map_test.MapTestProto.ReservedAsMapFieldWithEnumValue.SampleEnum getStringOrDefault(
        java.lang.String key,
        map_test.MapTestProto.ReservedAsMapFieldWithEnumValue.SampleEnum defaultValue) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      java.util.Map<java.lang.String, java.lang.Integer> map =
          internalGetString().getMap();
      return map.containsKey(key)
             ? stringValueConverter.doForward(map.get(key))
             : defaultValue;
    }
    /**
     * <pre>
     * These are also proto keywords
     * </pre>
     *
     * <code>map&lt;string, .map_test.ReservedAsMapFieldWithEnumValue.SampleEnum&gt; string = 7;</code>
     */

    public map_test.MapTestProto.ReservedAsMapFieldWithEnumValue.SampleEnum getStringOrThrow(
        java.lang.String key) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      java.util.Map<java.lang.String, java.lang.Integer> map =
          internalGetString().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return stringValueConverter.doForward(map.get(key));
    }
    /**
     * Use {@link #getStringValueMap()} instead.
     */
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, java.lang.Integer>
    getStringValue() {
      return getStringValueMap();
    }
    /**
     * <pre>
     * These are also proto keywords
     * </pre>
     *
     * <code>map&lt;string, .map_test.ReservedAsMapFieldWithEnumValue.SampleEnum&gt; string = 7;</code>
     */

    public java.util.Map<java.lang.String, java.lang.Integer>
    getStringValueMap() {
      return internalGetString().getMap();
    }
    /**
     * <pre>
     * These are also proto keywords
     * </pre>
     *
     * <code>map&lt;string, .map_test.ReservedAsMapFieldWithEnumValue.SampleEnum&gt; string = 7;</code>
     */

    public int getStringValueOrDefault(
        java.lang.String key,
        int defaultValue) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      java.util.Map<java.lang.String, java.lang.Integer> map =
          internalGetString().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <pre>
     * These are also proto keywords
     * </pre>
     *
     * <code>map&lt;string, .map_test.ReservedAsMapFieldWithEnumValue.SampleEnum&gt; string = 7;</code>
     */

    public int getStringValueOrThrow(
        java.lang.String key) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      java.util.Map<java.lang.String, java.lang.Integer> map =
          internalGetString().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    public static final int PACKAGE_FIELD_NUMBER = 8;
    private static final class PackageDefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          java.lang.String, java.lang.Integer> defaultEntry =
              com.google.protobuf.MapEntry
              .<java.lang.String, java.lang.Integer>newDefaultInstance(
                  map_test.MapTestProto.internal_static_map_test_ReservedAsMapFieldWithEnumValue_PackageEntry_descriptor, 
                  com.google.protobuf.WireFormat.FieldType.STRING,
                  "",
                  com.google.protobuf.WireFormat.FieldType.ENUM,
                  map_test.MapTestProto.ReservedAsMapFieldWithEnumValue.SampleEnum.A.getNumber());
    }
    private com.google.protobuf.MapField<
        java.lang.String, java.lang.Integer> package_;
    private com.google.protobuf.MapField<java.lang.String, java.lang.Integer>
    internalGetPackage() {
      if (package_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            PackageDefaultEntryHolder.defaultEntry);
      }
      return package_;
    }
    private static final
    com.google.protobuf.Internal.MapAdapter.Converter<
        java.lang.Integer, map_test.MapTestProto.ReservedAsMapFieldWithEnumValue.SampleEnum> packageValueConverter =
            com.google.protobuf.Internal.MapAdapter.newEnumConverter(
                map_test.MapTestProto.ReservedAsMapFieldWithEnumValue.SampleEnum.internalGetValueMap(),
                map_test.MapTestProto.ReservedAsMapFieldWithEnumValue.SampleEnum.UNRECOGNIZED);
    private static final java.util.Map<java.lang.String, map_test.MapTestProto.ReservedAsMapFieldWithEnumValue.SampleEnum>
    internalGetAdaptedPackageMap(
        java.util.Map<java.lang.String, java.lang.Integer> map) {
      return new com.google.protobuf.Internal.MapAdapter<
          java.lang.String, map_test.MapTestProto.ReservedAsMapFieldWithEnumValue.SampleEnum, java.lang.Integer>(
              map, packageValueConverter);
    }

    public int getPackageCount() {
      return internalGetPackage().getMap().size();
    }
    /**
     * <code>map&lt;string, .map_test.ReservedAsMapFieldWithEnumValue.SampleEnum&gt; package = 8;</code>
     */

    public boolean containsPackage(
        java.lang.String key) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      return internalGetPackage().getMap().containsKey(key);
    }
    /**
     * Use {@link #getPackageMap()} instead.
     */
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, map_test.MapTestProto.ReservedAsMapFieldWithEnumValue.SampleEnum>
    getPackage() {
      return getPackageMap();
    }
    /**
     * <code>map&lt;string, .map_test.ReservedAsMapFieldWithEnumValue.SampleEnum&gt; package = 8;</code>
     */

    public java.util.Map<java.lang.String, map_test.MapTestProto.ReservedAsMapFieldWithEnumValue.SampleEnum>
    getPackageMap() {
      return internalGetAdaptedPackageMap(
          internalGetPackage().getMap());}
    /**
     * <code>map&lt;string, .map_test.ReservedAsMapFieldWithEnumValue.SampleEnum&gt; package = 8;</code>
     */

    public map_test.MapTestProto.ReservedAsMapFieldWithEnumValue.SampleEnum getPackageOrDefault(
        java.lang.String key,
        map_test.MapTestProto.ReservedAsMapFieldWithEnumValue.SampleEnum defaultValue) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      java.util.Map<java.lang.String, java.lang.Integer> map =
          internalGetPackage().getMap();
      return map.containsKey(key)
             ? packageValueConverter.doForward(map.get(key))
             : defaultValue;
    }
    /**
     * <code>map&lt;string, .map_test.ReservedAsMapFieldWithEnumValue.SampleEnum&gt; package = 8;</code>
     */

    public map_test.MapTestProto.ReservedAsMapFieldWithEnumValue.SampleEnum getPackageOrThrow(
        java.lang.String key) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      java.util.Map<java.lang.String, java.lang.Integer> map =
          internalGetPackage().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return packageValueConverter.doForward(map.get(key));
    }
    /**
     * Use {@link #getPackageValueMap()} instead.
     */
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, java.lang.Integer>
    getPackageValue() {
      return getPackageValueMap();
    }
    /**
     * <code>map&lt;string, .map_test.ReservedAsMapFieldWithEnumValue.SampleEnum&gt; package = 8;</code>
     */

    public java.util.Map<java.lang.String, java.lang.Integer>
    getPackageValueMap() {
      return internalGetPackage().getMap();
    }
    /**
     * <code>map&lt;string, .map_test.ReservedAsMapFieldWithEnumValue.SampleEnum&gt; package = 8;</code>
     */

    public int getPackageValueOrDefault(
        java.lang.String key,
        int defaultValue) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      java.util.Map<java.lang.String, java.lang.Integer> map =
          internalGetPackage().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <code>map&lt;string, .map_test.ReservedAsMapFieldWithEnumValue.SampleEnum&gt; package = 8;</code>
     */

    public int getPackageValueOrThrow(
        java.lang.String key) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      java.util.Map<java.lang.String, java.lang.Integer> map =
          internalGetPackage().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    public static final int ENUM_FIELD_NUMBER = 9;
    private static final class EnumDefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          java.lang.String, java.lang.Integer> defaultEntry =
              com.google.protobuf.MapEntry
              .<java.lang.String, java.lang.Integer>newDefaultInstance(
                  map_test.MapTestProto.internal_static_map_test_ReservedAsMapFieldWithEnumValue_EnumEntry_descriptor, 
                  com.google.protobuf.WireFormat.FieldType.STRING,
                  "",
                  com.google.protobuf.WireFormat.FieldType.ENUM,
                  map_test.MapTestProto.ReservedAsMapFieldWithEnumValue.SampleEnum.A.getNumber());
    }
    private com.google.protobuf.MapField<
        java.lang.String, java.lang.Integer> enum_;
    private com.google.protobuf.MapField<java.lang.String, java.lang.Integer>
    internalGetEnum() {
      if (enum_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            EnumDefaultEntryHolder.defaultEntry);
      }
      return enum_;
    }
    private static final
    com.google.protobuf.Internal.MapAdapter.Converter<
        java.lang.Integer, map_test.MapTestProto.ReservedAsMapFieldWithEnumValue.SampleEnum> enumValueConverter =
            com.google.protobuf.Internal.MapAdapter.newEnumConverter(
                map_test.MapTestProto.ReservedAsMapFieldWithEnumValue.SampleEnum.internalGetValueMap(),
                map_test.MapTestProto.ReservedAsMapFieldWithEnumValue.SampleEnum.UNRECOGNIZED);
    private static final java.util.Map<java.lang.String, map_test.MapTestProto.ReservedAsMapFieldWithEnumValue.SampleEnum>
    internalGetAdaptedEnumMap(
        java.util.Map<java.lang.String, java.lang.Integer> map) {
      return new com.google.protobuf.Internal.MapAdapter<
          java.lang.String, map_test.MapTestProto.ReservedAsMapFieldWithEnumValue.SampleEnum, java.lang.Integer>(
              map, enumValueConverter);
    }

    public int getEnumCount() {
      return internalGetEnum().getMap().size();
    }
    /**
     * <pre>
     * Most recent Java reserved word
     * </pre>
     *
     * <code>map&lt;string, .map_test.ReservedAsMapFieldWithEnumValue.SampleEnum&gt; enum = 9;</code>
     */

    public boolean containsEnum(
        java.lang.String key) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      return internalGetEnum().getMap().containsKey(key);
    }
    /**
     * Use {@link #getEnumMap()} instead.
     */
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, map_test.MapTestProto.ReservedAsMapFieldWithEnumValue.SampleEnum>
    getEnum() {
      return getEnumMap();
    }
    /**
     * <pre>
     * Most recent Java reserved word
     * </pre>
     *
     * <code>map&lt;string, .map_test.ReservedAsMapFieldWithEnumValue.SampleEnum&gt; enum = 9;</code>
     */

    public java.util.Map<java.lang.String, map_test.MapTestProto.ReservedAsMapFieldWithEnumValue.SampleEnum>
    getEnumMap() {
      return internalGetAdaptedEnumMap(
          internalGetEnum().getMap());}
    /**
     * <pre>
     * Most recent Java reserved word
     * </pre>
     *
     * <code>map&lt;string, .map_test.ReservedAsMapFieldWithEnumValue.SampleEnum&gt; enum = 9;</code>
     */

    public map_test.MapTestProto.ReservedAsMapFieldWithEnumValue.SampleEnum getEnumOrDefault(
        java.lang.String key,
        map_test.MapTestProto.ReservedAsMapFieldWithEnumValue.SampleEnum defaultValue) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      java.util.Map<java.lang.String, java.lang.Integer> map =
          internalGetEnum().getMap();
      return map.containsKey(key)
             ? enumValueConverter.doForward(map.get(key))
             : defaultValue;
    }
    /**
     * <pre>
     * Most recent Java reserved word
     * </pre>
     *
     * <code>map&lt;string, .map_test.ReservedAsMapFieldWithEnumValue.SampleEnum&gt; enum = 9;</code>
     */

    public map_test.MapTestProto.ReservedAsMapFieldWithEnumValue.SampleEnum getEnumOrThrow(
        java.lang.String key) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      java.util.Map<java.lang.String, java.lang.Integer> map =
          internalGetEnum().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return enumValueConverter.doForward(map.get(key));
    }
    /**
     * Use {@link #getEnumValueMap()} instead.
     */
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, java.lang.Integer>
    getEnumValue() {
      return getEnumValueMap();
    }
    /**
     * <pre>
     * Most recent Java reserved word
     * </pre>
     *
     * <code>map&lt;string, .map_test.ReservedAsMapFieldWithEnumValue.SampleEnum&gt; enum = 9;</code>
     */

    public java.util.Map<java.lang.String, java.lang.Integer>
    getEnumValueMap() {
      return internalGetEnum().getMap();
    }
    /**
     * <pre>
     * Most recent Java reserved word
     * </pre>
     *
     * <code>map&lt;string, .map_test.ReservedAsMapFieldWithEnumValue.SampleEnum&gt; enum = 9;</code>
     */

    public int getEnumValueOrDefault(
        java.lang.String key,
        int defaultValue) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      java.util.Map<java.lang.String, java.lang.Integer> map =
          internalGetEnum().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <pre>
     * Most recent Java reserved word
     * </pre>
     *
     * <code>map&lt;string, .map_test.ReservedAsMapFieldWithEnumValue.SampleEnum&gt; enum = 9;</code>
     */

    public int getEnumValueOrThrow(
        java.lang.String key) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      java.util.Map<java.lang.String, java.lang.Integer> map =
          internalGetEnum().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    public static final int NULL_FIELD_NUMBER = 10;
    private static final class NullDefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          java.lang.String, java.lang.Integer> defaultEntry =
              com.google.protobuf.MapEntry
              .<java.lang.String, java.lang.Integer>newDefaultInstance(
                  map_test.MapTestProto.internal_static_map_test_ReservedAsMapFieldWithEnumValue_NullEntry_descriptor, 
                  com.google.protobuf.WireFormat.FieldType.STRING,
                  "",
                  com.google.protobuf.WireFormat.FieldType.ENUM,
                  map_test.MapTestProto.ReservedAsMapFieldWithEnumValue.SampleEnum.A.getNumber());
    }
    private com.google.protobuf.MapField<
        java.lang.String, java.lang.Integer> null_;
    private com.google.protobuf.MapField<java.lang.String, java.lang.Integer>
    internalGetNull() {
      if (null_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            NullDefaultEntryHolder.defaultEntry);
      }
      return null_;
    }
    private static final
    com.google.protobuf.Internal.MapAdapter.Converter<
        java.lang.Integer, map_test.MapTestProto.ReservedAsMapFieldWithEnumValue.SampleEnum> nullValueConverter =
            com.google.protobuf.Internal.MapAdapter.newEnumConverter(
                map_test.MapTestProto.ReservedAsMapFieldWithEnumValue.SampleEnum.internalGetValueMap(),
                map_test.MapTestProto.ReservedAsMapFieldWithEnumValue.SampleEnum.UNRECOGNIZED);
    private static final java.util.Map<java.lang.String, map_test.MapTestProto.ReservedAsMapFieldWithEnumValue.SampleEnum>
    internalGetAdaptedNullMap(
        java.util.Map<java.lang.String, java.lang.Integer> map) {
      return new com.google.protobuf.Internal.MapAdapter<
          java.lang.String, map_test.MapTestProto.ReservedAsMapFieldWithEnumValue.SampleEnum, java.lang.Integer>(
              map, nullValueConverter);
    }

    public int getNullCount() {
      return internalGetNull().getMap().size();
    }
    /**
     * <pre>
     * null is not a 'reserved word' per se but as a literal needs similar care
     * </pre>
     *
     * <code>map&lt;string, .map_test.ReservedAsMapFieldWithEnumValue.SampleEnum&gt; null = 10;</code>
     */

    public boolean containsNull(
        java.lang.String key) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      return internalGetNull().getMap().containsKey(key);
    }
    /**
     * Use {@link #getNullMap()} instead.
     */
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, map_test.MapTestProto.ReservedAsMapFieldWithEnumValue.SampleEnum>
    getNull() {
      return getNullMap();
    }
    /**
     * <pre>
     * null is not a 'reserved word' per se but as a literal needs similar care
     * </pre>
     *
     * <code>map&lt;string, .map_test.ReservedAsMapFieldWithEnumValue.SampleEnum&gt; null = 10;</code>
     */

    public java.util.Map<java.lang.String, map_test.MapTestProto.ReservedAsMapFieldWithEnumValue.SampleEnum>
    getNullMap() {
      return internalGetAdaptedNullMap(
          internalGetNull().getMap());}
    /**
     * <pre>
     * null is not a 'reserved word' per se but as a literal needs similar care
     * </pre>
     *
     * <code>map&lt;string, .map_test.ReservedAsMapFieldWithEnumValue.SampleEnum&gt; null = 10;</code>
     */

    public map_test.MapTestProto.ReservedAsMapFieldWithEnumValue.SampleEnum getNullOrDefault(
        java.lang.String key,
        map_test.MapTestProto.ReservedAsMapFieldWithEnumValue.SampleEnum defaultValue) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      java.util.Map<java.lang.String, java.lang.Integer> map =
          internalGetNull().getMap();
      return map.containsKey(key)
             ? nullValueConverter.doForward(map.get(key))
             : defaultValue;
    }
    /**
     * <pre>
     * null is not a 'reserved word' per se but as a literal needs similar care
     * </pre>
     *
     * <code>map&lt;string, .map_test.ReservedAsMapFieldWithEnumValue.SampleEnum&gt; null = 10;</code>
     */

    public map_test.MapTestProto.ReservedAsMapFieldWithEnumValue.SampleEnum getNullOrThrow(
        java.lang.String key) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      java.util.Map<java.lang.String, java.lang.Integer> map =
          internalGetNull().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return nullValueConverter.doForward(map.get(key));
    }
    /**
     * Use {@link #getNullValueMap()} instead.
     */
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, java.lang.Integer>
    getNullValue() {
      return getNullValueMap();
    }
    /**
     * <pre>
     * null is not a 'reserved word' per se but as a literal needs similar care
     * </pre>
     *
     * <code>map&lt;string, .map_test.ReservedAsMapFieldWithEnumValue.SampleEnum&gt; null = 10;</code>
     */

    public java.util.Map<java.lang.String, java.lang.Integer>
    getNullValueMap() {
      return internalGetNull().getMap();
    }
    /**
     * <pre>
     * null is not a 'reserved word' per se but as a literal needs similar care
     * </pre>
     *
     * <code>map&lt;string, .map_test.ReservedAsMapFieldWithEnumValue.SampleEnum&gt; null = 10;</code>
     */

    public int getNullValueOrDefault(
        java.lang.String key,
        int defaultValue) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      java.util.Map<java.lang.String, java.lang.Integer> map =
          internalGetNull().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <pre>
     * null is not a 'reserved word' per se but as a literal needs similar care
     * </pre>
     *
     * <code>map&lt;string, .map_test.ReservedAsMapFieldWithEnumValue.SampleEnum&gt; null = 10;</code>
     */

    public int getNullValueOrThrow(
        java.lang.String key) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      java.util.Map<java.lang.String, java.lang.Integer> map =
          internalGetNull().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      com.google.protobuf.GeneratedMessageV3
        .serializeStringMapTo(
          output,
          internalGetIf(),
          IfDefaultEntryHolder.defaultEntry,
          1);
      com.google.protobuf.GeneratedMessageV3
        .serializeStringMapTo(
          output,
          internalGetConst(),
          ConstDefaultEntryHolder.defaultEntry,
          2);
      com.google.protobuf.GeneratedMessageV3
        .serializeStringMapTo(
          output,
          internalGetPrivate(),
          PrivateDefaultEntryHolder.defaultEntry,
          3);
      com.google.protobuf.GeneratedMessageV3
        .serializeStringMapTo(
          output,
          internalGetClass_(),
          Class_DefaultEntryHolder.defaultEntry,
          4);
      com.google.protobuf.GeneratedMessageV3
        .serializeStringMapTo(
          output,
          internalGetInt(),
          IntDefaultEntryHolder.defaultEntry,
          5);
      com.google.protobuf.GeneratedMessageV3
        .serializeStringMapTo(
          output,
          internalGetVoid(),
          VoidDefaultEntryHolder.defaultEntry,
          6);
      com.google.protobuf.GeneratedMessageV3
        .serializeStringMapTo(
          output,
          internalGetString(),
          StringDefaultEntryHolder.defaultEntry,
          7);
      com.google.protobuf.GeneratedMessageV3
        .serializeStringMapTo(
          output,
          internalGetPackage(),
          PackageDefaultEntryHolder.defaultEntry,
          8);
      com.google.protobuf.GeneratedMessageV3
        .serializeStringMapTo(
          output,
          internalGetEnum(),
          EnumDefaultEntryHolder.defaultEntry,
          9);
      com.google.protobuf.GeneratedMessageV3
        .serializeStringMapTo(
          output,
          internalGetNull(),
          NullDefaultEntryHolder.defaultEntry,
          10);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (java.util.Map.Entry<java.lang.String, java.lang.Integer> entry
           : internalGetIf().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.String, java.lang.Integer>
        if__ = IfDefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(1, if__);
      }
      for (java.util.Map.Entry<java.lang.String, java.lang.Integer> entry
           : internalGetConst().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.String, java.lang.Integer>
        const__ = ConstDefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(2, const__);
      }
      for (java.util.Map.Entry<java.lang.String, java.lang.Integer> entry
           : internalGetPrivate().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.String, java.lang.Integer>
        private__ = PrivateDefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(3, private__);
      }
      for (java.util.Map.Entry<java.lang.String, java.lang.Integer> entry
           : internalGetClass_().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.String, java.lang.Integer>
        class___ = Class_DefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(4, class___);
      }
      for (java.util.Map.Entry<java.lang.String, java.lang.Integer> entry
           : internalGetInt().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.String, java.lang.Integer>
        int__ = IntDefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(5, int__);
      }
      for (java.util.Map.Entry<java.lang.String, java.lang.Integer> entry
           : internalGetVoid().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.String, java.lang.Integer>
        void__ = VoidDefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(6, void__);
      }
      for (java.util.Map.Entry<java.lang.String, java.lang.Integer> entry
           : internalGetString().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.String, java.lang.Integer>
        string__ = StringDefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(7, string__);
      }
      for (java.util.Map.Entry<java.lang.String, java.lang.Integer> entry
           : internalGetPackage().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.String, java.lang.Integer>
        package__ = PackageDefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(8, package__);
      }
      for (java.util.Map.Entry<java.lang.String, java.lang.Integer> entry
           : internalGetEnum().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.String, java.lang.Integer>
        enum__ = EnumDefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(9, enum__);
      }
      for (java.util.Map.Entry<java.lang.String, java.lang.Integer> entry
           : internalGetNull().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.String, java.lang.Integer>
        null__ = NullDefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10, null__);
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof map_test.MapTestProto.ReservedAsMapFieldWithEnumValue)) {
        return super.equals(obj);
      }
      map_test.MapTestProto.ReservedAsMapFieldWithEnumValue other = (map_test.MapTestProto.ReservedAsMapFieldWithEnumValue) obj;

      boolean result = true;
      result = result && internalGetIf().equals(
          other.internalGetIf());
      result = result && internalGetConst().equals(
          other.internalGetConst());
      result = result && internalGetPrivate().equals(
          other.internalGetPrivate());
      result = result && internalGetClass_().equals(
          other.internalGetClass_());
      result = result && internalGetInt().equals(
          other.internalGetInt());
      result = result && internalGetVoid().equals(
          other.internalGetVoid());
      result = result && internalGetString().equals(
          other.internalGetString());
      result = result && internalGetPackage().equals(
          other.internalGetPackage());
      result = result && internalGetEnum().equals(
          other.internalGetEnum());
      result = result && internalGetNull().equals(
          other.internalGetNull());
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (!internalGetIf().getMap().isEmpty()) {
        hash = (37 * hash) + IF_FIELD_NUMBER;
        hash = (53 * hash) + internalGetIf().hashCode();
      }
      if (!internalGetConst().getMap().isEmpty()) {
        hash = (37 * hash) + CONST_FIELD_NUMBER;
        hash = (53 * hash) + internalGetConst().hashCode();
      }
      if (!internalGetPrivate().getMap().isEmpty()) {
        hash = (37 * hash) + PRIVATE_FIELD_NUMBER;
        hash = (53 * hash) + internalGetPrivate().hashCode();
      }
      if (!internalGetClass_().getMap().isEmpty()) {
        hash = (37 * hash) + CLASS_FIELD_NUMBER;
        hash = (53 * hash) + internalGetClass_().hashCode();
      }
      if (!internalGetInt().getMap().isEmpty()) {
        hash = (37 * hash) + INT_FIELD_NUMBER;
        hash = (53 * hash) + internalGetInt().hashCode();
      }
      if (!internalGetVoid().getMap().isEmpty()) {
        hash = (37 * hash) + VOID_FIELD_NUMBER;
        hash = (53 * hash) + internalGetVoid().hashCode();
      }
      if (!internalGetString().getMap().isEmpty()) {
        hash = (37 * hash) + STRING_FIELD_NUMBER;
        hash = (53 * hash) + internalGetString().hashCode();
      }
      if (!internalGetPackage().getMap().isEmpty()) {
        hash = (37 * hash) + PACKAGE_FIELD_NUMBER;
        hash = (53 * hash) + internalGetPackage().hashCode();
      }
      if (!internalGetEnum().getMap().isEmpty()) {
        hash = (37 * hash) + ENUM_FIELD_NUMBER;
        hash = (53 * hash) + internalGetEnum().hashCode();
      }
      if (!internalGetNull().getMap().isEmpty()) {
        hash = (37 * hash) + NULL_FIELD_NUMBER;
        hash = (53 * hash) + internalGetNull().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static map_test.MapTestProto.ReservedAsMapFieldWithEnumValue parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static map_test.MapTestProto.ReservedAsMapFieldWithEnumValue parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static map_test.MapTestProto.ReservedAsMapFieldWithEnumValue parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static map_test.MapTestProto.ReservedAsMapFieldWithEnumValue parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static map_test.MapTestProto.ReservedAsMapFieldWithEnumValue parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static map_test.MapTestProto.ReservedAsMapFieldWithEnumValue parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static map_test.MapTestProto.ReservedAsMapFieldWithEnumValue parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static map_test.MapTestProto.ReservedAsMapFieldWithEnumValue parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static map_test.MapTestProto.ReservedAsMapFieldWithEnumValue parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static map_test.MapTestProto.ReservedAsMapFieldWithEnumValue parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static map_test.MapTestProto.ReservedAsMapFieldWithEnumValue parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static map_test.MapTestProto.ReservedAsMapFieldWithEnumValue parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(map_test.MapTestProto.ReservedAsMapFieldWithEnumValue prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code map_test.ReservedAsMapFieldWithEnumValue}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:map_test.ReservedAsMapFieldWithEnumValue)
        map_test.MapTestProto.ReservedAsMapFieldWithEnumValueOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return map_test.MapTestProto.internal_static_map_test_ReservedAsMapFieldWithEnumValue_descriptor;
      }

      @SuppressWarnings({"rawtypes"})
      protected com.google.protobuf.MapField internalGetMapField(
          int number) {
        switch (number) {
          case 1:
            return internalGetIf();
          case 2:
            return internalGetConst();
          case 3:
            return internalGetPrivate();
          case 4:
            return internalGetClass_();
          case 5:
            return internalGetInt();
          case 6:
            return internalGetVoid();
          case 7:
            return internalGetString();
          case 8:
            return internalGetPackage();
          case 9:
            return internalGetEnum();
          case 10:
            return internalGetNull();
          default:
            throw new RuntimeException(
                "Invalid map field number: " + number);
        }
      }
      @SuppressWarnings({"rawtypes"})
      protected com.google.protobuf.MapField internalGetMutableMapField(
          int number) {
        switch (number) {
          case 1:
            return internalGetMutableIf();
          case 2:
            return internalGetMutableConst();
          case 3:
            return internalGetMutablePrivate();
          case 4:
            return internalGetMutableClass_();
          case 5:
            return internalGetMutableInt();
          case 6:
            return internalGetMutableVoid();
          case 7:
            return internalGetMutableString();
          case 8:
            return internalGetMutablePackage();
          case 9:
            return internalGetMutableEnum();
          case 10:
            return internalGetMutableNull();
          default:
            throw new RuntimeException(
                "Invalid map field number: " + number);
        }
      }
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return map_test.MapTestProto.internal_static_map_test_ReservedAsMapFieldWithEnumValue_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                map_test.MapTestProto.ReservedAsMapFieldWithEnumValue.class, map_test.MapTestProto.ReservedAsMapFieldWithEnumValue.Builder.class);
      }

      // Construct using map_test.MapTestProto.ReservedAsMapFieldWithEnumValue.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        internalGetMutableIf().clear();
        internalGetMutableConst().clear();
        internalGetMutablePrivate().clear();
        internalGetMutableClass_().clear();
        internalGetMutableInt().clear();
        internalGetMutableVoid().clear();
        internalGetMutableString().clear();
        internalGetMutablePackage().clear();
        internalGetMutableEnum().clear();
        internalGetMutableNull().clear();
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return map_test.MapTestProto.internal_static_map_test_ReservedAsMapFieldWithEnumValue_descriptor;
      }

      public map_test.MapTestProto.ReservedAsMapFieldWithEnumValue getDefaultInstanceForType() {
        return map_test.MapTestProto.ReservedAsMapFieldWithEnumValue.getDefaultInstance();
      }

      public map_test.MapTestProto.ReservedAsMapFieldWithEnumValue build() {
        map_test.MapTestProto.ReservedAsMapFieldWithEnumValue result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public map_test.MapTestProto.ReservedAsMapFieldWithEnumValue buildPartial() {
        map_test.MapTestProto.ReservedAsMapFieldWithEnumValue result = new map_test.MapTestProto.ReservedAsMapFieldWithEnumValue(this);
        int from_bitField0_ = bitField0_;
        result.if_ = internalGetIf();
        result.if_.makeImmutable();
        result.const_ = internalGetConst();
        result.const_.makeImmutable();
        result.private_ = internalGetPrivate();
        result.private_.makeImmutable();
        result.class__ = internalGetClass_();
        result.class__.makeImmutable();
        result.int_ = internalGetInt();
        result.int_.makeImmutable();
        result.void_ = internalGetVoid();
        result.void_.makeImmutable();
        result.string_ = internalGetString();
        result.string_.makeImmutable();
        result.package_ = internalGetPackage();
        result.package_.makeImmutable();
        result.enum_ = internalGetEnum();
        result.enum_.makeImmutable();
        result.null_ = internalGetNull();
        result.null_.makeImmutable();
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof map_test.MapTestProto.ReservedAsMapFieldWithEnumValue) {
          return mergeFrom((map_test.MapTestProto.ReservedAsMapFieldWithEnumValue)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(map_test.MapTestProto.ReservedAsMapFieldWithEnumValue other) {
        if (other == map_test.MapTestProto.ReservedAsMapFieldWithEnumValue.getDefaultInstance()) return this;
        internalGetMutableIf().mergeFrom(
            other.internalGetIf());
        internalGetMutableConst().mergeFrom(
            other.internalGetConst());
        internalGetMutablePrivate().mergeFrom(
            other.internalGetPrivate());
        internalGetMutableClass_().mergeFrom(
            other.internalGetClass_());
        internalGetMutableInt().mergeFrom(
            other.internalGetInt());
        internalGetMutableVoid().mergeFrom(
            other.internalGetVoid());
        internalGetMutableString().mergeFrom(
            other.internalGetString());
        internalGetMutablePackage().mergeFrom(
            other.internalGetPackage());
        internalGetMutableEnum().mergeFrom(
            other.internalGetEnum());
        internalGetMutableNull().mergeFrom(
            other.internalGetNull());
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        map_test.MapTestProto.ReservedAsMapFieldWithEnumValue parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (map_test.MapTestProto.ReservedAsMapFieldWithEnumValue) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private com.google.protobuf.MapField<
          java.lang.String, java.lang.Integer> if_;
      private com.google.protobuf.MapField<java.lang.String, java.lang.Integer>
      internalGetIf() {
        if (if_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              IfDefaultEntryHolder.defaultEntry);
        }
        return if_;
      }
      private com.google.protobuf.MapField<java.lang.String, java.lang.Integer>
      internalGetMutableIf() {
        onChanged();;
        if (if_ == null) {
          if_ = com.google.protobuf.MapField.newMapField(
              IfDefaultEntryHolder.defaultEntry);
        }
        if (!if_.isMutable()) {
          if_ = if_.copy();
        }
        return if_;
      }

      public int getIfCount() {
        return internalGetIf().getMap().size();
      }
      /**
       * <code>map&lt;string, .map_test.ReservedAsMapFieldWithEnumValue.SampleEnum&gt; if = 1;</code>
       */

      public boolean containsIf(
          java.lang.String key) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        return internalGetIf().getMap().containsKey(key);
      }
      /**
       * Use {@link #getIfMap()} instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, map_test.MapTestProto.ReservedAsMapFieldWithEnumValue.SampleEnum>
      getIf() {
        return getIfMap();
      }
      /**
       * <code>map&lt;string, .map_test.ReservedAsMapFieldWithEnumValue.SampleEnum&gt; if = 1;</code>
       */

      public java.util.Map<java.lang.String, map_test.MapTestProto.ReservedAsMapFieldWithEnumValue.SampleEnum>
      getIfMap() {
        return internalGetAdaptedIfMap(
            internalGetIf().getMap());}
      /**
       * <code>map&lt;string, .map_test.ReservedAsMapFieldWithEnumValue.SampleEnum&gt; if = 1;</code>
       */

      public map_test.MapTestProto.ReservedAsMapFieldWithEnumValue.SampleEnum getIfOrDefault(
          java.lang.String key,
          map_test.MapTestProto.ReservedAsMapFieldWithEnumValue.SampleEnum defaultValue) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        java.util.Map<java.lang.String, java.lang.Integer> map =
            internalGetIf().getMap();
        return map.containsKey(key)
               ? ifValueConverter.doForward(map.get(key))
               : defaultValue;
      }
      /**
       * <code>map&lt;string, .map_test.ReservedAsMapFieldWithEnumValue.SampleEnum&gt; if = 1;</code>
       */

      public map_test.MapTestProto.ReservedAsMapFieldWithEnumValue.SampleEnum getIfOrThrow(
          java.lang.String key) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        java.util.Map<java.lang.String, java.lang.Integer> map =
            internalGetIf().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return ifValueConverter.doForward(map.get(key));
      }
      /**
       * Use {@link #getIfValueMap()} instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, java.lang.Integer>
      getIfValue() {
        return getIfValueMap();
      }
      /**
       * <code>map&lt;string, .map_test.ReservedAsMapFieldWithEnumValue.SampleEnum&gt; if = 1;</code>
       */

      public java.util.Map<java.lang.String, java.lang.Integer>
      getIfValueMap() {
        return internalGetIf().getMap();
      }
      /**
       * <code>map&lt;string, .map_test.ReservedAsMapFieldWithEnumValue.SampleEnum&gt; if = 1;</code>
       */

      public int getIfValueOrDefault(
          java.lang.String key,
          int defaultValue) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        java.util.Map<java.lang.String, java.lang.Integer> map =
            internalGetIf().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <code>map&lt;string, .map_test.ReservedAsMapFieldWithEnumValue.SampleEnum&gt; if = 1;</code>
       */

      public int getIfValueOrThrow(
          java.lang.String key) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        java.util.Map<java.lang.String, java.lang.Integer> map =
            internalGetIf().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }

      public Builder clearIf() {
        internalGetMutableIf().getMutableMap()
            .clear();
        return this;
      }
      /**
       * <code>map&lt;string, .map_test.ReservedAsMapFieldWithEnumValue.SampleEnum&gt; if = 1;</code>
       */

      public Builder removeIf(
          java.lang.String key) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        internalGetMutableIf().getMutableMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, map_test.MapTestProto.ReservedAsMapFieldWithEnumValue.SampleEnum>
      getMutableIf() {
        return internalGetAdaptedIfMap(
             internalGetMutableIf().getMutableMap());
      }
      /**
       * <code>map&lt;string, .map_test.ReservedAsMapFieldWithEnumValue.SampleEnum&gt; if = 1;</code>
       */
      public Builder putIf(
          java.lang.String key,
          map_test.MapTestProto.ReservedAsMapFieldWithEnumValue.SampleEnum value) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        if (value == null) { throw new java.lang.NullPointerException(); }
        internalGetMutableIf().getMutableMap()
            .put(key, ifValueConverter.doBackward(value));
        return this;
      }
      /**
       * <code>map&lt;string, .map_test.ReservedAsMapFieldWithEnumValue.SampleEnum&gt; if = 1;</code>
       */
      public Builder putAllIf(
          java.util.Map<java.lang.String, map_test.MapTestProto.ReservedAsMapFieldWithEnumValue.SampleEnum> values) {
        internalGetAdaptedIfMap(
            internalGetMutableIf().getMutableMap())
                .putAll(values);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, java.lang.Integer>
      getMutableIfValue() {
        return internalGetMutableIf().getMutableMap();
      }
      /**
       * <code>map&lt;string, .map_test.ReservedAsMapFieldWithEnumValue.SampleEnum&gt; if = 1;</code>
       */
      public Builder putIfValue(
          java.lang.String key,
          int value) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        if (map_test.MapTestProto.ReservedAsMapFieldWithEnumValue.SampleEnum.forNumber(value) == null) {
          throw new java.lang.IllegalArgumentException();
        }
        internalGetMutableIf().getMutableMap()
            .put(key, value);
        return this;
      }
      /**
       * <code>map&lt;string, .map_test.ReservedAsMapFieldWithEnumValue.SampleEnum&gt; if = 1;</code>
       */
      public Builder putAllIfValue(
          java.util.Map<java.lang.String, java.lang.Integer> values) {
        internalGetMutableIf().getMutableMap()
            .putAll(values);
        return this;
      }

      private com.google.protobuf.MapField<
          java.lang.String, java.lang.Integer> const_;
      private com.google.protobuf.MapField<java.lang.String, java.lang.Integer>
      internalGetConst() {
        if (const_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              ConstDefaultEntryHolder.defaultEntry);
        }
        return const_;
      }
      private com.google.protobuf.MapField<java.lang.String, java.lang.Integer>
      internalGetMutableConst() {
        onChanged();;
        if (const_ == null) {
          const_ = com.google.protobuf.MapField.newMapField(
              ConstDefaultEntryHolder.defaultEntry);
        }
        if (!const_.isMutable()) {
          const_ = const_.copy();
        }
        return const_;
      }

      public int getConstCount() {
        return internalGetConst().getMap().size();
      }
      /**
       * <code>map&lt;string, .map_test.ReservedAsMapFieldWithEnumValue.SampleEnum&gt; const = 2;</code>
       */

      public boolean containsConst(
          java.lang.String key) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        return internalGetConst().getMap().containsKey(key);
      }
      /**
       * Use {@link #getConstMap()} instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, map_test.MapTestProto.ReservedAsMapFieldWithEnumValue.SampleEnum>
      getConst() {
        return getConstMap();
      }
      /**
       * <code>map&lt;string, .map_test.ReservedAsMapFieldWithEnumValue.SampleEnum&gt; const = 2;</code>
       */

      public java.util.Map<java.lang.String, map_test.MapTestProto.ReservedAsMapFieldWithEnumValue.SampleEnum>
      getConstMap() {
        return internalGetAdaptedConstMap(
            internalGetConst().getMap());}
      /**
       * <code>map&lt;string, .map_test.ReservedAsMapFieldWithEnumValue.SampleEnum&gt; const = 2;</code>
       */

      public map_test.MapTestProto.ReservedAsMapFieldWithEnumValue.SampleEnum getConstOrDefault(
          java.lang.String key,
          map_test.MapTestProto.ReservedAsMapFieldWithEnumValue.SampleEnum defaultValue) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        java.util.Map<java.lang.String, java.lang.Integer> map =
            internalGetConst().getMap();
        return map.containsKey(key)
               ? constValueConverter.doForward(map.get(key))
               : defaultValue;
      }
      /**
       * <code>map&lt;string, .map_test.ReservedAsMapFieldWithEnumValue.SampleEnum&gt; const = 2;</code>
       */

      public map_test.MapTestProto.ReservedAsMapFieldWithEnumValue.SampleEnum getConstOrThrow(
          java.lang.String key) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        java.util.Map<java.lang.String, java.lang.Integer> map =
            internalGetConst().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return constValueConverter.doForward(map.get(key));
      }
      /**
       * Use {@link #getConstValueMap()} instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, java.lang.Integer>
      getConstValue() {
        return getConstValueMap();
      }
      /**
       * <code>map&lt;string, .map_test.ReservedAsMapFieldWithEnumValue.SampleEnum&gt; const = 2;</code>
       */

      public java.util.Map<java.lang.String, java.lang.Integer>
      getConstValueMap() {
        return internalGetConst().getMap();
      }
      /**
       * <code>map&lt;string, .map_test.ReservedAsMapFieldWithEnumValue.SampleEnum&gt; const = 2;</code>
       */

      public int getConstValueOrDefault(
          java.lang.String key,
          int defaultValue) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        java.util.Map<java.lang.String, java.lang.Integer> map =
            internalGetConst().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <code>map&lt;string, .map_test.ReservedAsMapFieldWithEnumValue.SampleEnum&gt; const = 2;</code>
       */

      public int getConstValueOrThrow(
          java.lang.String key) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        java.util.Map<java.lang.String, java.lang.Integer> map =
            internalGetConst().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }

      public Builder clearConst() {
        internalGetMutableConst().getMutableMap()
            .clear();
        return this;
      }
      /**
       * <code>map&lt;string, .map_test.ReservedAsMapFieldWithEnumValue.SampleEnum&gt; const = 2;</code>
       */

      public Builder removeConst(
          java.lang.String key) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        internalGetMutableConst().getMutableMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, map_test.MapTestProto.ReservedAsMapFieldWithEnumValue.SampleEnum>
      getMutableConst() {
        return internalGetAdaptedConstMap(
             internalGetMutableConst().getMutableMap());
      }
      /**
       * <code>map&lt;string, .map_test.ReservedAsMapFieldWithEnumValue.SampleEnum&gt; const = 2;</code>
       */
      public Builder putConst(
          java.lang.String key,
          map_test.MapTestProto.ReservedAsMapFieldWithEnumValue.SampleEnum value) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        if (value == null) { throw new java.lang.NullPointerException(); }
        internalGetMutableConst().getMutableMap()
            .put(key, constValueConverter.doBackward(value));
        return this;
      }
      /**
       * <code>map&lt;string, .map_test.ReservedAsMapFieldWithEnumValue.SampleEnum&gt; const = 2;</code>
       */
      public Builder putAllConst(
          java.util.Map<java.lang.String, map_test.MapTestProto.ReservedAsMapFieldWithEnumValue.SampleEnum> values) {
        internalGetAdaptedConstMap(
            internalGetMutableConst().getMutableMap())
                .putAll(values);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, java.lang.Integer>
      getMutableConstValue() {
        return internalGetMutableConst().getMutableMap();
      }
      /**
       * <code>map&lt;string, .map_test.ReservedAsMapFieldWithEnumValue.SampleEnum&gt; const = 2;</code>
       */
      public Builder putConstValue(
          java.lang.String key,
          int value) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        if (map_test.MapTestProto.ReservedAsMapFieldWithEnumValue.SampleEnum.forNumber(value) == null) {
          throw new java.lang.IllegalArgumentException();
        }
        internalGetMutableConst().getMutableMap()
            .put(key, value);
        return this;
      }
      /**
       * <code>map&lt;string, .map_test.ReservedAsMapFieldWithEnumValue.SampleEnum&gt; const = 2;</code>
       */
      public Builder putAllConstValue(
          java.util.Map<java.lang.String, java.lang.Integer> values) {
        internalGetMutableConst().getMutableMap()
            .putAll(values);
        return this;
      }

      private com.google.protobuf.MapField<
          java.lang.String, java.lang.Integer> private_;
      private com.google.protobuf.MapField<java.lang.String, java.lang.Integer>
      internalGetPrivate() {
        if (private_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              PrivateDefaultEntryHolder.defaultEntry);
        }
        return private_;
      }
      private com.google.protobuf.MapField<java.lang.String, java.lang.Integer>
      internalGetMutablePrivate() {
        onChanged();;
        if (private_ == null) {
          private_ = com.google.protobuf.MapField.newMapField(
              PrivateDefaultEntryHolder.defaultEntry);
        }
        if (!private_.isMutable()) {
          private_ = private_.copy();
        }
        return private_;
      }

      public int getPrivateCount() {
        return internalGetPrivate().getMap().size();
      }
      /**
       * <code>map&lt;string, .map_test.ReservedAsMapFieldWithEnumValue.SampleEnum&gt; private = 3;</code>
       */

      public boolean containsPrivate(
          java.lang.String key) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        return internalGetPrivate().getMap().containsKey(key);
      }
      /**
       * Use {@link #getPrivateMap()} instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, map_test.MapTestProto.ReservedAsMapFieldWithEnumValue.SampleEnum>
      getPrivate() {
        return getPrivateMap();
      }
      /**
       * <code>map&lt;string, .map_test.ReservedAsMapFieldWithEnumValue.SampleEnum&gt; private = 3;</code>
       */

      public java.util.Map<java.lang.String, map_test.MapTestProto.ReservedAsMapFieldWithEnumValue.SampleEnum>
      getPrivateMap() {
        return internalGetAdaptedPrivateMap(
            internalGetPrivate().getMap());}
      /**
       * <code>map&lt;string, .map_test.ReservedAsMapFieldWithEnumValue.SampleEnum&gt; private = 3;</code>
       */

      public map_test.MapTestProto.ReservedAsMapFieldWithEnumValue.SampleEnum getPrivateOrDefault(
          java.lang.String key,
          map_test.MapTestProto.ReservedAsMapFieldWithEnumValue.SampleEnum defaultValue) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        java.util.Map<java.lang.String, java.lang.Integer> map =
            internalGetPrivate().getMap();
        return map.containsKey(key)
               ? privateValueConverter.doForward(map.get(key))
               : defaultValue;
      }
      /**
       * <code>map&lt;string, .map_test.ReservedAsMapFieldWithEnumValue.SampleEnum&gt; private = 3;</code>
       */

      public map_test.MapTestProto.ReservedAsMapFieldWithEnumValue.SampleEnum getPrivateOrThrow(
          java.lang.String key) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        java.util.Map<java.lang.String, java.lang.Integer> map =
            internalGetPrivate().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return privateValueConverter.doForward(map.get(key));
      }
      /**
       * Use {@link #getPrivateValueMap()} instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, java.lang.Integer>
      getPrivateValue() {
        return getPrivateValueMap();
      }
      /**
       * <code>map&lt;string, .map_test.ReservedAsMapFieldWithEnumValue.SampleEnum&gt; private = 3;</code>
       */

      public java.util.Map<java.lang.String, java.lang.Integer>
      getPrivateValueMap() {
        return internalGetPrivate().getMap();
      }
      /**
       * <code>map&lt;string, .map_test.ReservedAsMapFieldWithEnumValue.SampleEnum&gt; private = 3;</code>
       */

      public int getPrivateValueOrDefault(
          java.lang.String key,
          int defaultValue) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        java.util.Map<java.lang.String, java.lang.Integer> map =
            internalGetPrivate().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <code>map&lt;string, .map_test.ReservedAsMapFieldWithEnumValue.SampleEnum&gt; private = 3;</code>
       */

      public int getPrivateValueOrThrow(
          java.lang.String key) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        java.util.Map<java.lang.String, java.lang.Integer> map =
            internalGetPrivate().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }

      public Builder clearPrivate() {
        internalGetMutablePrivate().getMutableMap()
            .clear();
        return this;
      }
      /**
       * <code>map&lt;string, .map_test.ReservedAsMapFieldWithEnumValue.SampleEnum&gt; private = 3;</code>
       */

      public Builder removePrivate(
          java.lang.String key) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        internalGetMutablePrivate().getMutableMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, map_test.MapTestProto.ReservedAsMapFieldWithEnumValue.SampleEnum>
      getMutablePrivate() {
        return internalGetAdaptedPrivateMap(
             internalGetMutablePrivate().getMutableMap());
      }
      /**
       * <code>map&lt;string, .map_test.ReservedAsMapFieldWithEnumValue.SampleEnum&gt; private = 3;</code>
       */
      public Builder putPrivate(
          java.lang.String key,
          map_test.MapTestProto.ReservedAsMapFieldWithEnumValue.SampleEnum value) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        if (value == null) { throw new java.lang.NullPointerException(); }
        internalGetMutablePrivate().getMutableMap()
            .put(key, privateValueConverter.doBackward(value));
        return this;
      }
      /**
       * <code>map&lt;string, .map_test.ReservedAsMapFieldWithEnumValue.SampleEnum&gt; private = 3;</code>
       */
      public Builder putAllPrivate(
          java.util.Map<java.lang.String, map_test.MapTestProto.ReservedAsMapFieldWithEnumValue.SampleEnum> values) {
        internalGetAdaptedPrivateMap(
            internalGetMutablePrivate().getMutableMap())
                .putAll(values);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, java.lang.Integer>
      getMutablePrivateValue() {
        return internalGetMutablePrivate().getMutableMap();
      }
      /**
       * <code>map&lt;string, .map_test.ReservedAsMapFieldWithEnumValue.SampleEnum&gt; private = 3;</code>
       */
      public Builder putPrivateValue(
          java.lang.String key,
          int value) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        if (map_test.MapTestProto.ReservedAsMapFieldWithEnumValue.SampleEnum.forNumber(value) == null) {
          throw new java.lang.IllegalArgumentException();
        }
        internalGetMutablePrivate().getMutableMap()
            .put(key, value);
        return this;
      }
      /**
       * <code>map&lt;string, .map_test.ReservedAsMapFieldWithEnumValue.SampleEnum&gt; private = 3;</code>
       */
      public Builder putAllPrivateValue(
          java.util.Map<java.lang.String, java.lang.Integer> values) {
        internalGetMutablePrivate().getMutableMap()
            .putAll(values);
        return this;
      }

      private com.google.protobuf.MapField<
          java.lang.String, java.lang.Integer> class__;
      private com.google.protobuf.MapField<java.lang.String, java.lang.Integer>
      internalGetClass_() {
        if (class__ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              Class_DefaultEntryHolder.defaultEntry);
        }
        return class__;
      }
      private com.google.protobuf.MapField<java.lang.String, java.lang.Integer>
      internalGetMutableClass_() {
        onChanged();;
        if (class__ == null) {
          class__ = com.google.protobuf.MapField.newMapField(
              Class_DefaultEntryHolder.defaultEntry);
        }
        if (!class__.isMutable()) {
          class__ = class__.copy();
        }
        return class__;
      }

      public int getClass_Count() {
        return internalGetClass_().getMap().size();
      }
      /**
       * <code>map&lt;string, .map_test.ReservedAsMapFieldWithEnumValue.SampleEnum&gt; class = 4;</code>
       */

      public boolean containsClass_(
          java.lang.String key) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        return internalGetClass_().getMap().containsKey(key);
      }
      /**
       * Use {@link #getClass_Map()} instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, map_test.MapTestProto.ReservedAsMapFieldWithEnumValue.SampleEnum>
      getClass_() {
        return getClass_Map();
      }
      /**
       * <code>map&lt;string, .map_test.ReservedAsMapFieldWithEnumValue.SampleEnum&gt; class = 4;</code>
       */

      public java.util.Map<java.lang.String, map_test.MapTestProto.ReservedAsMapFieldWithEnumValue.SampleEnum>
      getClass_Map() {
        return internalGetAdaptedClass_Map(
            internalGetClass_().getMap());}
      /**
       * <code>map&lt;string, .map_test.ReservedAsMapFieldWithEnumValue.SampleEnum&gt; class = 4;</code>
       */

      public map_test.MapTestProto.ReservedAsMapFieldWithEnumValue.SampleEnum getClass_OrDefault(
          java.lang.String key,
          map_test.MapTestProto.ReservedAsMapFieldWithEnumValue.SampleEnum defaultValue) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        java.util.Map<java.lang.String, java.lang.Integer> map =
            internalGetClass_().getMap();
        return map.containsKey(key)
               ? class_ValueConverter.doForward(map.get(key))
               : defaultValue;
      }
      /**
       * <code>map&lt;string, .map_test.ReservedAsMapFieldWithEnumValue.SampleEnum&gt; class = 4;</code>
       */

      public map_test.MapTestProto.ReservedAsMapFieldWithEnumValue.SampleEnum getClass_OrThrow(
          java.lang.String key) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        java.util.Map<java.lang.String, java.lang.Integer> map =
            internalGetClass_().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return class_ValueConverter.doForward(map.get(key));
      }
      /**
       * Use {@link #getClass_ValueMap()} instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, java.lang.Integer>
      getClass_Value() {
        return getClass_ValueMap();
      }
      /**
       * <code>map&lt;string, .map_test.ReservedAsMapFieldWithEnumValue.SampleEnum&gt; class = 4;</code>
       */

      public java.util.Map<java.lang.String, java.lang.Integer>
      getClass_ValueMap() {
        return internalGetClass_().getMap();
      }
      /**
       * <code>map&lt;string, .map_test.ReservedAsMapFieldWithEnumValue.SampleEnum&gt; class = 4;</code>
       */

      public int getClass_ValueOrDefault(
          java.lang.String key,
          int defaultValue) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        java.util.Map<java.lang.String, java.lang.Integer> map =
            internalGetClass_().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <code>map&lt;string, .map_test.ReservedAsMapFieldWithEnumValue.SampleEnum&gt; class = 4;</code>
       */

      public int getClass_ValueOrThrow(
          java.lang.String key) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        java.util.Map<java.lang.String, java.lang.Integer> map =
            internalGetClass_().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }

      public Builder clearClass_() {
        internalGetMutableClass_().getMutableMap()
            .clear();
        return this;
      }
      /**
       * <code>map&lt;string, .map_test.ReservedAsMapFieldWithEnumValue.SampleEnum&gt; class = 4;</code>
       */

      public Builder removeClass_(
          java.lang.String key) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        internalGetMutableClass_().getMutableMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, map_test.MapTestProto.ReservedAsMapFieldWithEnumValue.SampleEnum>
      getMutableClass_() {
        return internalGetAdaptedClass_Map(
             internalGetMutableClass_().getMutableMap());
      }
      /**
       * <code>map&lt;string, .map_test.ReservedAsMapFieldWithEnumValue.SampleEnum&gt; class = 4;</code>
       */
      public Builder putClass_(
          java.lang.String key,
          map_test.MapTestProto.ReservedAsMapFieldWithEnumValue.SampleEnum value) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        if (value == null) { throw new java.lang.NullPointerException(); }
        internalGetMutableClass_().getMutableMap()
            .put(key, class_ValueConverter.doBackward(value));
        return this;
      }
      /**
       * <code>map&lt;string, .map_test.ReservedAsMapFieldWithEnumValue.SampleEnum&gt; class = 4;</code>
       */
      public Builder putAllClass_(
          java.util.Map<java.lang.String, map_test.MapTestProto.ReservedAsMapFieldWithEnumValue.SampleEnum> values) {
        internalGetAdaptedClass_Map(
            internalGetMutableClass_().getMutableMap())
                .putAll(values);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, java.lang.Integer>
      getMutableClass_Value() {
        return internalGetMutableClass_().getMutableMap();
      }
      /**
       * <code>map&lt;string, .map_test.ReservedAsMapFieldWithEnumValue.SampleEnum&gt; class = 4;</code>
       */
      public Builder putClass_Value(
          java.lang.String key,
          int value) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        if (map_test.MapTestProto.ReservedAsMapFieldWithEnumValue.SampleEnum.forNumber(value) == null) {
          throw new java.lang.IllegalArgumentException();
        }
        internalGetMutableClass_().getMutableMap()
            .put(key, value);
        return this;
      }
      /**
       * <code>map&lt;string, .map_test.ReservedAsMapFieldWithEnumValue.SampleEnum&gt; class = 4;</code>
       */
      public Builder putAllClass_Value(
          java.util.Map<java.lang.String, java.lang.Integer> values) {
        internalGetMutableClass_().getMutableMap()
            .putAll(values);
        return this;
      }

      private com.google.protobuf.MapField<
          java.lang.String, java.lang.Integer> int_;
      private com.google.protobuf.MapField<java.lang.String, java.lang.Integer>
      internalGetInt() {
        if (int_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              IntDefaultEntryHolder.defaultEntry);
        }
        return int_;
      }
      private com.google.protobuf.MapField<java.lang.String, java.lang.Integer>
      internalGetMutableInt() {
        onChanged();;
        if (int_ == null) {
          int_ = com.google.protobuf.MapField.newMapField(
              IntDefaultEntryHolder.defaultEntry);
        }
        if (!int_.isMutable()) {
          int_ = int_.copy();
        }
        return int_;
      }

      public int getIntCount() {
        return internalGetInt().getMap().size();
      }
      /**
       * <code>map&lt;string, .map_test.ReservedAsMapFieldWithEnumValue.SampleEnum&gt; int = 5;</code>
       */

      public boolean containsInt(
          java.lang.String key) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        return internalGetInt().getMap().containsKey(key);
      }
      /**
       * Use {@link #getIntMap()} instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, map_test.MapTestProto.ReservedAsMapFieldWithEnumValue.SampleEnum>
      getInt() {
        return getIntMap();
      }
      /**
       * <code>map&lt;string, .map_test.ReservedAsMapFieldWithEnumValue.SampleEnum&gt; int = 5;</code>
       */

      public java.util.Map<java.lang.String, map_test.MapTestProto.ReservedAsMapFieldWithEnumValue.SampleEnum>
      getIntMap() {
        return internalGetAdaptedIntMap(
            internalGetInt().getMap());}
      /**
       * <code>map&lt;string, .map_test.ReservedAsMapFieldWithEnumValue.SampleEnum&gt; int = 5;</code>
       */

      public map_test.MapTestProto.ReservedAsMapFieldWithEnumValue.SampleEnum getIntOrDefault(
          java.lang.String key,
          map_test.MapTestProto.ReservedAsMapFieldWithEnumValue.SampleEnum defaultValue) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        java.util.Map<java.lang.String, java.lang.Integer> map =
            internalGetInt().getMap();
        return map.containsKey(key)
               ? intValueConverter.doForward(map.get(key))
               : defaultValue;
      }
      /**
       * <code>map&lt;string, .map_test.ReservedAsMapFieldWithEnumValue.SampleEnum&gt; int = 5;</code>
       */

      public map_test.MapTestProto.ReservedAsMapFieldWithEnumValue.SampleEnum getIntOrThrow(
          java.lang.String key) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        java.util.Map<java.lang.String, java.lang.Integer> map =
            internalGetInt().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return intValueConverter.doForward(map.get(key));
      }
      /**
       * Use {@link #getIntValueMap()} instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, java.lang.Integer>
      getIntValue() {
        return getIntValueMap();
      }
      /**
       * <code>map&lt;string, .map_test.ReservedAsMapFieldWithEnumValue.SampleEnum&gt; int = 5;</code>
       */

      public java.util.Map<java.lang.String, java.lang.Integer>
      getIntValueMap() {
        return internalGetInt().getMap();
      }
      /**
       * <code>map&lt;string, .map_test.ReservedAsMapFieldWithEnumValue.SampleEnum&gt; int = 5;</code>
       */

      public int getIntValueOrDefault(
          java.lang.String key,
          int defaultValue) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        java.util.Map<java.lang.String, java.lang.Integer> map =
            internalGetInt().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <code>map&lt;string, .map_test.ReservedAsMapFieldWithEnumValue.SampleEnum&gt; int = 5;</code>
       */

      public int getIntValueOrThrow(
          java.lang.String key) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        java.util.Map<java.lang.String, java.lang.Integer> map =
            internalGetInt().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }

      public Builder clearInt() {
        internalGetMutableInt().getMutableMap()
            .clear();
        return this;
      }
      /**
       * <code>map&lt;string, .map_test.ReservedAsMapFieldWithEnumValue.SampleEnum&gt; int = 5;</code>
       */

      public Builder removeInt(
          java.lang.String key) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        internalGetMutableInt().getMutableMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, map_test.MapTestProto.ReservedAsMapFieldWithEnumValue.SampleEnum>
      getMutableInt() {
        return internalGetAdaptedIntMap(
             internalGetMutableInt().getMutableMap());
      }
      /**
       * <code>map&lt;string, .map_test.ReservedAsMapFieldWithEnumValue.SampleEnum&gt; int = 5;</code>
       */
      public Builder putInt(
          java.lang.String key,
          map_test.MapTestProto.ReservedAsMapFieldWithEnumValue.SampleEnum value) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        if (value == null) { throw new java.lang.NullPointerException(); }
        internalGetMutableInt().getMutableMap()
            .put(key, intValueConverter.doBackward(value));
        return this;
      }
      /**
       * <code>map&lt;string, .map_test.ReservedAsMapFieldWithEnumValue.SampleEnum&gt; int = 5;</code>
       */
      public Builder putAllInt(
          java.util.Map<java.lang.String, map_test.MapTestProto.ReservedAsMapFieldWithEnumValue.SampleEnum> values) {
        internalGetAdaptedIntMap(
            internalGetMutableInt().getMutableMap())
                .putAll(values);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, java.lang.Integer>
      getMutableIntValue() {
        return internalGetMutableInt().getMutableMap();
      }
      /**
       * <code>map&lt;string, .map_test.ReservedAsMapFieldWithEnumValue.SampleEnum&gt; int = 5;</code>
       */
      public Builder putIntValue(
          java.lang.String key,
          int value) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        if (map_test.MapTestProto.ReservedAsMapFieldWithEnumValue.SampleEnum.forNumber(value) == null) {
          throw new java.lang.IllegalArgumentException();
        }
        internalGetMutableInt().getMutableMap()
            .put(key, value);
        return this;
      }
      /**
       * <code>map&lt;string, .map_test.ReservedAsMapFieldWithEnumValue.SampleEnum&gt; int = 5;</code>
       */
      public Builder putAllIntValue(
          java.util.Map<java.lang.String, java.lang.Integer> values) {
        internalGetMutableInt().getMutableMap()
            .putAll(values);
        return this;
      }

      private com.google.protobuf.MapField<
          java.lang.String, java.lang.Integer> void_;
      private com.google.protobuf.MapField<java.lang.String, java.lang.Integer>
      internalGetVoid() {
        if (void_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              VoidDefaultEntryHolder.defaultEntry);
        }
        return void_;
      }
      private com.google.protobuf.MapField<java.lang.String, java.lang.Integer>
      internalGetMutableVoid() {
        onChanged();;
        if (void_ == null) {
          void_ = com.google.protobuf.MapField.newMapField(
              VoidDefaultEntryHolder.defaultEntry);
        }
        if (!void_.isMutable()) {
          void_ = void_.copy();
        }
        return void_;
      }

      public int getVoidCount() {
        return internalGetVoid().getMap().size();
      }
      /**
       * <code>map&lt;string, .map_test.ReservedAsMapFieldWithEnumValue.SampleEnum&gt; void = 6;</code>
       */

      public boolean containsVoid(
          java.lang.String key) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        return internalGetVoid().getMap().containsKey(key);
      }
      /**
       * Use {@link #getVoidMap()} instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, map_test.MapTestProto.ReservedAsMapFieldWithEnumValue.SampleEnum>
      getVoid() {
        return getVoidMap();
      }
      /**
       * <code>map&lt;string, .map_test.ReservedAsMapFieldWithEnumValue.SampleEnum&gt; void = 6;</code>
       */

      public java.util.Map<java.lang.String, map_test.MapTestProto.ReservedAsMapFieldWithEnumValue.SampleEnum>
      getVoidMap() {
        return internalGetAdaptedVoidMap(
            internalGetVoid().getMap());}
      /**
       * <code>map&lt;string, .map_test.ReservedAsMapFieldWithEnumValue.SampleEnum&gt; void = 6;</code>
       */

      public map_test.MapTestProto.ReservedAsMapFieldWithEnumValue.SampleEnum getVoidOrDefault(
          java.lang.String key,
          map_test.MapTestProto.ReservedAsMapFieldWithEnumValue.SampleEnum defaultValue) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        java.util.Map<java.lang.String, java.lang.Integer> map =
            internalGetVoid().getMap();
        return map.containsKey(key)
               ? voidValueConverter.doForward(map.get(key))
               : defaultValue;
      }
      /**
       * <code>map&lt;string, .map_test.ReservedAsMapFieldWithEnumValue.SampleEnum&gt; void = 6;</code>
       */

      public map_test.MapTestProto.ReservedAsMapFieldWithEnumValue.SampleEnum getVoidOrThrow(
          java.lang.String key) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        java.util.Map<java.lang.String, java.lang.Integer> map =
            internalGetVoid().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return voidValueConverter.doForward(map.get(key));
      }
      /**
       * Use {@link #getVoidValueMap()} instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, java.lang.Integer>
      getVoidValue() {
        return getVoidValueMap();
      }
      /**
       * <code>map&lt;string, .map_test.ReservedAsMapFieldWithEnumValue.SampleEnum&gt; void = 6;</code>
       */

      public java.util.Map<java.lang.String, java.lang.Integer>
      getVoidValueMap() {
        return internalGetVoid().getMap();
      }
      /**
       * <code>map&lt;string, .map_test.ReservedAsMapFieldWithEnumValue.SampleEnum&gt; void = 6;</code>
       */

      public int getVoidValueOrDefault(
          java.lang.String key,
          int defaultValue) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        java.util.Map<java.lang.String, java.lang.Integer> map =
            internalGetVoid().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <code>map&lt;string, .map_test.ReservedAsMapFieldWithEnumValue.SampleEnum&gt; void = 6;</code>
       */

      public int getVoidValueOrThrow(
          java.lang.String key) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        java.util.Map<java.lang.String, java.lang.Integer> map =
            internalGetVoid().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }

      public Builder clearVoid() {
        internalGetMutableVoid().getMutableMap()
            .clear();
        return this;
      }
      /**
       * <code>map&lt;string, .map_test.ReservedAsMapFieldWithEnumValue.SampleEnum&gt; void = 6;</code>
       */

      public Builder removeVoid(
          java.lang.String key) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        internalGetMutableVoid().getMutableMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, map_test.MapTestProto.ReservedAsMapFieldWithEnumValue.SampleEnum>
      getMutableVoid() {
        return internalGetAdaptedVoidMap(
             internalGetMutableVoid().getMutableMap());
      }
      /**
       * <code>map&lt;string, .map_test.ReservedAsMapFieldWithEnumValue.SampleEnum&gt; void = 6;</code>
       */
      public Builder putVoid(
          java.lang.String key,
          map_test.MapTestProto.ReservedAsMapFieldWithEnumValue.SampleEnum value) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        if (value == null) { throw new java.lang.NullPointerException(); }
        internalGetMutableVoid().getMutableMap()
            .put(key, voidValueConverter.doBackward(value));
        return this;
      }
      /**
       * <code>map&lt;string, .map_test.ReservedAsMapFieldWithEnumValue.SampleEnum&gt; void = 6;</code>
       */
      public Builder putAllVoid(
          java.util.Map<java.lang.String, map_test.MapTestProto.ReservedAsMapFieldWithEnumValue.SampleEnum> values) {
        internalGetAdaptedVoidMap(
            internalGetMutableVoid().getMutableMap())
                .putAll(values);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, java.lang.Integer>
      getMutableVoidValue() {
        return internalGetMutableVoid().getMutableMap();
      }
      /**
       * <code>map&lt;string, .map_test.ReservedAsMapFieldWithEnumValue.SampleEnum&gt; void = 6;</code>
       */
      public Builder putVoidValue(
          java.lang.String key,
          int value) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        if (map_test.MapTestProto.ReservedAsMapFieldWithEnumValue.SampleEnum.forNumber(value) == null) {
          throw new java.lang.IllegalArgumentException();
        }
        internalGetMutableVoid().getMutableMap()
            .put(key, value);
        return this;
      }
      /**
       * <code>map&lt;string, .map_test.ReservedAsMapFieldWithEnumValue.SampleEnum&gt; void = 6;</code>
       */
      public Builder putAllVoidValue(
          java.util.Map<java.lang.String, java.lang.Integer> values) {
        internalGetMutableVoid().getMutableMap()
            .putAll(values);
        return this;
      }

      private com.google.protobuf.MapField<
          java.lang.String, java.lang.Integer> string_;
      private com.google.protobuf.MapField<java.lang.String, java.lang.Integer>
      internalGetString() {
        if (string_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              StringDefaultEntryHolder.defaultEntry);
        }
        return string_;
      }
      private com.google.protobuf.MapField<java.lang.String, java.lang.Integer>
      internalGetMutableString() {
        onChanged();;
        if (string_ == null) {
          string_ = com.google.protobuf.MapField.newMapField(
              StringDefaultEntryHolder.defaultEntry);
        }
        if (!string_.isMutable()) {
          string_ = string_.copy();
        }
        return string_;
      }

      public int getStringCount() {
        return internalGetString().getMap().size();
      }
      /**
       * <pre>
       * These are also proto keywords
       * </pre>
       *
       * <code>map&lt;string, .map_test.ReservedAsMapFieldWithEnumValue.SampleEnum&gt; string = 7;</code>
       */

      public boolean containsString(
          java.lang.String key) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        return internalGetString().getMap().containsKey(key);
      }
      /**
       * Use {@link #getStringMap()} instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, map_test.MapTestProto.ReservedAsMapFieldWithEnumValue.SampleEnum>
      getString() {
        return getStringMap();
      }
      /**
       * <pre>
       * These are also proto keywords
       * </pre>
       *
       * <code>map&lt;string, .map_test.ReservedAsMapFieldWithEnumValue.SampleEnum&gt; string = 7;</code>
       */

      public java.util.Map<java.lang.String, map_test.MapTestProto.ReservedAsMapFieldWithEnumValue.SampleEnum>
      getStringMap() {
        return internalGetAdaptedStringMap(
            internalGetString().getMap());}
      /**
       * <pre>
       * These are also proto keywords
       * </pre>
       *
       * <code>map&lt;string, .map_test.ReservedAsMapFieldWithEnumValue.SampleEnum&gt; string = 7;</code>
       */

      public map_test.MapTestProto.ReservedAsMapFieldWithEnumValue.SampleEnum getStringOrDefault(
          java.lang.String key,
          map_test.MapTestProto.ReservedAsMapFieldWithEnumValue.SampleEnum defaultValue) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        java.util.Map<java.lang.String, java.lang.Integer> map =
            internalGetString().getMap();
        return map.containsKey(key)
               ? stringValueConverter.doForward(map.get(key))
               : defaultValue;
      }
      /**
       * <pre>
       * These are also proto keywords
       * </pre>
       *
       * <code>map&lt;string, .map_test.ReservedAsMapFieldWithEnumValue.SampleEnum&gt; string = 7;</code>
       */

      public map_test.MapTestProto.ReservedAsMapFieldWithEnumValue.SampleEnum getStringOrThrow(
          java.lang.String key) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        java.util.Map<java.lang.String, java.lang.Integer> map =
            internalGetString().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return stringValueConverter.doForward(map.get(key));
      }
      /**
       * Use {@link #getStringValueMap()} instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, java.lang.Integer>
      getStringValue() {
        return getStringValueMap();
      }
      /**
       * <pre>
       * These are also proto keywords
       * </pre>
       *
       * <code>map&lt;string, .map_test.ReservedAsMapFieldWithEnumValue.SampleEnum&gt; string = 7;</code>
       */

      public java.util.Map<java.lang.String, java.lang.Integer>
      getStringValueMap() {
        return internalGetString().getMap();
      }
      /**
       * <pre>
       * These are also proto keywords
       * </pre>
       *
       * <code>map&lt;string, .map_test.ReservedAsMapFieldWithEnumValue.SampleEnum&gt; string = 7;</code>
       */

      public int getStringValueOrDefault(
          java.lang.String key,
          int defaultValue) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        java.util.Map<java.lang.String, java.lang.Integer> map =
            internalGetString().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <pre>
       * These are also proto keywords
       * </pre>
       *
       * <code>map&lt;string, .map_test.ReservedAsMapFieldWithEnumValue.SampleEnum&gt; string = 7;</code>
       */

      public int getStringValueOrThrow(
          java.lang.String key) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        java.util.Map<java.lang.String, java.lang.Integer> map =
            internalGetString().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }

      public Builder clearString() {
        internalGetMutableString().getMutableMap()
            .clear();
        return this;
      }
      /**
       * <pre>
       * These are also proto keywords
       * </pre>
       *
       * <code>map&lt;string, .map_test.ReservedAsMapFieldWithEnumValue.SampleEnum&gt; string = 7;</code>
       */

      public Builder removeString(
          java.lang.String key) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        internalGetMutableString().getMutableMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, map_test.MapTestProto.ReservedAsMapFieldWithEnumValue.SampleEnum>
      getMutableString() {
        return internalGetAdaptedStringMap(
             internalGetMutableString().getMutableMap());
      }
      /**
       * <pre>
       * These are also proto keywords
       * </pre>
       *
       * <code>map&lt;string, .map_test.ReservedAsMapFieldWithEnumValue.SampleEnum&gt; string = 7;</code>
       */
      public Builder putString(
          java.lang.String key,
          map_test.MapTestProto.ReservedAsMapFieldWithEnumValue.SampleEnum value) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        if (value == null) { throw new java.lang.NullPointerException(); }
        internalGetMutableString().getMutableMap()
            .put(key, stringValueConverter.doBackward(value));
        return this;
      }
      /**
       * <pre>
       * These are also proto keywords
       * </pre>
       *
       * <code>map&lt;string, .map_test.ReservedAsMapFieldWithEnumValue.SampleEnum&gt; string = 7;</code>
       */
      public Builder putAllString(
          java.util.Map<java.lang.String, map_test.MapTestProto.ReservedAsMapFieldWithEnumValue.SampleEnum> values) {
        internalGetAdaptedStringMap(
            internalGetMutableString().getMutableMap())
                .putAll(values);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, java.lang.Integer>
      getMutableStringValue() {
        return internalGetMutableString().getMutableMap();
      }
      /**
       * <pre>
       * These are also proto keywords
       * </pre>
       *
       * <code>map&lt;string, .map_test.ReservedAsMapFieldWithEnumValue.SampleEnum&gt; string = 7;</code>
       */
      public Builder putStringValue(
          java.lang.String key,
          int value) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        if (map_test.MapTestProto.ReservedAsMapFieldWithEnumValue.SampleEnum.forNumber(value) == null) {
          throw new java.lang.IllegalArgumentException();
        }
        internalGetMutableString().getMutableMap()
            .put(key, value);
        return this;
      }
      /**
       * <pre>
       * These are also proto keywords
       * </pre>
       *
       * <code>map&lt;string, .map_test.ReservedAsMapFieldWithEnumValue.SampleEnum&gt; string = 7;</code>
       */
      public Builder putAllStringValue(
          java.util.Map<java.lang.String, java.lang.Integer> values) {
        internalGetMutableString().getMutableMap()
            .putAll(values);
        return this;
      }

      private com.google.protobuf.MapField<
          java.lang.String, java.lang.Integer> package_;
      private com.google.protobuf.MapField<java.lang.String, java.lang.Integer>
      internalGetPackage() {
        if (package_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              PackageDefaultEntryHolder.defaultEntry);
        }
        return package_;
      }
      private com.google.protobuf.MapField<java.lang.String, java.lang.Integer>
      internalGetMutablePackage() {
        onChanged();;
        if (package_ == null) {
          package_ = com.google.protobuf.MapField.newMapField(
              PackageDefaultEntryHolder.defaultEntry);
        }
        if (!package_.isMutable()) {
          package_ = package_.copy();
        }
        return package_;
      }

      public int getPackageCount() {
        return internalGetPackage().getMap().size();
      }
      /**
       * <code>map&lt;string, .map_test.ReservedAsMapFieldWithEnumValue.SampleEnum&gt; package = 8;</code>
       */

      public boolean containsPackage(
          java.lang.String key) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        return internalGetPackage().getMap().containsKey(key);
      }
      /**
       * Use {@link #getPackageMap()} instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, map_test.MapTestProto.ReservedAsMapFieldWithEnumValue.SampleEnum>
      getPackage() {
        return getPackageMap();
      }
      /**
       * <code>map&lt;string, .map_test.ReservedAsMapFieldWithEnumValue.SampleEnum&gt; package = 8;</code>
       */

      public java.util.Map<java.lang.String, map_test.MapTestProto.ReservedAsMapFieldWithEnumValue.SampleEnum>
      getPackageMap() {
        return internalGetAdaptedPackageMap(
            internalGetPackage().getMap());}
      /**
       * <code>map&lt;string, .map_test.ReservedAsMapFieldWithEnumValue.SampleEnum&gt; package = 8;</code>
       */

      public map_test.MapTestProto.ReservedAsMapFieldWithEnumValue.SampleEnum getPackageOrDefault(
          java.lang.String key,
          map_test.MapTestProto.ReservedAsMapFieldWithEnumValue.SampleEnum defaultValue) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        java.util.Map<java.lang.String, java.lang.Integer> map =
            internalGetPackage().getMap();
        return map.containsKey(key)
               ? packageValueConverter.doForward(map.get(key))
               : defaultValue;
      }
      /**
       * <code>map&lt;string, .map_test.ReservedAsMapFieldWithEnumValue.SampleEnum&gt; package = 8;</code>
       */

      public map_test.MapTestProto.ReservedAsMapFieldWithEnumValue.SampleEnum getPackageOrThrow(
          java.lang.String key) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        java.util.Map<java.lang.String, java.lang.Integer> map =
            internalGetPackage().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return packageValueConverter.doForward(map.get(key));
      }
      /**
       * Use {@link #getPackageValueMap()} instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, java.lang.Integer>
      getPackageValue() {
        return getPackageValueMap();
      }
      /**
       * <code>map&lt;string, .map_test.ReservedAsMapFieldWithEnumValue.SampleEnum&gt; package = 8;</code>
       */

      public java.util.Map<java.lang.String, java.lang.Integer>
      getPackageValueMap() {
        return internalGetPackage().getMap();
      }
      /**
       * <code>map&lt;string, .map_test.ReservedAsMapFieldWithEnumValue.SampleEnum&gt; package = 8;</code>
       */

      public int getPackageValueOrDefault(
          java.lang.String key,
          int defaultValue) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        java.util.Map<java.lang.String, java.lang.Integer> map =
            internalGetPackage().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <code>map&lt;string, .map_test.ReservedAsMapFieldWithEnumValue.SampleEnum&gt; package = 8;</code>
       */

      public int getPackageValueOrThrow(
          java.lang.String key) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        java.util.Map<java.lang.String, java.lang.Integer> map =
            internalGetPackage().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }

      public Builder clearPackage() {
        internalGetMutablePackage().getMutableMap()
            .clear();
        return this;
      }
      /**
       * <code>map&lt;string, .map_test.ReservedAsMapFieldWithEnumValue.SampleEnum&gt; package = 8;</code>
       */

      public Builder removePackage(
          java.lang.String key) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        internalGetMutablePackage().getMutableMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, map_test.MapTestProto.ReservedAsMapFieldWithEnumValue.SampleEnum>
      getMutablePackage() {
        return internalGetAdaptedPackageMap(
             internalGetMutablePackage().getMutableMap());
      }
      /**
       * <code>map&lt;string, .map_test.ReservedAsMapFieldWithEnumValue.SampleEnum&gt; package = 8;</code>
       */
      public Builder putPackage(
          java.lang.String key,
          map_test.MapTestProto.ReservedAsMapFieldWithEnumValue.SampleEnum value) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        if (value == null) { throw new java.lang.NullPointerException(); }
        internalGetMutablePackage().getMutableMap()
            .put(key, packageValueConverter.doBackward(value));
        return this;
      }
      /**
       * <code>map&lt;string, .map_test.ReservedAsMapFieldWithEnumValue.SampleEnum&gt; package = 8;</code>
       */
      public Builder putAllPackage(
          java.util.Map<java.lang.String, map_test.MapTestProto.ReservedAsMapFieldWithEnumValue.SampleEnum> values) {
        internalGetAdaptedPackageMap(
            internalGetMutablePackage().getMutableMap())
                .putAll(values);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, java.lang.Integer>
      getMutablePackageValue() {
        return internalGetMutablePackage().getMutableMap();
      }
      /**
       * <code>map&lt;string, .map_test.ReservedAsMapFieldWithEnumValue.SampleEnum&gt; package = 8;</code>
       */
      public Builder putPackageValue(
          java.lang.String key,
          int value) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        if (map_test.MapTestProto.ReservedAsMapFieldWithEnumValue.SampleEnum.forNumber(value) == null) {
          throw new java.lang.IllegalArgumentException();
        }
        internalGetMutablePackage().getMutableMap()
            .put(key, value);
        return this;
      }
      /**
       * <code>map&lt;string, .map_test.ReservedAsMapFieldWithEnumValue.SampleEnum&gt; package = 8;</code>
       */
      public Builder putAllPackageValue(
          java.util.Map<java.lang.String, java.lang.Integer> values) {
        internalGetMutablePackage().getMutableMap()
            .putAll(values);
        return this;
      }

      private com.google.protobuf.MapField<
          java.lang.String, java.lang.Integer> enum_;
      private com.google.protobuf.MapField<java.lang.String, java.lang.Integer>
      internalGetEnum() {
        if (enum_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              EnumDefaultEntryHolder.defaultEntry);
        }
        return enum_;
      }
      private com.google.protobuf.MapField<java.lang.String, java.lang.Integer>
      internalGetMutableEnum() {
        onChanged();;
        if (enum_ == null) {
          enum_ = com.google.protobuf.MapField.newMapField(
              EnumDefaultEntryHolder.defaultEntry);
        }
        if (!enum_.isMutable()) {
          enum_ = enum_.copy();
        }
        return enum_;
      }

      public int getEnumCount() {
        return internalGetEnum().getMap().size();
      }
      /**
       * <pre>
       * Most recent Java reserved word
       * </pre>
       *
       * <code>map&lt;string, .map_test.ReservedAsMapFieldWithEnumValue.SampleEnum&gt; enum = 9;</code>
       */

      public boolean containsEnum(
          java.lang.String key) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        return internalGetEnum().getMap().containsKey(key);
      }
      /**
       * Use {@link #getEnumMap()} instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, map_test.MapTestProto.ReservedAsMapFieldWithEnumValue.SampleEnum>
      getEnum() {
        return getEnumMap();
      }
      /**
       * <pre>
       * Most recent Java reserved word
       * </pre>
       *
       * <code>map&lt;string, .map_test.ReservedAsMapFieldWithEnumValue.SampleEnum&gt; enum = 9;</code>
       */

      public java.util.Map<java.lang.String, map_test.MapTestProto.ReservedAsMapFieldWithEnumValue.SampleEnum>
      getEnumMap() {
        return internalGetAdaptedEnumMap(
            internalGetEnum().getMap());}
      /**
       * <pre>
       * Most recent Java reserved word
       * </pre>
       *
       * <code>map&lt;string, .map_test.ReservedAsMapFieldWithEnumValue.SampleEnum&gt; enum = 9;</code>
       */

      public map_test.MapTestProto.ReservedAsMapFieldWithEnumValue.SampleEnum getEnumOrDefault(
          java.lang.String key,
          map_test.MapTestProto.ReservedAsMapFieldWithEnumValue.SampleEnum defaultValue) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        java.util.Map<java.lang.String, java.lang.Integer> map =
            internalGetEnum().getMap();
        return map.containsKey(key)
               ? enumValueConverter.doForward(map.get(key))
               : defaultValue;
      }
      /**
       * <pre>
       * Most recent Java reserved word
       * </pre>
       *
       * <code>map&lt;string, .map_test.ReservedAsMapFieldWithEnumValue.SampleEnum&gt; enum = 9;</code>
       */

      public map_test.MapTestProto.ReservedAsMapFieldWithEnumValue.SampleEnum getEnumOrThrow(
          java.lang.String key) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        java.util.Map<java.lang.String, java.lang.Integer> map =
            internalGetEnum().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return enumValueConverter.doForward(map.get(key));
      }
      /**
       * Use {@link #getEnumValueMap()} instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, java.lang.Integer>
      getEnumValue() {
        return getEnumValueMap();
      }
      /**
       * <pre>
       * Most recent Java reserved word
       * </pre>
       *
       * <code>map&lt;string, .map_test.ReservedAsMapFieldWithEnumValue.SampleEnum&gt; enum = 9;</code>
       */

      public java.util.Map<java.lang.String, java.lang.Integer>
      getEnumValueMap() {
        return internalGetEnum().getMap();
      }
      /**
       * <pre>
       * Most recent Java reserved word
       * </pre>
       *
       * <code>map&lt;string, .map_test.ReservedAsMapFieldWithEnumValue.SampleEnum&gt; enum = 9;</code>
       */

      public int getEnumValueOrDefault(
          java.lang.String key,
          int defaultValue) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        java.util.Map<java.lang.String, java.lang.Integer> map =
            internalGetEnum().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <pre>
       * Most recent Java reserved word
       * </pre>
       *
       * <code>map&lt;string, .map_test.ReservedAsMapFieldWithEnumValue.SampleEnum&gt; enum = 9;</code>
       */

      public int getEnumValueOrThrow(
          java.lang.String key) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        java.util.Map<java.lang.String, java.lang.Integer> map =
            internalGetEnum().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }

      public Builder clearEnum() {
        internalGetMutableEnum().getMutableMap()
            .clear();
        return this;
      }
      /**
       * <pre>
       * Most recent Java reserved word
       * </pre>
       *
       * <code>map&lt;string, .map_test.ReservedAsMapFieldWithEnumValue.SampleEnum&gt; enum = 9;</code>
       */

      public Builder removeEnum(
          java.lang.String key) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        internalGetMutableEnum().getMutableMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, map_test.MapTestProto.ReservedAsMapFieldWithEnumValue.SampleEnum>
      getMutableEnum() {
        return internalGetAdaptedEnumMap(
             internalGetMutableEnum().getMutableMap());
      }
      /**
       * <pre>
       * Most recent Java reserved word
       * </pre>
       *
       * <code>map&lt;string, .map_test.ReservedAsMapFieldWithEnumValue.SampleEnum&gt; enum = 9;</code>
       */
      public Builder putEnum(
          java.lang.String key,
          map_test.MapTestProto.ReservedAsMapFieldWithEnumValue.SampleEnum value) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        if (value == null) { throw new java.lang.NullPointerException(); }
        internalGetMutableEnum().getMutableMap()
            .put(key, enumValueConverter.doBackward(value));
        return this;
      }
      /**
       * <pre>
       * Most recent Java reserved word
       * </pre>
       *
       * <code>map&lt;string, .map_test.ReservedAsMapFieldWithEnumValue.SampleEnum&gt; enum = 9;</code>
       */
      public Builder putAllEnum(
          java.util.Map<java.lang.String, map_test.MapTestProto.ReservedAsMapFieldWithEnumValue.SampleEnum> values) {
        internalGetAdaptedEnumMap(
            internalGetMutableEnum().getMutableMap())
                .putAll(values);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, java.lang.Integer>
      getMutableEnumValue() {
        return internalGetMutableEnum().getMutableMap();
      }
      /**
       * <pre>
       * Most recent Java reserved word
       * </pre>
       *
       * <code>map&lt;string, .map_test.ReservedAsMapFieldWithEnumValue.SampleEnum&gt; enum = 9;</code>
       */
      public Builder putEnumValue(
          java.lang.String key,
          int value) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        if (map_test.MapTestProto.ReservedAsMapFieldWithEnumValue.SampleEnum.forNumber(value) == null) {
          throw new java.lang.IllegalArgumentException();
        }
        internalGetMutableEnum().getMutableMap()
            .put(key, value);
        return this;
      }
      /**
       * <pre>
       * Most recent Java reserved word
       * </pre>
       *
       * <code>map&lt;string, .map_test.ReservedAsMapFieldWithEnumValue.SampleEnum&gt; enum = 9;</code>
       */
      public Builder putAllEnumValue(
          java.util.Map<java.lang.String, java.lang.Integer> values) {
        internalGetMutableEnum().getMutableMap()
            .putAll(values);
        return this;
      }

      private com.google.protobuf.MapField<
          java.lang.String, java.lang.Integer> null_;
      private com.google.protobuf.MapField<java.lang.String, java.lang.Integer>
      internalGetNull() {
        if (null_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              NullDefaultEntryHolder.defaultEntry);
        }
        return null_;
      }
      private com.google.protobuf.MapField<java.lang.String, java.lang.Integer>
      internalGetMutableNull() {
        onChanged();;
        if (null_ == null) {
          null_ = com.google.protobuf.MapField.newMapField(
              NullDefaultEntryHolder.defaultEntry);
        }
        if (!null_.isMutable()) {
          null_ = null_.copy();
        }
        return null_;
      }

      public int getNullCount() {
        return internalGetNull().getMap().size();
      }
      /**
       * <pre>
       * null is not a 'reserved word' per se but as a literal needs similar care
       * </pre>
       *
       * <code>map&lt;string, .map_test.ReservedAsMapFieldWithEnumValue.SampleEnum&gt; null = 10;</code>
       */

      public boolean containsNull(
          java.lang.String key) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        return internalGetNull().getMap().containsKey(key);
      }
      /**
       * Use {@link #getNullMap()} instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, map_test.MapTestProto.ReservedAsMapFieldWithEnumValue.SampleEnum>
      getNull() {
        return getNullMap();
      }
      /**
       * <pre>
       * null is not a 'reserved word' per se but as a literal needs similar care
       * </pre>
       *
       * <code>map&lt;string, .map_test.ReservedAsMapFieldWithEnumValue.SampleEnum&gt; null = 10;</code>
       */

      public java.util.Map<java.lang.String, map_test.MapTestProto.ReservedAsMapFieldWithEnumValue.SampleEnum>
      getNullMap() {
        return internalGetAdaptedNullMap(
            internalGetNull().getMap());}
      /**
       * <pre>
       * null is not a 'reserved word' per se but as a literal needs similar care
       * </pre>
       *
       * <code>map&lt;string, .map_test.ReservedAsMapFieldWithEnumValue.SampleEnum&gt; null = 10;</code>
       */

      public map_test.MapTestProto.ReservedAsMapFieldWithEnumValue.SampleEnum getNullOrDefault(
          java.lang.String key,
          map_test.MapTestProto.ReservedAsMapFieldWithEnumValue.SampleEnum defaultValue) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        java.util.Map<java.lang.String, java.lang.Integer> map =
            internalGetNull().getMap();
        return map.containsKey(key)
               ? nullValueConverter.doForward(map.get(key))
               : defaultValue;
      }
      /**
       * <pre>
       * null is not a 'reserved word' per se but as a literal needs similar care
       * </pre>
       *
       * <code>map&lt;string, .map_test.ReservedAsMapFieldWithEnumValue.SampleEnum&gt; null = 10;</code>
       */

      public map_test.MapTestProto.ReservedAsMapFieldWithEnumValue.SampleEnum getNullOrThrow(
          java.lang.String key) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        java.util.Map<java.lang.String, java.lang.Integer> map =
            internalGetNull().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return nullValueConverter.doForward(map.get(key));
      }
      /**
       * Use {@link #getNullValueMap()} instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, java.lang.Integer>
      getNullValue() {
        return getNullValueMap();
      }
      /**
       * <pre>
       * null is not a 'reserved word' per se but as a literal needs similar care
       * </pre>
       *
       * <code>map&lt;string, .map_test.ReservedAsMapFieldWithEnumValue.SampleEnum&gt; null = 10;</code>
       */

      public java.util.Map<java.lang.String, java.lang.Integer>
      getNullValueMap() {
        return internalGetNull().getMap();
      }
      /**
       * <pre>
       * null is not a 'reserved word' per se but as a literal needs similar care
       * </pre>
       *
       * <code>map&lt;string, .map_test.ReservedAsMapFieldWithEnumValue.SampleEnum&gt; null = 10;</code>
       */

      public int getNullValueOrDefault(
          java.lang.String key,
          int defaultValue) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        java.util.Map<java.lang.String, java.lang.Integer> map =
            internalGetNull().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <pre>
       * null is not a 'reserved word' per se but as a literal needs similar care
       * </pre>
       *
       * <code>map&lt;string, .map_test.ReservedAsMapFieldWithEnumValue.SampleEnum&gt; null = 10;</code>
       */

      public int getNullValueOrThrow(
          java.lang.String key) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        java.util.Map<java.lang.String, java.lang.Integer> map =
            internalGetNull().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }

      public Builder clearNull() {
        internalGetMutableNull().getMutableMap()
            .clear();
        return this;
      }
      /**
       * <pre>
       * null is not a 'reserved word' per se but as a literal needs similar care
       * </pre>
       *
       * <code>map&lt;string, .map_test.ReservedAsMapFieldWithEnumValue.SampleEnum&gt; null = 10;</code>
       */

      public Builder removeNull(
          java.lang.String key) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        internalGetMutableNull().getMutableMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, map_test.MapTestProto.ReservedAsMapFieldWithEnumValue.SampleEnum>
      getMutableNull() {
        return internalGetAdaptedNullMap(
             internalGetMutableNull().getMutableMap());
      }
      /**
       * <pre>
       * null is not a 'reserved word' per se but as a literal needs similar care
       * </pre>
       *
       * <code>map&lt;string, .map_test.ReservedAsMapFieldWithEnumValue.SampleEnum&gt; null = 10;</code>
       */
      public Builder putNull(
          java.lang.String key,
          map_test.MapTestProto.ReservedAsMapFieldWithEnumValue.SampleEnum value) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        if (value == null) { throw new java.lang.NullPointerException(); }
        internalGetMutableNull().getMutableMap()
            .put(key, nullValueConverter.doBackward(value));
        return this;
      }
      /**
       * <pre>
       * null is not a 'reserved word' per se but as a literal needs similar care
       * </pre>
       *
       * <code>map&lt;string, .map_test.ReservedAsMapFieldWithEnumValue.SampleEnum&gt; null = 10;</code>
       */
      public Builder putAllNull(
          java.util.Map<java.lang.String, map_test.MapTestProto.ReservedAsMapFieldWithEnumValue.SampleEnum> values) {
        internalGetAdaptedNullMap(
            internalGetMutableNull().getMutableMap())
                .putAll(values);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, java.lang.Integer>
      getMutableNullValue() {
        return internalGetMutableNull().getMutableMap();
      }
      /**
       * <pre>
       * null is not a 'reserved word' per se but as a literal needs similar care
       * </pre>
       *
       * <code>map&lt;string, .map_test.ReservedAsMapFieldWithEnumValue.SampleEnum&gt; null = 10;</code>
       */
      public Builder putNullValue(
          java.lang.String key,
          int value) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        if (map_test.MapTestProto.ReservedAsMapFieldWithEnumValue.SampleEnum.forNumber(value) == null) {
          throw new java.lang.IllegalArgumentException();
        }
        internalGetMutableNull().getMutableMap()
            .put(key, value);
        return this;
      }
      /**
       * <pre>
       * null is not a 'reserved word' per se but as a literal needs similar care
       * </pre>
       *
       * <code>map&lt;string, .map_test.ReservedAsMapFieldWithEnumValue.SampleEnum&gt; null = 10;</code>
       */
      public Builder putAllNullValue(
          java.util.Map<java.lang.String, java.lang.Integer> values) {
        internalGetMutableNull().getMutableMap()
            .putAll(values);
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:map_test.ReservedAsMapFieldWithEnumValue)
    }

    // @@protoc_insertion_point(class_scope:map_test.ReservedAsMapFieldWithEnumValue)
    private static final map_test.MapTestProto.ReservedAsMapFieldWithEnumValue DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new map_test.MapTestProto.ReservedAsMapFieldWithEnumValue();
    }

    public static map_test.MapTestProto.ReservedAsMapFieldWithEnumValue getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<ReservedAsMapFieldWithEnumValue>
        PARSER = new com.google.protobuf.AbstractParser<ReservedAsMapFieldWithEnumValue>() {
      public ReservedAsMapFieldWithEnumValue parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new ReservedAsMapFieldWithEnumValue(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<ReservedAsMapFieldWithEnumValue> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ReservedAsMapFieldWithEnumValue> getParserForType() {
      return PARSER;
    }

    public map_test.MapTestProto.ReservedAsMapFieldWithEnumValue getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_map_test_TestMap_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_map_test_TestMap_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_map_test_TestMap_MessageValue_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_map_test_TestMap_MessageValue_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_map_test_TestMap_Int32ToInt32FieldEntry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_map_test_TestMap_Int32ToInt32FieldEntry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_map_test_TestMap_Int32ToStringFieldEntry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_map_test_TestMap_Int32ToStringFieldEntry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_map_test_TestMap_Int32ToBytesFieldEntry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_map_test_TestMap_Int32ToBytesFieldEntry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_map_test_TestMap_Int32ToEnumFieldEntry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_map_test_TestMap_Int32ToEnumFieldEntry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_map_test_TestMap_Int32ToMessageFieldEntry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_map_test_TestMap_Int32ToMessageFieldEntry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_map_test_TestMap_StringToInt32FieldEntry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_map_test_TestMap_StringToInt32FieldEntry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_map_test_TestMap_Uint32ToInt32FieldEntry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_map_test_TestMap_Uint32ToInt32FieldEntry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_map_test_TestMap_Int64ToInt32FieldEntry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_map_test_TestMap_Int64ToInt32FieldEntry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_map_test_TestOnChangeEventPropagation_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_map_test_TestOnChangeEventPropagation_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_map_test_BizarroTestMap_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_map_test_BizarroTestMap_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_map_test_BizarroTestMap_Int32ToInt32FieldEntry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_map_test_BizarroTestMap_Int32ToInt32FieldEntry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_map_test_BizarroTestMap_Int32ToStringFieldEntry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_map_test_BizarroTestMap_Int32ToStringFieldEntry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_map_test_BizarroTestMap_Int32ToBytesFieldEntry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_map_test_BizarroTestMap_Int32ToBytesFieldEntry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_map_test_BizarroTestMap_Int32ToEnumFieldEntry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_map_test_BizarroTestMap_Int32ToEnumFieldEntry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_map_test_BizarroTestMap_Int32ToMessageFieldEntry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_map_test_BizarroTestMap_Int32ToMessageFieldEntry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_map_test_BizarroTestMap_StringToInt32FieldEntry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_map_test_BizarroTestMap_StringToInt32FieldEntry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_map_test_ReservedAsMapField_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_map_test_ReservedAsMapField_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_map_test_ReservedAsMapField_IfEntry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_map_test_ReservedAsMapField_IfEntry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_map_test_ReservedAsMapField_ConstEntry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_map_test_ReservedAsMapField_ConstEntry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_map_test_ReservedAsMapField_PrivateEntry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_map_test_ReservedAsMapField_PrivateEntry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_map_test_ReservedAsMapField_ClassEntry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_map_test_ReservedAsMapField_ClassEntry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_map_test_ReservedAsMapField_IntEntry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_map_test_ReservedAsMapField_IntEntry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_map_test_ReservedAsMapField_VoidEntry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_map_test_ReservedAsMapField_VoidEntry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_map_test_ReservedAsMapField_StringEntry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_map_test_ReservedAsMapField_StringEntry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_map_test_ReservedAsMapField_PackageEntry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_map_test_ReservedAsMapField_PackageEntry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_map_test_ReservedAsMapField_EnumEntry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_map_test_ReservedAsMapField_EnumEntry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_map_test_ReservedAsMapField_NullEntry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_map_test_ReservedAsMapField_NullEntry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_map_test_ReservedAsMapFieldWithEnumValue_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_map_test_ReservedAsMapFieldWithEnumValue_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_map_test_ReservedAsMapFieldWithEnumValue_IfEntry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_map_test_ReservedAsMapFieldWithEnumValue_IfEntry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_map_test_ReservedAsMapFieldWithEnumValue_ConstEntry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_map_test_ReservedAsMapFieldWithEnumValue_ConstEntry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_map_test_ReservedAsMapFieldWithEnumValue_PrivateEntry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_map_test_ReservedAsMapFieldWithEnumValue_PrivateEntry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_map_test_ReservedAsMapFieldWithEnumValue_ClassEntry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_map_test_ReservedAsMapFieldWithEnumValue_ClassEntry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_map_test_ReservedAsMapFieldWithEnumValue_IntEntry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_map_test_ReservedAsMapFieldWithEnumValue_IntEntry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_map_test_ReservedAsMapFieldWithEnumValue_VoidEntry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_map_test_ReservedAsMapFieldWithEnumValue_VoidEntry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_map_test_ReservedAsMapFieldWithEnumValue_StringEntry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_map_test_ReservedAsMapFieldWithEnumValue_StringEntry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_map_test_ReservedAsMapFieldWithEnumValue_PackageEntry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_map_test_ReservedAsMapFieldWithEnumValue_PackageEntry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_map_test_ReservedAsMapFieldWithEnumValue_EnumEntry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_map_test_ReservedAsMapFieldWithEnumValue_EnumEntry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_map_test_ReservedAsMapFieldWithEnumValue_NullEntry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_map_test_ReservedAsMapFieldWithEnumValue_NullEntry_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\"com/google/protobuf/map_test.proto\022\010ma" +
      "p_test\"\262\t\n\007TestMap\022F\n\024int32_to_int32_fie" +
      "ld\030\001 \003(\0132(.map_test.TestMap.Int32ToInt32" +
      "FieldEntry\022H\n\025int32_to_string_field\030\002 \003(" +
      "\0132).map_test.TestMap.Int32ToStringFieldE" +
      "ntry\022F\n\024int32_to_bytes_field\030\003 \003(\0132(.map" +
      "_test.TestMap.Int32ToBytesFieldEntry\022D\n\023" +
      "int32_to_enum_field\030\004 \003(\0132\'.map_test.Tes" +
      "tMap.Int32ToEnumFieldEntry\022J\n\026int32_to_m" +
      "essage_field\030\005 \003(\0132*.map_test.TestMap.In",
      "t32ToMessageFieldEntry\022H\n\025string_to_int3" +
      "2_field\030\006 \003(\0132).map_test.TestMap.StringT" +
      "oInt32FieldEntry\022H\n\025uint32_to_int32_fiel" +
      "d\030\007 \003(\0132).map_test.TestMap.Uint32ToInt32" +
      "FieldEntry\022F\n\024int64_to_int32_field\030\010 \003(\013" +
      "2(.map_test.TestMap.Int64ToInt32FieldEnt" +
      "ry\032\035\n\014MessageValue\022\r\n\005value\030\001 \001(\005\0328\n\026Int" +
      "32ToInt32FieldEntry\022\013\n\003key\030\001 \001(\005\022\r\n\005valu" +
      "e\030\002 \001(\005:\0028\001\0329\n\027Int32ToStringFieldEntry\022\013" +
      "\n\003key\030\001 \001(\005\022\r\n\005value\030\002 \001(\t:\0028\001\0328\n\026Int32T",
      "oBytesFieldEntry\022\013\n\003key\030\001 \001(\005\022\r\n\005value\030\002" +
      " \001(\014:\0028\001\032T\n\025Int32ToEnumFieldEntry\022\013\n\003key" +
      "\030\001 \001(\005\022*\n\005value\030\002 \001(\0162\033.map_test.TestMap" +
      ".EnumValue:\0028\001\032Z\n\030Int32ToMessageFieldEnt" +
      "ry\022\013\n\003key\030\001 \001(\005\022-\n\005value\030\002 \001(\0132\036.map_tes" +
      "t.TestMap.MessageValue:\0028\001\0329\n\027StringToIn" +
      "t32FieldEntry\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001(" +
      "\005:\0028\001\0329\n\027Uint32ToInt32FieldEntry\022\013\n\003key\030" +
      "\001 \001(\r\022\r\n\005value\030\002 \001(\005:\0028\001\0328\n\026Int64ToInt32" +
      "FieldEntry\022\013\n\003key\030\001 \001(\003\022\r\n\005value\030\002 \001(\005:\002",
      "8\001\"/\n\tEnumValue\022\007\n\003FOO\020\000\022\007\n\003BAR\020\001\022\007\n\003BAZ" +
      "\020\002\022\007\n\003QUX\020\003\"K\n\034TestOnChangeEventPropagat" +
      "ion\022+\n\020optional_message\030\001 \001(\0132\021.map_test" +
      ".TestMap\"\317\006\n\016BizarroTestMap\022M\n\024int32_to_" +
      "int32_field\030\001 \003(\0132/.map_test.BizarroTest" +
      "Map.Int32ToInt32FieldEntry\022O\n\025int32_to_s" +
      "tring_field\030\002 \003(\01320.map_test.BizarroTest" +
      "Map.Int32ToStringFieldEntry\022M\n\024int32_to_" +
      "bytes_field\030\003 \003(\0132/.map_test.BizarroTest" +
      "Map.Int32ToBytesFieldEntry\022K\n\023int32_to_e",
      "num_field\030\004 \003(\0132..map_test.BizarroTestMa" +
      "p.Int32ToEnumFieldEntry\022Q\n\026int32_to_mess" +
      "age_field\030\005 \003(\01321.map_test.BizarroTestMa" +
      "p.Int32ToMessageFieldEntry\022O\n\025string_to_" +
      "int32_field\030\006 \003(\01320.map_test.BizarroTest" +
      "Map.StringToInt32FieldEntry\0328\n\026Int32ToIn" +
      "t32FieldEntry\022\013\n\003key\030\001 \001(\005\022\r\n\005value\030\002 \001(" +
      "\014:\0028\001\0329\n\027Int32ToStringFieldEntry\022\013\n\003key\030" +
      "\001 \001(\t\022\r\n\005value\030\002 \001(\005:\0028\001\0328\n\026Int32ToBytes" +
      "FieldEntry\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001(\005:\002",
      "8\001\0327\n\025Int32ToEnumFieldEntry\022\013\n\003key\030\001 \001(\t" +
      "\022\r\n\005value\030\002 \001(\014:\0028\001\032:\n\030Int32ToMessageFie" +
      "ldEntry\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001(\014:\0028\001\032" +
      "9\n\027StringToInt32FieldEntry\022\013\n\003key\030\001 \001(\t\022" +
      "\r\n\005value\030\002 \001(\014:\0028\001\"\207\010\n\022ReservedAsMapFiel" +
      "d\0220\n\002if\030\001 \003(\0132$.map_test.ReservedAsMapFi" +
      "eld.IfEntry\0226\n\005const\030\002 \003(\0132\'.map_test.Re" +
      "servedAsMapField.ConstEntry\022:\n\007private\030\003" +
      " \003(\0132).map_test.ReservedAsMapField.Priva" +
      "teEntry\0226\n\005class\030\004 \003(\0132\'.map_test.Reserv",
      "edAsMapField.ClassEntry\0222\n\003int\030\005 \003(\0132%.m" +
      "ap_test.ReservedAsMapField.IntEntry\0224\n\004v" +
      "oid\030\006 \003(\0132&.map_test.ReservedAsMapField." +
      "VoidEntry\0228\n\006string\030\007 \003(\0132(.map_test.Res" +
      "ervedAsMapField.StringEntry\022:\n\007package\030\010" +
      " \003(\0132).map_test.ReservedAsMapField.Packa" +
      "geEntry\0224\n\004enum\030\t \003(\0132&.map_test.Reserve" +
      "dAsMapField.EnumEntry\0224\n\004null\030\n \003(\0132&.ma" +
      "p_test.ReservedAsMapField.NullEntry\032)\n\007I" +
      "fEntry\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001(\r:\0028\001\032,",
      "\n\nConstEntry\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001(\r" +
      ":\0028\001\032.\n\014PrivateEntry\022\013\n\003key\030\001 \001(\t\022\r\n\005val" +
      "ue\030\002 \001(\r:\0028\001\032,\n\nClassEntry\022\013\n\003key\030\001 \001(\t\022" +
      "\r\n\005value\030\002 \001(\r:\0028\001\032*\n\010IntEntry\022\013\n\003key\030\001 " +
      "\001(\t\022\r\n\005value\030\002 \001(\r:\0028\001\032+\n\tVoidEntry\022\013\n\003k" +
      "ey\030\001 \001(\t\022\r\n\005value\030\002 \001(\r:\0028\001\032-\n\013StringEnt" +
      "ry\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001(\r:\0028\001\032.\n\014Pa" +
      "ckageEntry\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001(\r:\002" +
      "8\001\032+\n\tEnumEntry\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 " +
      "\001(\r:\0028\001\032+\n\tNullEntry\022\013\n\003key\030\001 \001(\t\022\r\n\005val",
      "ue\030\002 \001(\r:\0028\001\"\316\r\n\037ReservedAsMapFieldWithE" +
      "numValue\022=\n\002if\030\001 \003(\01321.map_test.Reserved" +
      "AsMapFieldWithEnumValue.IfEntry\022C\n\005const" +
      "\030\002 \003(\01324.map_test.ReservedAsMapFieldWith" +
      "EnumValue.ConstEntry\022G\n\007private\030\003 \003(\01326." +
      "map_test.ReservedAsMapFieldWithEnumValue" +
      ".PrivateEntry\022C\n\005class\030\004 \003(\01324.map_test." +
      "ReservedAsMapFieldWithEnumValue.ClassEnt" +
      "ry\022?\n\003int\030\005 \003(\01322.map_test.ReservedAsMap" +
      "FieldWithEnumValue.IntEntry\022A\n\004void\030\006 \003(",
      "\01323.map_test.ReservedAsMapFieldWithEnumV" +
      "alue.VoidEntry\022E\n\006string\030\007 \003(\01325.map_tes" +
      "t.ReservedAsMapFieldWithEnumValue.String" +
      "Entry\022G\n\007package\030\010 \003(\01326.map_test.Reserv" +
      "edAsMapFieldWithEnumValue.PackageEntry\022A" +
      "\n\004enum\030\t \003(\01323.map_test.ReservedAsMapFie" +
      "ldWithEnumValue.EnumEntry\022A\n\004null\030\n \003(\0132" +
      "3.map_test.ReservedAsMapFieldWithEnumVal" +
      "ue.NullEntry\032_\n\007IfEntry\022\013\n\003key\030\001 \001(\t\022C\n\005" +
      "value\030\002 \001(\01624.map_test.ReservedAsMapFiel",
      "dWithEnumValue.SampleEnum:\0028\001\032b\n\nConstEn" +
      "try\022\013\n\003key\030\001 \001(\t\022C\n\005value\030\002 \001(\01624.map_te" +
      "st.ReservedAsMapFieldWithEnumValue.Sampl" +
      "eEnum:\0028\001\032d\n\014PrivateEntry\022\013\n\003key\030\001 \001(\t\022C" +
      "\n\005value\030\002 \001(\01624.map_test.ReservedAsMapFi" +
      "eldWithEnumValue.SampleEnum:\0028\001\032b\n\nClass" +
      "Entry\022\013\n\003key\030\001 \001(\t\022C\n\005value\030\002 \001(\01624.map_" +
      "test.ReservedAsMapFieldWithEnumValue.Sam" +
      "pleEnum:\0028\001\032`\n\010IntEntry\022\013\n\003key\030\001 \001(\t\022C\n\005" +
      "value\030\002 \001(\01624.map_test.ReservedAsMapFiel",
      "dWithEnumValue.SampleEnum:\0028\001\032a\n\tVoidEnt" +
      "ry\022\013\n\003key\030\001 \001(\t\022C\n\005value\030\002 \001(\01624.map_tes" +
      "t.ReservedAsMapFieldWithEnumValue.Sample" +
      "Enum:\0028\001\032c\n\013StringEntry\022\013\n\003key\030\001 \001(\t\022C\n\005" +
      "value\030\002 \001(\01624.map_test.ReservedAsMapFiel" +
      "dWithEnumValue.SampleEnum:\0028\001\032d\n\014Package" +
      "Entry\022\013\n\003key\030\001 \001(\t\022C\n\005value\030\002 \001(\01624.map_" +
      "test.ReservedAsMapFieldWithEnumValue.Sam" +
      "pleEnum:\0028\001\032a\n\tEnumEntry\022\013\n\003key\030\001 \001(\t\022C\n" +
      "\005value\030\002 \001(\01624.map_test.ReservedAsMapFie",
      "ldWithEnumValue.SampleEnum:\0028\001\032a\n\tNullEn" +
      "try\022\013\n\003key\030\001 \001(\t\022C\n\005value\030\002 \001(\01624.map_te" +
      "st.ReservedAsMapFieldWithEnumValue.Sampl" +
      "eEnum:\0028\001\"\032\n\nSampleEnum\022\005\n\001A\020\000\022\005\n\001B\020\001B\030\n" +
      "\010map_testB\014MapTestProtob\006proto3"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
    internal_static_map_test_TestMap_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_map_test_TestMap_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_map_test_TestMap_descriptor,
        new java.lang.String[] { "Int32ToInt32Field", "Int32ToStringField", "Int32ToBytesField", "Int32ToEnumField", "Int32ToMessageField", "StringToInt32Field", "Uint32ToInt32Field", "Int64ToInt32Field", });
    internal_static_map_test_TestMap_MessageValue_descriptor =
      internal_static_map_test_TestMap_descriptor.getNestedTypes().get(0);
    internal_static_map_test_TestMap_MessageValue_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_map_test_TestMap_MessageValue_descriptor,
        new java.lang.String[] { "Value", });
    internal_static_map_test_TestMap_Int32ToInt32FieldEntry_descriptor =
      internal_static_map_test_TestMap_descriptor.getNestedTypes().get(1);
    internal_static_map_test_TestMap_Int32ToInt32FieldEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_map_test_TestMap_Int32ToInt32FieldEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_map_test_TestMap_Int32ToStringFieldEntry_descriptor =
      internal_static_map_test_TestMap_descriptor.getNestedTypes().get(2);
    internal_static_map_test_TestMap_Int32ToStringFieldEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_map_test_TestMap_Int32ToStringFieldEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_map_test_TestMap_Int32ToBytesFieldEntry_descriptor =
      internal_static_map_test_TestMap_descriptor.getNestedTypes().get(3);
    internal_static_map_test_TestMap_Int32ToBytesFieldEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_map_test_TestMap_Int32ToBytesFieldEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_map_test_TestMap_Int32ToEnumFieldEntry_descriptor =
      internal_static_map_test_TestMap_descriptor.getNestedTypes().get(4);
    internal_static_map_test_TestMap_Int32ToEnumFieldEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_map_test_TestMap_Int32ToEnumFieldEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_map_test_TestMap_Int32ToMessageFieldEntry_descriptor =
      internal_static_map_test_TestMap_descriptor.getNestedTypes().get(5);
    internal_static_map_test_TestMap_Int32ToMessageFieldEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_map_test_TestMap_Int32ToMessageFieldEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_map_test_TestMap_StringToInt32FieldEntry_descriptor =
      internal_static_map_test_TestMap_descriptor.getNestedTypes().get(6);
    internal_static_map_test_TestMap_StringToInt32FieldEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_map_test_TestMap_StringToInt32FieldEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_map_test_TestMap_Uint32ToInt32FieldEntry_descriptor =
      internal_static_map_test_TestMap_descriptor.getNestedTypes().get(7);
    internal_static_map_test_TestMap_Uint32ToInt32FieldEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_map_test_TestMap_Uint32ToInt32FieldEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_map_test_TestMap_Int64ToInt32FieldEntry_descriptor =
      internal_static_map_test_TestMap_descriptor.getNestedTypes().get(8);
    internal_static_map_test_TestMap_Int64ToInt32FieldEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_map_test_TestMap_Int64ToInt32FieldEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_map_test_TestOnChangeEventPropagation_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_map_test_TestOnChangeEventPropagation_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_map_test_TestOnChangeEventPropagation_descriptor,
        new java.lang.String[] { "OptionalMessage", });
    internal_static_map_test_BizarroTestMap_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_map_test_BizarroTestMap_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_map_test_BizarroTestMap_descriptor,
        new java.lang.String[] { "Int32ToInt32Field", "Int32ToStringField", "Int32ToBytesField", "Int32ToEnumField", "Int32ToMessageField", "StringToInt32Field", });
    internal_static_map_test_BizarroTestMap_Int32ToInt32FieldEntry_descriptor =
      internal_static_map_test_BizarroTestMap_descriptor.getNestedTypes().get(0);
    internal_static_map_test_BizarroTestMap_Int32ToInt32FieldEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_map_test_BizarroTestMap_Int32ToInt32FieldEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_map_test_BizarroTestMap_Int32ToStringFieldEntry_descriptor =
      internal_static_map_test_BizarroTestMap_descriptor.getNestedTypes().get(1);
    internal_static_map_test_BizarroTestMap_Int32ToStringFieldEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_map_test_BizarroTestMap_Int32ToStringFieldEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_map_test_BizarroTestMap_Int32ToBytesFieldEntry_descriptor =
      internal_static_map_test_BizarroTestMap_descriptor.getNestedTypes().get(2);
    internal_static_map_test_BizarroTestMap_Int32ToBytesFieldEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_map_test_BizarroTestMap_Int32ToBytesFieldEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_map_test_BizarroTestMap_Int32ToEnumFieldEntry_descriptor =
      internal_static_map_test_BizarroTestMap_descriptor.getNestedTypes().get(3);
    internal_static_map_test_BizarroTestMap_Int32ToEnumFieldEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_map_test_BizarroTestMap_Int32ToEnumFieldEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_map_test_BizarroTestMap_Int32ToMessageFieldEntry_descriptor =
      internal_static_map_test_BizarroTestMap_descriptor.getNestedTypes().get(4);
    internal_static_map_test_BizarroTestMap_Int32ToMessageFieldEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_map_test_BizarroTestMap_Int32ToMessageFieldEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_map_test_BizarroTestMap_StringToInt32FieldEntry_descriptor =
      internal_static_map_test_BizarroTestMap_descriptor.getNestedTypes().get(5);
    internal_static_map_test_BizarroTestMap_StringToInt32FieldEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_map_test_BizarroTestMap_StringToInt32FieldEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_map_test_ReservedAsMapField_descriptor =
      getDescriptor().getMessageTypes().get(3);
    internal_static_map_test_ReservedAsMapField_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_map_test_ReservedAsMapField_descriptor,
        new java.lang.String[] { "If", "Const", "Private", "Class_", "Int", "Void", "String", "Package", "Enum", "Null", });
    internal_static_map_test_ReservedAsMapField_IfEntry_descriptor =
      internal_static_map_test_ReservedAsMapField_descriptor.getNestedTypes().get(0);
    internal_static_map_test_ReservedAsMapField_IfEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_map_test_ReservedAsMapField_IfEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_map_test_ReservedAsMapField_ConstEntry_descriptor =
      internal_static_map_test_ReservedAsMapField_descriptor.getNestedTypes().get(1);
    internal_static_map_test_ReservedAsMapField_ConstEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_map_test_ReservedAsMapField_ConstEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_map_test_ReservedAsMapField_PrivateEntry_descriptor =
      internal_static_map_test_ReservedAsMapField_descriptor.getNestedTypes().get(2);
    internal_static_map_test_ReservedAsMapField_PrivateEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_map_test_ReservedAsMapField_PrivateEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_map_test_ReservedAsMapField_ClassEntry_descriptor =
      internal_static_map_test_ReservedAsMapField_descriptor.getNestedTypes().get(3);
    internal_static_map_test_ReservedAsMapField_ClassEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_map_test_ReservedAsMapField_ClassEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_map_test_ReservedAsMapField_IntEntry_descriptor =
      internal_static_map_test_ReservedAsMapField_descriptor.getNestedTypes().get(4);
    internal_static_map_test_ReservedAsMapField_IntEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_map_test_ReservedAsMapField_IntEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_map_test_ReservedAsMapField_VoidEntry_descriptor =
      internal_static_map_test_ReservedAsMapField_descriptor.getNestedTypes().get(5);
    internal_static_map_test_ReservedAsMapField_VoidEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_map_test_ReservedAsMapField_VoidEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_map_test_ReservedAsMapField_StringEntry_descriptor =
      internal_static_map_test_ReservedAsMapField_descriptor.getNestedTypes().get(6);
    internal_static_map_test_ReservedAsMapField_StringEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_map_test_ReservedAsMapField_StringEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_map_test_ReservedAsMapField_PackageEntry_descriptor =
      internal_static_map_test_ReservedAsMapField_descriptor.getNestedTypes().get(7);
    internal_static_map_test_ReservedAsMapField_PackageEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_map_test_ReservedAsMapField_PackageEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_map_test_ReservedAsMapField_EnumEntry_descriptor =
      internal_static_map_test_ReservedAsMapField_descriptor.getNestedTypes().get(8);
    internal_static_map_test_ReservedAsMapField_EnumEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_map_test_ReservedAsMapField_EnumEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_map_test_ReservedAsMapField_NullEntry_descriptor =
      internal_static_map_test_ReservedAsMapField_descriptor.getNestedTypes().get(9);
    internal_static_map_test_ReservedAsMapField_NullEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_map_test_ReservedAsMapField_NullEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_map_test_ReservedAsMapFieldWithEnumValue_descriptor =
      getDescriptor().getMessageTypes().get(4);
    internal_static_map_test_ReservedAsMapFieldWithEnumValue_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_map_test_ReservedAsMapFieldWithEnumValue_descriptor,
        new java.lang.String[] { "If", "Const", "Private", "Class_", "Int", "Void", "String", "Package", "Enum", "Null", });
    internal_static_map_test_ReservedAsMapFieldWithEnumValue_IfEntry_descriptor =
      internal_static_map_test_ReservedAsMapFieldWithEnumValue_descriptor.getNestedTypes().get(0);
    internal_static_map_test_ReservedAsMapFieldWithEnumValue_IfEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_map_test_ReservedAsMapFieldWithEnumValue_IfEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_map_test_ReservedAsMapFieldWithEnumValue_ConstEntry_descriptor =
      internal_static_map_test_ReservedAsMapFieldWithEnumValue_descriptor.getNestedTypes().get(1);
    internal_static_map_test_ReservedAsMapFieldWithEnumValue_ConstEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_map_test_ReservedAsMapFieldWithEnumValue_ConstEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_map_test_ReservedAsMapFieldWithEnumValue_PrivateEntry_descriptor =
      internal_static_map_test_ReservedAsMapFieldWithEnumValue_descriptor.getNestedTypes().get(2);
    internal_static_map_test_ReservedAsMapFieldWithEnumValue_PrivateEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_map_test_ReservedAsMapFieldWithEnumValue_PrivateEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_map_test_ReservedAsMapFieldWithEnumValue_ClassEntry_descriptor =
      internal_static_map_test_ReservedAsMapFieldWithEnumValue_descriptor.getNestedTypes().get(3);
    internal_static_map_test_ReservedAsMapFieldWithEnumValue_ClassEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_map_test_ReservedAsMapFieldWithEnumValue_ClassEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_map_test_ReservedAsMapFieldWithEnumValue_IntEntry_descriptor =
      internal_static_map_test_ReservedAsMapFieldWithEnumValue_descriptor.getNestedTypes().get(4);
    internal_static_map_test_ReservedAsMapFieldWithEnumValue_IntEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_map_test_ReservedAsMapFieldWithEnumValue_IntEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_map_test_ReservedAsMapFieldWithEnumValue_VoidEntry_descriptor =
      internal_static_map_test_ReservedAsMapFieldWithEnumValue_descriptor.getNestedTypes().get(5);
    internal_static_map_test_ReservedAsMapFieldWithEnumValue_VoidEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_map_test_ReservedAsMapFieldWithEnumValue_VoidEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_map_test_ReservedAsMapFieldWithEnumValue_StringEntry_descriptor =
      internal_static_map_test_ReservedAsMapFieldWithEnumValue_descriptor.getNestedTypes().get(6);
    internal_static_map_test_ReservedAsMapFieldWithEnumValue_StringEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_map_test_ReservedAsMapFieldWithEnumValue_StringEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_map_test_ReservedAsMapFieldWithEnumValue_PackageEntry_descriptor =
      internal_static_map_test_ReservedAsMapFieldWithEnumValue_descriptor.getNestedTypes().get(7);
    internal_static_map_test_ReservedAsMapFieldWithEnumValue_PackageEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_map_test_ReservedAsMapFieldWithEnumValue_PackageEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_map_test_ReservedAsMapFieldWithEnumValue_EnumEntry_descriptor =
      internal_static_map_test_ReservedAsMapFieldWithEnumValue_descriptor.getNestedTypes().get(8);
    internal_static_map_test_ReservedAsMapFieldWithEnumValue_EnumEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_map_test_ReservedAsMapFieldWithEnumValue_EnumEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_map_test_ReservedAsMapFieldWithEnumValue_NullEntry_descriptor =
      internal_static_map_test_ReservedAsMapFieldWithEnumValue_descriptor.getNestedTypes().get(9);
    internal_static_map_test_ReservedAsMapFieldWithEnumValue_NullEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_map_test_ReservedAsMapFieldWithEnumValue_NullEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
